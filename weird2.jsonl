{"type": "info", "run_start": 1709743647.061399, "property": "run_state_machine", "title": "Hypothesis Statistics", "content": "  - during generate phase (27.40 seconds):\n    - Typical runtimes: ~ 4-260 ms, of which ~ 0-252 ms in data generation\n    - 100 passing examples, 0 failing examples, 8 invalid examples\n    - Events:\n      * 93.52%, Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter\n      * 47.22%, Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter\n      * 45.37%, failures: 0\n      * 37.96%, len: 50\n      * 13.89%, len: 48\n      * 10.19%, failures: 2\n      * 8.33%, failures: 1\n      * 8.33%, failures: 3\n      * 8.33%, len: 47\n      * 7.41%, failures: 4\n      * 7.41%, len: 0\n      * 7.41%, len: 46\n      * 4.63%, failures: 8\n      * 4.63%, failures: 9\n      * 4.63%, len: 41\n      * 4.63%, len: 42\n      * 3.70%, failures: 10\n      * 3.70%, failures: 12\n      * 3.70%, len: 38\n      * 3.70%, len: 40\n      * 3.70%, len: 49\n      * 1.85%, failures: 6\n      * 1.85%, len: 44\n      * 0.93%, failures: 5\n      * 0.93%, failures: 7\n      * 0.93%, len: 12\n      * 0.93%, len: 43\n      * 0.93%, len: 45\n\n  - Stopped because settings.max_examples=100"}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.007073588436469436, "generate:data": 0.00032824999652802944, "generate:rule:where_is": 6.896278995554894, "execute:rule:where_is": 0.0003182990476489067}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005765791051089764, "generate:data": 5.8582983911037445e-05, "generate:rule:where_is": 0.1531902509741485, "execute:rule:where_is": 0.0003166669048368931}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.003432667115703225, "generate:data": 4.3582869693636894e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005773874698206782, "generate:data": 4.179216921329498e-05, "generate:rule:where_is": 0.15164975030347705, "execute:rule:where_is": 0.00031991442665457726}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='oe', pid=-8724)\nnames_1 = state.register(name='umfnm', pid=-962006902)\nnames_2 = state.register(name='', pid=-80)\nnames_3 = state.register(name='k', pid=-114)\nnames_4 = state.register(name='jkraejfi', pid=-17805)\nnames_5 = state.register(name='ybtfrngtoxceqlfntc', pid=-27527)\nnames_6 = state.register(name='hwcsalcbfqriuc', pid=-127)\nnames_7 = state.register(name='nptk', pid=-4930565292598809043)\nnames_8 = state.register(name='xpdla', pid=81)\nnames_9 = state.register(name='bn', pid=4475)\nnames_10 = state.register(name=names_2, pid=111)\nnames_11 = state.register(name=names_2, pid=-3)\nnames_12 = state.register(name='e', pid=-22003)\nnames_13 = state.register(name='edhfv', pid=-31)\nnames_14 = state.register(name='xbjryqcuyal', pid=-27060)\nnames_15 = state.register(name='ul', pid=-30641)\nnames_16 = state.register(name='fhl', pid=-14188)\nnames_17 = state.register(name='akg', pid=2861)\nnames_18 = state.register(name='ptr', pid=6607)\nnames_19 = state.register(name=names_2, pid=20696)\nnames_20 = state.register(name='ftnsjfekbnqmylyrywgihtlcfnuwcbz', pid=-6775)\nnames_21 = state.register(name='oghvdrb', pid=74)\nnames_22 = state.register(name=names_2, pid=68)\nnames_23 = state.register(name='ncp', pid=12859)\nnames_24 = state.register(name='sxno', pid=-25988)\nnames_25 = state.register(name='gczaim', pid=-21160)\nnames_26 = state.register(name=names_2, pid=26374855185581044182003205757764063135)\nnames_27 = state.register(name='cfs', pid=-33)\nnames_28 = state.register(name='vxderlvwsnfa', pid=-35)\nnames_29 = state.register(name='pefqxaoedhfbhmu', pid=-24526)\nnames_30 = state.register(name='xqhhqrofptm', pid=26549)\nnames_31 = state.register(name=names_2, pid=26)\nnames_32 = state.register(name='ikbztiexkevbvj', pid=-25659)\nnames_33 = state.register(name='flisemlr', pid=6806)\nnames_34 = state.register(name='ey', pid=-674601083)\nnames_35 = state.register(name='drtvymo', pid=10206)\nnames_36 = state.register(name='l', pid=125)\nnames_37 = state.register(name='uja', pid=-11430)\nnames_38 = state.register(name=names_2, pid=31601)\nnames_39 = state.register(name='uwykivp', pid=-4328849280327017362)\nnames_40 = state.register(name=names_2, pid=-2937)\nnames_41 = state.register(name='hbsquhtmomulohtm', pid=106)\nnames_42 = state.register(name='u', pid=30130)\nnames_43 = state.register(name='hvthirttxccpg', pid=-100)\nnames_44 = state.register(name='okbmsackswklh', pid=-27)\nnames_45 = state.register(name='yapelnngo', pid=-4176)\nnames_46 = state.register(name='hjvfvkbrpc', pid=-11541)\nnames_47 = state.register(name=names_2, pid=-7015531358044462602)\nnames_48 = state.register(name='jndu', pid=-6)\nnames_49 = state.register(name=names_2, pid=-7293)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 40, "failures": 10}, "timing": {"execute:test": 0.009238707832992077, "generate:data": 4.283408634364605e-05, "generate:rule:register": 0.23895575013011694, "execute:rule:register": 0.0004105009138584137}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005771417403593659, "generate:data": 4.437495954334736e-05, "generate:rule:where_is": 0.15023887366987765, "execute:rule:where_is": 0.0003187896218150854}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.0032313750125467777, "generate:data": 4.449998959898949e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005819868063554168, "generate:data": 4.308391362428665e-05, "generate:rule:where_is": 0.1633505488280207, "execute:rule:where_is": 0.0003223742824047804}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='rimykrcgig')\nnames_0 = state.register(name='l', pid=11674)\nstate.where_is(name=names_0)\nstate.unregister(name=names_0)\nstate.where_is(name='jsd')\nnames_1 = state.register(name='wyw', pid=-15138)\nstate.unregister(name=names_1)\nstate.where_is(name='')\nnames_2 = state.register(name='', pid=5292171390064275129)\nstate.unregister(name=names_2)\nnames_3 = state.register(name=names_2, pid=-26534)\nstate.where_is(name=names_2)\nnames_4 = state.register(name=names_2, pid=9557)\nnames_5 = state.register(name='wf', pid=684546214)\nnames_6 = state.register(name=names_2, pid=-5404)\nstate.unregister(name=names_6)\nnames_7 = state.register(name='f', pid=15447)\nstate.where_is(name=names_7)\nstate.unregister(name=names_3)\nnames_8 = state.register(name='hrxuk', pid=19)\nstate.unregister(name=names_4)\nstate.where_is(name='avwh')\nstate.unregister(name=names_5)\nnames_9 = state.register(name=names_2, pid=-10085)\nstate.unregister(name=names_9)\nstate.unregister(name=names_7)\nstate.where_is(name=names_8)\nnames_10 = state.register(name='ql', pid=8544)\nnames_11 = state.register(name='drqn', pid=-6764)\nstate.unregister(name=names_10)\nnames_12 = state.register(name='dcmjxymop', pid=10292)\nstate.where_is(name=names_11)\nstate.where_is(name='if')\nnames_13 = state.register(name='thj', pid=975905213)\nnames_14 = state.register(name='axb', pid=7224978219952342171)\nstate.unregister(name=names_12)\nstate.where_is(name='pt')\nstate.where_is(name='aqmpgokmpkxp')\nnames_15 = state.register(name='xrr', pid=-21397)\nstate.where_is(name='lqq')\nstate.where_is(name='i')\nnames_16 = state.register(name='fumg', pid=-1166307537)\nstate.where_is(name=names_15)\nnames_17 = state.register(name='d', pid=-28602)\nnames_18 = state.register(name='bzl', pid=15)\nnames_19 = state.register(name='umxqk', pid=14369)\nstate.unregister(name=names_13)\nnames_20 = state.register(name='zq', pid=-103)\nstate.where_is(name=names_14)\nnames_21 = state.register(name='vygbogtm', pid=-25995)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 46, "failures": 4}, "timing": {"execute:test": 0.006802999880164862, "generate:data": 4.3082982301712036e-05, "generate:rule:where_is": 0.05092549929395318, "generate:rule:register": 0.07019458594731987, "generate:rule:unregister": 0.020169706782326102, "execute:rule:where_is": 0.00010696053504943848, "execute:rule:register": 0.00017504370771348476, "execute:rule:unregister": 9.133364073932171e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0059711632784456015, "generate:data": 4.4459011405706406e-05, "generate:rule:where_is": 0.152225628728047, "execute:rule:where_is": 0.0003307552542537451}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.0029434170573949814, "generate:data": 4.733284004032612e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.00584778911434114, "generate:data": 4.25421167165041e-05, "generate:rule:where_is": 0.15183004410937428, "execute:rule:where_is": 0.0003243351820856333}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.003124458948150277, "generate:data": 4.375004209578037e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005797538673505187, "generate:data": 4.2833853513002396e-05, "generate:rule:where_is": 0.14968887832947075, "execute:rule:where_is": 0.00032016471959650517}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='foa', pid=-29989)\nnames_1 = state.register(name='p', pid=60)\nnames_2 = state.register(name='tmekwvu', pid=-95)\nnames_3 = state.register(name='ru', pid=-117)\nnames_4 = state.register(name='yhcuxmy', pid=93)\nnames_5 = state.register(name='', pid=804591842504870713)\nnames_6 = state.register(name='rluhf', pid=24874)\nnames_7 = state.register(name='smoivn', pid=18131)\nnames_8 = state.register(name='tp', pid=12272)\nnames_9 = state.register(name='tsrmxygifofqvutliytz', pid=26424)\nnames_10 = state.register(name='hrdcvuqhi', pid=-28640)\nnames_11 = state.register(name='uno', pid=31347)\nnames_12 = state.register(name='abede', pid=115289397584974304256022792564051133687)\nnames_13 = state.register(name='zkndkya', pid=-1803792366142631424)\nnames_14 = state.register(name='hhlacfsb', pid=29613)\nnames_15 = state.register(name='i', pid=99)\nnames_16 = state.register(name='j', pid=-11153)\nnames_17 = state.register(name='elcdt', pid=805)\nnames_18 = state.register(name='gummfu', pid=28491)\nnames_19 = state.register(name=names_5, pid=31)\nnames_20 = state.register(name='hmss', pid=-1838738176672059541)\nnames_21 = state.register(name='v', pid=-4)\nnames_22 = state.register(name=names_5, pid=-30341)\nnames_23 = state.register(name='ssidy', pid=1645636460)\nnames_24 = state.register(name='put', pid=-9558)\nnames_25 = state.register(name='fhmejunekw', pid=23116)\nnames_26 = state.register(name='brffesw', pid=15222)\nnames_27 = state.register(name='jovkdoq', pid=-6374)\nnames_28 = state.register(name='kldnxx', pid=-49895049504382540741001884860322274211)\nnames_29 = state.register(name=names_5, pid=-27505)\nnames_30 = state.register(name='nszb', pid=55)\nnames_31 = state.register(name='wum', pid=28821)\nnames_32 = state.register(name=names_5, pid=27087)\nnames_33 = state.register(name='nedffe', pid=14248)\nnames_34 = state.register(name='rjwa', pid=7539)\nnames_35 = state.register(name='atzwetgeub', pid=-17000)\nnames_36 = state.register(name='djviyapyqlgnqmwkpybfzssmjqobjlo', pid=-87)\nnames_37 = state.register(name='vhhj', pid=-14890)\nnames_38 = state.register(name=names_5, pid=14363)\nnames_39 = state.register(name='eiz', pid=19672)\nnames_40 = state.register(name='xm', pid=32)\nnames_41 = state.register(name='aqmgysvfx', pid=9898)\nnames_42 = state.register(name=names_5, pid=4)\nnames_43 = state.register(name='c', pid=-18948)\nnames_44 = state.register(name='u', pid=-21824)\nnames_45 = state.register(name='xsqwshf', pid=1394260844245121189)\nnames_46 = state.register(name='it', pid=-13600)\nnames_47 = state.register(name=names_5, pid=-7908)\nnames_48 = state.register(name='wozora', pid=213)\nnames_49 = state.register(name='iy', pid=-7934)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 43, "failures": 7}, "timing": {"execute:test": 0.008995622862130404, "generate:data": 4.429183900356293e-05, "generate:rule:register": 0.2141302521340549, "execute:rule:register": 0.00039658439345657825}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='foa', pid=-29989)\nnames_1 = state.register(name='p', pid=60)\nnames_2 = state.register(name='tmekwvu', pid=-95)\nnames_3 = state.register(name='ru', pid=-117)\nnames_4 = state.register(name='yhcuxmy', pid=93)\nnames_5 = state.register(name='', pid=804591842504870713)\nnames_6 = state.register(name='rluhf', pid=24874)\nnames_7 = state.register(name='smoivn', pid=18131)\nnames_8 = state.register(name='tp', pid=12272)\nnames_9 = state.register(name='tsrmxygifofqvutliytz', pid=26424)\nnames_10 = state.register(name='hrdcvuqhi', pid=-28640)\nnames_11 = state.register(name='uno', pid=31347)\nnames_12 = state.register(name='abede', pid=115289397584974304256022792564051133687)\nnames_13 = state.register(name='zkndkya', pid=-1803792366142631424)\nnames_14 = state.register(name='hhlacfsb', pid=29613)\nnames_15 = state.register(name='i', pid=99)\nnames_16 = state.register(name='j', pid=-11153)\nnames_17 = state.register(name='elcdt', pid=805)\nnames_18 = state.register(name='gummfu', pid=28491)\nnames_19 = state.register(name=names_5, pid=31)\nnames_20 = state.register(name='hmss', pid=-1838738176672059541)\nnames_21 = state.register(name='tp', pid=12272)\nnames_22 = state.register(name=names_5, pid=-30341)\nnames_23 = state.register(name='ssidy', pid=1645636460)\nnames_24 = state.register(name='put', pid=-9558)\nnames_25 = state.register(name='fhmejunekw', pid=23116)\nnames_26 = state.register(name='brffesw', pid=15222)\nnames_27 = state.register(name='jovkdoq', pid=-6374)\nnames_28 = state.register(name='kldnxx', pid=-49895049504382540741001884860322274211)\nnames_29 = state.register(name=names_5, pid=-27505)\nnames_30 = state.register(name='nszb', pid=55)\nnames_31 = state.register(name='wum', pid=28821)\nnames_32 = state.register(name=names_5, pid=27087)\nnames_33 = state.register(name='nedffe', pid=14248)\nnames_34 = state.register(name='rjwa', pid=7539)\nnames_35 = state.register(name='atzwetgeub', pid=-17000)\nnames_36 = state.register(name='djviyapyqlgnqmwkpybfzssmjqobjlo', pid=-87)\nnames_37 = state.register(name='vhhj', pid=-14890)\nnames_38 = state.register(name=names_5, pid=14363)\nnames_39 = state.register(name='eiz', pid=19672)\nnames_40 = state.register(name='xm', pid=32)\nnames_41 = state.register(name='aqmgysvfx', pid=9898)\nnames_42 = state.register(name=names_5, pid=4)\nnames_43 = state.register(name='c', pid=-18948)\nnames_44 = state.register(name='u', pid=-21824)\nnames_45 = state.register(name='xsqwshf', pid=1394260844245121189)\nnames_46 = state.register(name='it', pid=-13600)\nnames_47 = state.register(name=names_5, pid=-7908)\nnames_48 = state.register(name='wozora', pid=213)\nnames_49 = state.register(name='iy', pid=-7934)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 42, "failures": 8}, "timing": {"execute:test": 0.009013792034238577, "generate:data": 4.5666005462408066e-05, "generate:rule:register": 0.2136534999590367, "execute:rule:register": 0.0003935860004276037}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='foa', pid=-29989)\nnames_1 = state.register(name='p', pid=60)\nnames_2 = state.register(name='tmekwvu', pid=-95)\nnames_3 = state.register(name='ru', pid=-117)\nnames_4 = state.register(name='yhcuxmy', pid=93)\nnames_5 = state.register(name='', pid=804591842504870713)\nnames_6 = state.register(name='rluhf', pid=24874)\nnames_7 = state.register(name='smoivn', pid=18131)\nnames_8 = state.register(name='tp', pid=12272)\nnames_9 = state.register(name='tsrmxygifofqvutliytz', pid=26424)\nnames_10 = state.register(name='hrdcvuqhi', pid=-28640)\nnames_11 = state.register(name='uno', pid=31347)\nnames_12 = state.register(name='abede', pid=115289397584974304256022792564051133687)\nnames_13 = state.register(name='zkndkya', pid=-1803792366142631424)\nnames_14 = state.register(name='hhlacfsb', pid=29613)\nnames_15 = state.register(name='i', pid=99)\nnames_16 = state.register(name='j', pid=-11153)\nnames_17 = state.register(name='elcdt', pid=805)\nnames_18 = state.register(name='gummfu', pid=28491)\nnames_19 = state.register(name=names_5, pid=31)\nnames_20 = state.register(name='hmss', pid=-1838738176672059541)\nnames_21 = state.register(name='tp', pid=12272)\nnames_22 = state.register(name=names_5, pid=-30341)\nnames_23 = state.register(name='ssidy', pid=1645636460)\nnames_24 = state.register(name='put', pid=-9558)\nnames_25 = state.register(name='fhmejunekw', pid=23116)\nnames_26 = state.register(name='brffesw', pid=15222)\nnames_27 = state.register(name='jovkdoq', pid=-6374)\nnames_28 = state.register(name='kldnxx', pid=-49895049504382540741001884860322274211)\nnames_29 = state.register(name=names_5, pid=-27505)\nnames_30 = state.register(name='nszb', pid=55)\nnames_31 = state.register(name='wum', pid=28821)\nnames_32 = state.register(name=names_5, pid=27087)\nnames_33 = state.register(name='nedffe', pid=14248)\nnames_34 = state.register(name='rjwa', pid=7539)\nnames_35 = state.register(name='atzwetgeub', pid=-17000)\nnames_36 = state.register(name='djviyapyqlgnqmwkpybfzssmjqobjlo', pid=-87)\nnames_37 = state.register(name='vhhj', pid=-14890)\nnames_38 = state.register(name=names_5, pid=14363)\nnames_39 = state.register(name='eiz', pid=19672)\nnames_40 = state.register(name='xm', pid=32)\nnames_41 = state.register(name='aqmgysvfx', pid=9898)\nnames_42 = state.register(name=names_5, pid=4)\nnames_43 = state.register(name='c', pid=-18948)\nnames_44 = state.register(name='u', pid=-21824)\nnames_45 = state.register(name='xsqwshf', pid=1394260844245121189)\nnames_46 = state.register(name='it', pid=-13600)\nnames_47 = state.register(name=names_5, pid=-7908)\nnames_48 = state.register(name='wozora', pid=213)\nnames_49 = state.register(name='iy', pid=-7934)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 42, "failures": 8}, "timing": {"execute:test": 0.00896633043885231, "generate:data": 4.433281719684601e-05, "generate:rule:register": 0.2165700444020331, "execute:rule:register": 0.00039258762262761593}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='foa', pid=-29989)\nnames_1 = state.register(name='p', pid=60)\nnames_2 = state.register(name='tmekwvu', pid=-95)\nnames_3 = state.register(name='ru', pid=-117)\nnames_4 = state.register(name='yhcuxmy', pid=93)\nnames_5 = state.register(name='', pid=804591842504870713)\nnames_6 = state.register(name='rluhf', pid=24874)\nnames_7 = state.register(name='smoivn', pid=18131)\nnames_8 = state.register(name='tp', pid=12272)\nnames_9 = state.register(name='tsrmxygifofqvutliytz', pid=26424)\nnames_10 = state.register(name='hrdcvuqhi', pid=-28640)\nnames_11 = state.register(name='uno', pid=31347)\nnames_12 = state.register(name='abede', pid=115289397584974304256022792564051133687)\nnames_13 = state.register(name='zkndkya', pid=-1803792366142631424)\nnames_14 = state.register(name='hhlacfsb', pid=29613)\nnames_15 = state.register(name='i', pid=99)\nnames_16 = state.register(name='j', pid=-11153)\nnames_17 = state.register(name='elcdt', pid=805)\nnames_18 = state.register(name='gummfu', pid=28491)\nnames_19 = state.register(name=names_5, pid=31)\nnames_20 = state.register(name=names_16, pid=-1838738176672059541)\nnames_21 = state.register(name='tp', pid=12272)\nnames_22 = state.register(name=names_5, pid=-30341)\nnames_23 = state.register(name='ssidy', pid=1645636460)\nnames_24 = state.register(name='put', pid=-9558)\nnames_25 = state.register(name='fhmejunekw', pid=23116)\nnames_26 = state.register(name='brffesw', pid=15222)\nnames_27 = state.register(name='jovkdoq', pid=-6374)\nnames_28 = state.register(name='kldnxx', pid=-49895049504382540741001884860322274211)\nnames_29 = state.register(name=names_5, pid=-27505)\nnames_30 = state.register(name='nszb', pid=55)\nnames_31 = state.register(name='wum', pid=28821)\nnames_32 = state.register(name=names_5, pid=27087)\nnames_33 = state.register(name='nedffe', pid=14248)\nnames_34 = state.register(name='rjwa', pid=7539)\nnames_35 = state.register(name='atzwetgeub', pid=-17000)\nnames_36 = state.register(name='djviyapyqlgnqmwkpybfzssmjqobjlo', pid=-87)\nnames_37 = state.register(name='vhhj', pid=-14890)\nnames_38 = state.register(name=names_5, pid=14363)\nnames_39 = state.register(name='eiz', pid=19672)\nnames_40 = state.register(name='xm', pid=32)\nnames_41 = state.register(name='aqmgysvfx', pid=9898)\nnames_42 = state.register(name=names_5, pid=4)\nnames_43 = state.register(name='c', pid=-18948)\nnames_44 = state.register(name='u', pid=-21824)\nnames_45 = state.register(name='xsqwshf', pid=1394260844245121189)\nnames_46 = state.register(name='it', pid=-13600)\nnames_47 = state.register(name=names_5, pid=-7908)\nnames_48 = state.register(name='wozora', pid=213)\nnames_49 = state.register(name='iy', pid=-7934)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 41, "failures": 9}, "timing": {"execute:test": 0.008825748460367322, "generate:data": 4.4208019971847534e-05, "generate:rule:register": 0.21108070947229862, "execute:rule:register": 0.0003889163490384817}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='foa', pid=-29989)\nnames_1 = state.register(name='p', pid=60)\nnames_2 = state.register(name='tmekwvu', pid=-95)\nnames_3 = state.register(name='ru', pid=-117)\nnames_4 = state.register(name='yhcuxmy', pid=93)\nnames_5 = state.register(name='', pid=804591842504870713)\nnames_6 = state.register(name='rluhf', pid=24874)\nnames_7 = state.register(name='smoivn', pid=18131)\nnames_8 = state.register(name='tp', pid=12272)\nnames_9 = state.register(name='tsrmxygifofqvutliytz', pid=26424)\nnames_10 = state.register(name='hrdcvuqhi', pid=-28640)\nnames_11 = state.register(name='uno', pid=31347)\nnames_12 = state.register(name='abede', pid=115289397584974304256022792564051133687)\nnames_13 = state.register(name='zkndkya', pid=-1803792366142631424)\nnames_14 = state.register(name='hhlacfsb', pid=29613)\nnames_15 = state.register(name='i', pid=99)\nnames_16 = state.register(name='j', pid=-57913153016276116068585886201252282882)\nnames_17 = state.register(name='dt', pid=805)\nnames_18 = state.register(name='gummfu', pid=28491)\nnames_19 = state.register(name=names_5, pid=31)\nnames_20 = state.register(name=names_16, pid=-1838738176672059541)\nnames_21 = state.register(name='tp', pid=12272)\nnames_22 = state.register(name=names_5, pid=-30341)\nnames_23 = state.register(name='ssidy', pid=1645636460)\nnames_24 = state.register(name='put', pid=-9558)\nnames_25 = state.register(name='fhmejunekw', pid=23116)\nnames_26 = state.register(name='brffesw', pid=15222)\nnames_27 = state.register(name='jovkdoq', pid=-6374)\nnames_28 = state.register(name='kldnxx', pid=-49895049504382540741001884860322274211)\nnames_29 = state.register(name=names_5, pid=-27505)\nnames_30 = state.register(name='nszb', pid=55)\nnames_31 = state.register(name='wum', pid=28821)\nnames_32 = state.register(name=names_5, pid=27087)\nnames_33 = state.register(name='nedffe', pid=14248)\nnames_34 = state.register(name='rjwa', pid=7539)\nnames_35 = state.register(name='atzwetgeub', pid=-17000)\nnames_36 = state.register(name='djviyapyqlgnqmwkpybfzssmjqobjlo', pid=-87)\nnames_37 = state.register(name='vhhj', pid=-14890)\nnames_38 = state.register(name=names_5, pid=14363)\nnames_39 = state.register(name='eiz', pid=19672)\nnames_40 = state.register(name='xm', pid=32)\nnames_41 = state.register(name='aqmgysvfx', pid=9898)\nnames_42 = state.register(name=names_5, pid=4)\nnames_43 = state.register(name='c', pid=-18948)\nnames_44 = state.register(name='u', pid=-21824)\nnames_45 = state.register(name='xsqwshf', pid=1394260844245121189)\nnames_46 = state.register(name='it', pid=-13600)\nnames_47 = state.register(name=names_5, pid=-7908)\nnames_48 = state.register(name='wozora', pid=213)\nnames_49 = state.register(name='iy', pid=-7934)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 41, "failures": 9}, "timing": {"execute:test": 0.00881512789055705, "generate:data": 4.329090006649494e-05, "generate:rule:register": 0.2103046220727265, "execute:rule:register": 0.0004014214500784874}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='foa', pid=-29989)\nnames_1 = state.register(name='p', pid=60)\nnames_2 = state.register(name='tmekwvu', pid=-95)\nnames_3 = state.register(name='ru', pid=-117)\nnames_4 = state.register(name='yhcuxmy', pid=93)\nnames_5 = state.register(name='', pid=804591842504870713)\nnames_6 = state.register(name='rluhf', pid=24874)\nnames_7 = state.register(name='smoivn', pid=18131)\nnames_8 = state.register(name='tp', pid=12272)\nnames_9 = state.register(name='tsrmxygifofqvutliytz', pid=26424)\nnames_10 = state.register(name='hrdcvuqhi', pid=-28640)\nnames_11 = state.register(name='uno', pid=31347)\nnames_12 = state.register(name='abede', pid=115289397584974304256022792564051133687)\nnames_13 = state.register(name='zkndkya', pid=-1803792366142631424)\nnames_14 = state.register(name='hhlacfsb', pid=29613)\nnames_15 = state.register(name='i', pid=99)\nnames_16 = state.register(name='j', pid=-57913153016276116068585886201252282882)\nnames_17 = state.register(name='dt', pid=805)\nnames_18 = state.register(name='gummfu', pid=28491)\nnames_19 = state.register(name=names_5, pid=31)\nnames_20 = state.register(name=names_16, pid=-1838738176672059541)\nnames_21 = state.register(name='tp', pid=12272)\nnames_22 = state.register(name=names_5, pid=-30341)\nnames_23 = state.register(name='ssidy', pid=1645636460)\nnames_24 = state.register(name='put', pid=-9558)\nnames_25 = state.register(name='fhmejunekw', pid=23116)\nnames_26 = state.register(name='brffesw', pid=15222)\nnames_27 = state.register(name='jovkdoq', pid=-6374)\nnames_28 = state.register(name='kldnxx', pid=-49895049504382540741001884860322274211)\nnames_29 = state.register(name=names_5, pid=-27505)\nnames_30 = state.register(name='nszb', pid=55)\nnames_31 = state.register(name='wum', pid=28821)\nnames_32 = state.register(name=names_5, pid=27087)\nnames_33 = state.register(name='nedffe', pid=14248)\nnames_34 = state.register(name='rjwa', pid=7539)\nnames_35 = state.register(name='atzwetgeub', pid=-17000)\nnames_36 = state.register(name='djviyapyqlgnqmwkpybfzssmjqobjlt', pid=-87)\nnames_37 = state.register(name='vhhj', pid=-14890)\nnames_38 = state.register(name=names_5, pid=14363)\nnames_39 = state.register(name='eiz', pid=19672)\nnames_40 = state.register(name='xm', pid=32)\nnames_41 = state.register(name='aqmgysvfx', pid=9898)\nnames_42 = state.register(name=names_5, pid=4)\nnames_43 = state.register(name='c', pid=-18948)\nnames_44 = state.register(name='u', pid=-21824)\nnames_45 = state.register(name='xsqwshf', pid=1394260844245121189)\nnames_46 = state.register(name='it', pid=-13600)\nnames_47 = state.register(name=names_5, pid=-7908)\nnames_48 = state.register(name='wozora', pid=213)\nnames_49 = state.register(name='iy', pid=-7934)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 41, "failures": 9}, "timing": {"execute:test": 0.008867171360179782, "generate:data": 4.4459011405706406e-05, "generate:rule:register": 0.2086174536962062, "execute:rule:register": 0.0003957508597522974}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='foa', pid=-29989)\nnames_1 = state.register(name='p', pid=60)\nnames_2 = state.register(name='tmekwvu', pid=-95)\nnames_3 = state.register(name='ru', pid=-117)\nnames_4 = state.register(name='yhcuxmy', pid=93)\nnames_5 = state.register(name='', pid=804591842504870713)\nnames_6 = state.register(name='rluhf', pid=24874)\nnames_7 = state.register(name='smoivn', pid=18131)\nnames_8 = state.register(name='tp', pid=12272)\nnames_9 = state.register(name='tsrmxygifofqvutliytz', pid=26424)\nnames_10 = state.register(name='hrdcvuqhi', pid=-28640)\nnames_11 = state.register(name='uno', pid=31347)\nnames_12 = state.register(name='abede', pid=115289397584974304256022792564051133687)\nnames_13 = state.register(name='zkndkya', pid=-1803792366142631424)\nnames_14 = state.register(name='hhlacfsb', pid=29613)\nnames_15 = state.register(name='i', pid=99)\nnames_16 = state.register(name='j', pid=-57913153016276116068585886201252282882)\nnames_17 = state.register(name='dt', pid=805)\nnames_18 = state.register(name='gummfu', pid=28491)\nnames_19 = state.register(name=names_5, pid=31)\nnames_20 = state.register(name=names_16, pid=-1838738176672059541)\nnames_21 = state.register(name='tp', pid=12272)\nnames_22 = state.register(name=names_5, pid=-30341)\nnames_23 = state.register(name='ssidy', pid=1645636460)\nnames_24 = state.register(name='put', pid=-9558)\nnames_25 = state.register(name='fhmejunekw', pid=23116)\nnames_26 = state.register(name='brffesw', pid=15222)\nnames_27 = state.register(name='jovkdoq', pid=-6374)\nnames_28 = state.register(name='kldnxx', pid=-49895049504382540741001884860322274211)\nnames_29 = state.register(name=names_5, pid=-27505)\nnames_30 = state.register(name='nszb', pid=55)\nnames_31 = state.register(name='wum', pid=28821)\nnames_32 = state.register(name=names_5, pid=27087)\nnames_33 = state.register(name='nedffe', pid=14248)\nnames_34 = state.register(name='rjwa', pid=7539)\nnames_35 = state.register(name='atzwetgeub', pid=-17000)\nnames_36 = state.register(name='djviyapyglgnqmwkpybfzssmjqobjlt', pid=-87)\nnames_37 = state.register(name='vhhj', pid=-14890)\nnames_38 = state.register(name=names_5, pid=14363)\nnames_39 = state.register(name='eiz', pid=19672)\nnames_40 = state.register(name='xm', pid=32)\nnames_41 = state.register(name='aqmgysvfx', pid=9898)\nnames_42 = state.register(name=names_5, pid=4)\nnames_43 = state.register(name='c', pid=-18948)\nnames_44 = state.register(name='u', pid=-21824)\nnames_45 = state.register(name='xsqwshf', pid=1394260844245121189)\nnames_46 = state.register(name='it', pid=-13600)\nnames_47 = state.register(name=names_5, pid=-7908)\nnames_48 = state.register(name='wozora', pid=213)\nnames_49 = state.register(name='iy', pid=-7934)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 41, "failures": 9}, "timing": {"execute:test": 0.008929247967898846, "generate:data": 4.458380863070488e-05, "generate:rule:register": 0.20891241822391748, "execute:rule:register": 0.00040008360520005226}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nnames_0 = state.register(name='uvd', pid=36)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='kcvfysqbgbxsl', pid=-21802)\nstate.where_is(name='qnts')\nstate.unregister(name=names_1)\nnames_2 = state.register(name='chgvtywcjfrh', pid=10322)\nstate.unregister(name=names_2)\nstate.where_is(name='o')\nstate.where_is(name='ubkij')\nnames_3 = state.register(name='a', pid=-26603)\nstate.where_is(name='ruo')\nstate.where_is(name='ks')\nnames_4 = state.register(name='', pid=2701)\nstate.where_is(name='vovtg')\nnames_5 = state.register(name=names_4, pid=2715697723577619996)\nnames_6 = state.register(name='jri', pid=4213)\nnames_7 = state.register(name='aecdnxsebudzb', pid=-67440241)\nstate.unregister(name=names_4)\nnames_8 = state.register(name=names_4, pid=4014799179487872744)\nstate.unregister(name=names_8)\nnames_9 = state.register(name='eoverb', pid=1741)\nstate.unregister(name=names_3)\nstate.where_is(name=names_6)\nstate.unregister(name=names_9)\nstate.where_is(name=names_7)\nstate.where_is(name='rnp')\nnames_10 = state.register(name='rzjjke', pid=16875)\nnames_11 = state.register(name='fwhkmncczyvjb', pid=7758)\nstate.where_is(name='e')\nstate.where_is(name=names_10)\nstate.where_is(name=names_6)\nstate.unregister(name=names_7)\nstate.where_is(name=names_10)\nnames_12 = state.register(name='xo', pid=2073127043)\nstate.where_is(name=names_4)\nstate.where_is(name=names_11)\nstate.unregister(name=names_6)\nnames_13 = state.register(name='d', pid=-6305)\nnames_14 = state.register(name='ehsj', pid=73)\nnames_15 = state.register(name='zzvffp', pid=-11990)\nstate.where_is(name='xvo')\nnames_16 = state.register(name='crqggdf', pid=-13)\nstate.unregister(name=names_12)\nnames_17 = state.register(name='muanhk', pid=12352)\nstate.where_is(name='cq')\nstate.unregister(name=names_14)\nstate.unregister(name=names_13)\nstate.where_is(name='jojaqnvumk')\nstate.where_is(name=names_4)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 49, "failures": 1}, "timing": {"execute:test": 0.006390794180333614, "generate:data": 4.779198206961155e-05, "generate:rule:where_is": 0.055760249961167574, "generate:rule:register": 0.07156270672567189, "generate:rule:unregister": 0.020164249232038856, "execute:rule:where_is": 0.00013316655531525612, "execute:rule:register": 0.00014608516357839108, "execute:rule:unregister": 8.783466182649136e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nnames_0 = state.register(name='uvd', pid=36)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='kcvfysqbgbxsl', pid=-21802)\nstate.where_is(name='qnts')\nstate.unregister(name=names_1)\nnames_2 = state.register(name='chgvtywcjfrh', pid=10322)\nstate.unregister(name=names_2)\nstate.where_is(name='o')\nstate.where_is(name='ubkij')\nnames_3 = state.register(name='a', pid=-26603)\nstate.where_is(name='ruo')\nstate.where_is(name='ks')\nnames_4 = state.register(name='', pid=-13)\nstate.where_is(name='vovtg')\nnames_5 = state.register(name=names_4, pid=2715697723577619996)\nnames_6 = state.register(name='jri', pid=4213)\nnames_7 = state.register(name='aecdnxsebudzb', pid=-67440241)\nstate.unregister(name=names_4)\nnames_8 = state.register(name=names_4, pid=4014799179487872744)\nstate.unregister(name=names_8)\nnames_9 = state.register(name='eoverb', pid=1741)\nstate.unregister(name=names_3)\nstate.where_is(name=names_6)\nstate.unregister(name=names_9)\nstate.where_is(name=names_7)\nstate.where_is(name='rnp')\nnames_10 = state.register(name='rzjjke', pid=16875)\nnames_11 = state.register(name='fwhkmncczyvjb', pid=7758)\nstate.where_is(name='e')\nstate.where_is(name=names_10)\nstate.where_is(name=names_6)\nstate.unregister(name=names_7)\nstate.where_is(name=names_10)\nnames_12 = state.register(name='xo', pid=2073127043)\nstate.where_is(name=names_4)\nstate.where_is(name=names_11)\nstate.unregister(name=names_6)\nnames_13 = state.register(name='d', pid=-6305)\nnames_14 = state.register(name='ehsj', pid=73)\nnames_15 = state.register(name='zzvffp', pid=-11990)\nstate.where_is(name='xvo')\nnames_16 = state.register(name='crqggdf', pid=-13)\nstate.unregister(name=names_12)\nnames_17 = state.register(name='muanhk', pid=12352)\nstate.where_is(name='cq')\nstate.unregister(name=names_14)\nstate.unregister(name=names_13)\nstate.where_is(name='jojaqnvumk')\nstate.where_is(name=names_4)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 49, "failures": 1}, "timing": {"execute:test": 0.006293413927778602, "generate:data": 4.520779475569725e-05, "generate:rule:where_is": 0.054894292959943414, "generate:rule:register": 0.07023475109599531, "generate:rule:unregister": 0.01944483397528529, "execute:rule:where_is": 0.00013495981693267822, "execute:rule:register": 0.00013991561718285084, "execute:rule:unregister": 8.312612771987915e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nnames_0 = state.register(name='uvd', pid=36)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='kcvfysqbgbxsl', pid=85)\nstate.unregister(name=names_1)\nstate.where_is(name='')\nstate.where_is(name='chgvtywcjfrh')\nstate.where_is(name='o')\nstate.where_is(name='ubkij')\nnames_2 = state.register(name='a', pid=-26603)\nstate.where_is(name='ruo')\nstate.where_is(name='ks')\nnames_3 = state.register(name='', pid=-13)\nstate.where_is(name='vovtg')\nnames_4 = state.register(name=names_3, pid=2715697723577619996)\nnames_5 = state.register(name='jri', pid=4213)\nnames_6 = state.register(name='aecdnxsebudzb', pid=-67440241)\nstate.unregister(name=names_3)\nnames_7 = state.register(name=names_3, pid=4014799179487872744)\nstate.unregister(name=names_7)\nnames_8 = state.register(name='eoverb', pid=1741)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.unregister(name=names_8)\nstate.where_is(name=names_6)\nstate.where_is(name='rnp')\nnames_9 = state.register(name='rzjjke', pid=16875)\nnames_10 = state.register(name='fwhkmncczyvjb', pid=7758)\nstate.where_is(name='e')\nstate.where_is(name=names_9)\nstate.where_is(name=names_5)\nstate.unregister(name=names_6)\nstate.where_is(name=names_9)\nnames_11 = state.register(name='xo', pid=2073127043)\nstate.where_is(name=names_3)\nstate.where_is(name=names_10)\nstate.unregister(name=names_5)\nnames_12 = state.register(name='d', pid=-6305)\nnames_13 = state.register(name='ehsj', pid=73)\nnames_14 = state.register(name='zzvffp', pid=-11990)\nstate.where_is(name='xvo')\nnames_15 = state.register(name='crqggdf', pid=-13)\nstate.unregister(name=names_11)\nnames_16 = state.register(name='muanhk', pid=12352)\nstate.where_is(name='cq')\nstate.unregister(name=names_13)\nstate.unregister(name=names_12)\nstate.where_is(name='jojaqnvumk')\nstate.where_is(name=names_3)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 48, "failures": 1}, "timing": {"execute:test": 0.00618308293633163, "generate:data": 4.533398896455765e-05, "generate:rule:where_is": 0.06664707930758595, "generate:rule:register": 0.0648904200643301, "generate:rule:unregister": 0.018018459901213646, "execute:rule:where_is": 0.00013812514953315258, "execute:rule:register": 0.0001338748261332512, "execute:rule:unregister": 7.662619464099407e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nnames_0 = state.register(name='uvd', pid=36)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='kcvfysqbgbxsl', pid=85)\nstate.unregister(name=names_1)\nstate.where_is(name='')\nstate.where_is(name='chgvtywcjfrh')\nstate.where_is(name='o')\nstate.where_is(name='ubkij')\nnames_2 = state.register(name='a', pid=-26603)\nstate.where_is(name='ruo')\nstate.where_is(name='ks')\nnames_3 = state.register(name='', pid=-13)\nstate.where_is(name='vovtg')\nnames_4 = state.register(name=names_3, pid=2715697723577619996)\nnames_5 = state.register(name='jri', pid=4213)\nnames_6 = state.register(name='aecdnxsebudzb', pid=-67440241)\nstate.unregister(name=names_3)\nnames_7 = state.register(name=names_3, pid=4014799179487872744)\nstate.unregister(name=names_7)\nnames_8 = state.register(name='eoverb', pid=1741)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.unregister(name=names_8)\nstate.where_is(name=names_6)\nstate.where_is(name='rnp')\nnames_9 = state.register(name='rzjjke', pid=16875)\nnames_10 = state.register(name='fwhkmncczyvjb', pid=7758)\nstate.where_is(name='e')\nstate.where_is(name=names_9)\nstate.where_is(name=names_5)\nstate.unregister(name=names_6)\nstate.where_is(name=names_9)\nnames_11 = state.register(name='xo', pid=2073127043)\nstate.where_is(name=names_3)\nstate.where_is(name=names_10)\nstate.unregister(name=names_5)\nnames_12 = state.register(name='d', pid=-6305)\nnames_13 = state.register(name='ehsj', pid=73)\nnames_14 = state.register(name='zzvffp', pid=-11990)\nstate.where_is(name='xvo')\nnames_15 = state.register(name='crqggdf', pid=-13)\nstate.unregister(name=names_11)\nnames_16 = state.register(name='muanhk', pid=12352)\nstate.where_is(name='cq')\nstate.unregister(name=names_13)\nstate.unregister(name=names_12)\nstate.where_is(name='jojaqnvumk')\nstate.where_is(name=names_3)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 48, "failures": 1}, "timing": {"execute:test": 0.006049203919246793, "generate:data": 4.395795986056328e-05, "generate:rule:where_is": 0.06279137707315385, "generate:rule:register": 0.06262891716323793, "generate:rule:unregister": 0.016967709874734282, "execute:rule:where_is": 0.00013458263128995895, "execute:rule:register": 0.00012924871407449245, "execute:rule:unregister": 7.45824072510004e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nnames_0 = state.register(name='uvd', pid=36)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='kcvfysqbgbxsl', pid=85)\nstate.unregister(name=names_1)\nstate.where_is(name='')\nstate.where_is(name='chgvtywcjfrh')\nstate.where_is(name='o')\nstate.where_is(name='ubkij')\nnames_2 = state.register(name='a', pid=-26603)\nstate.where_is(name='ruo')\nstate.where_is(name='ks')\nnames_3 = state.register(name='', pid=-13)\nstate.where_is(name='kbgggh')\nnames_4 = state.register(name=names_3, pid=2715697723577619996)\nnames_5 = state.register(name='jri', pid=4213)\nnames_6 = state.register(name='aecdnxsebudzb', pid=-67440241)\nstate.unregister(name=names_3)\nnames_7 = state.register(name=names_3, pid=4014799179487872744)\nstate.unregister(name=names_7)\nnames_8 = state.register(name='eoverb', pid=1741)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.unregister(name=names_8)\nstate.where_is(name=names_6)\nstate.where_is(name='rnp')\nnames_9 = state.register(name='rzjjke', pid=16875)\nnames_10 = state.register(name='fwhkmncczyvjb', pid=7758)\nstate.where_is(name='e')\nstate.where_is(name=names_9)\nstate.where_is(name=names_5)\nstate.unregister(name=names_6)\nstate.where_is(name=names_9)\nnames_11 = state.register(name='xo', pid=2073127043)\nstate.where_is(name=names_3)\nstate.where_is(name=names_10)\nstate.unregister(name=names_5)\nnames_12 = state.register(name='d', pid=-6305)\nnames_13 = state.register(name='ehsj', pid=73)\nnames_14 = state.register(name='zzvffp', pid=-11990)\nstate.where_is(name='xvo')\nnames_15 = state.register(name='crqggdf', pid=-13)\nstate.unregister(name=names_11)\nnames_16 = state.register(name='muanhk', pid=12352)\nstate.where_is(name='cq')\nstate.unregister(name=names_13)\nstate.unregister(name=names_12)\nstate.where_is(name='jojaqnvumk')\nstate.where_is(name=names_3)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 48, "failures": 1}, "timing": {"execute:test": 0.0060641232412308455, "generate:data": 4.383292980492115e-05, "generate:rule:where_is": 0.0645110874902457, "generate:rule:register": 0.06371124763973057, "generate:rule:unregister": 0.017605874687433243, "execute:rule:where_is": 0.00013625412248075008, "execute:rule:register": 0.00012983218766748905, "execute:rule:unregister": 7.470999844372272e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nnames_0 = state.register(name='uvd', pid=36)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='kcvfysqbgbxsl', pid=85)\nstate.unregister(name=names_1)\nstate.where_is(name='')\nstate.where_is(name='chgvtywcjfrh')\nstate.where_is(name='o')\nstate.where_is(name='ubkij')\nnames_2 = state.register(name='a', pid=-26603)\nstate.where_is(name='ruo')\nstate.where_is(name='ks')\nnames_3 = state.register(name='', pid=-13)\nstate.where_is(name='kbgggh')\nnames_4 = state.register(name=names_3, pid=2715697723577619996)\nnames_5 = state.register(name='jri', pid=4213)\nnames_6 = state.register(name='aecdnxsebudzb', pid=-67440241)\nstate.unregister(name=names_3)\nnames_7 = state.register(name=names_3, pid=4014799179487872744)\nstate.unregister(name=names_7)\nnames_8 = state.register(name='eoverb', pid=1741)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.unregister(name=names_8)\nstate.where_is(name=names_6)\nstate.where_is(name='rnp')\nnames_9 = state.register(name='rzjjke', pid=16875)\nnames_10 = state.register(name='fwhkmncczyvjb', pid=7758)\nstate.where_is(name='e')\nstate.where_is(name=names_9)\nstate.where_is(name=names_5)\nstate.unregister(name=names_6)\nstate.where_is(name=names_9)\nnames_11 = state.register(name='xo', pid=2073127043)\nstate.where_is(name=names_3)\nstate.where_is(name=names_10)\nstate.unregister(name=names_5)\nnames_12 = state.register(name='d', pid=-6305)\nnames_13 = state.register(name='ehsj', pid=73)\nnames_14 = state.register(name='zzvffp', pid=-11990)\nstate.where_is(name='xvo')\nnames_15 = state.register(name='crqggdf', pid=-13)\nstate.unregister(name=names_11)\nnames_16 = state.register(name='muanfk', pid=12352)\nstate.where_is(name='cq')\nstate.unregister(name=names_13)\nstate.unregister(name=names_12)\nstate.where_is(name='jojaqnvumk')\nstate.where_is(name=names_3)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 48, "failures": 1}, "timing": {"execute:test": 0.006060585146769881, "generate:data": 4.354119300842285e-05, "generate:rule:where_is": 0.06319529237225652, "generate:rule:register": 0.06256962311454117, "generate:rule:unregister": 0.017196749337017536, "execute:rule:where_is": 0.00013666623272001743, "execute:rule:register": 0.00012887618504464626, "execute:rule:unregister": 7.450208067893982e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nnames_0 = state.register(name='uvd', pid=36)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='kcvfysqbgbxsl', pid=85)\nstate.unregister(name=names_1)\nstate.where_is(name='')\nstate.where_is(name='chgvtywcjfrh')\nstate.where_is(name='o')\nstate.where_is(name='ubkij')\nnames_2 = state.register(name='a', pid=-26603)\nstate.where_is(name='ruo')\nstate.where_is(name='ks')\nnames_3 = state.register(name='', pid=-13)\nstate.where_is(name='kbgggh')\nnames_4 = state.register(name=names_3, pid=2715697723577619996)\nnames_5 = state.register(name='jri', pid=4213)\nnames_6 = state.register(name='aecdnxsebudzb', pid=-67440241)\nstate.unregister(name=names_3)\nnames_7 = state.register(name=names_3, pid=4014799179487872744)\nstate.unregister(name=names_7)\nnames_8 = state.register(name='edherb', pid=1741)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.unregister(name=names_8)\nstate.where_is(name=names_6)\nstate.where_is(name='rnp')\nnames_9 = state.register(name='rzjjke', pid=16875)\nnames_10 = state.register(name='fwhkmncczyvjb', pid=7758)\nstate.where_is(name='e')\nstate.where_is(name=names_9)\nstate.where_is(name=names_5)\nstate.unregister(name=names_6)\nstate.where_is(name=names_9)\nnames_11 = state.register(name='xo', pid=2073127043)\nstate.where_is(name=names_3)\nstate.where_is(name=names_10)\nstate.unregister(name=names_5)\nnames_12 = state.register(name='d', pid=-6305)\nnames_13 = state.register(name='ehsj', pid=73)\nnames_14 = state.register(name='zzvffp', pid=-11990)\nstate.where_is(name='xvo')\nnames_15 = state.register(name='crqggdf', pid=-13)\nstate.unregister(name=names_11)\nnames_16 = state.register(name='muanfk', pid=12352)\nstate.where_is(name='cq')\nstate.unregister(name=names_13)\nstate.unregister(name=names_12)\nstate.where_is(name='jojaqnvumk')\nstate.where_is(name=names_3)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 48, "failures": 1}, "timing": {"execute:test": 0.006078797625377774, "generate:data": 4.3208012357354164e-05, "generate:rule:where_is": 0.06461549666710198, "generate:rule:register": 0.06338724680244923, "generate:rule:unregister": 0.017576958751305938, "execute:rule:where_is": 0.0001354576088488102, "execute:rule:register": 0.00012941472232341766, "execute:rule:unregister": 7.533212192356586e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='ovm')\nstate.where_is(name='bfjycp')\nstate.where_is(name='eyytwlc')\nstate.where_is(name='hsemir')\nstate.where_is(name='iemrotkbcdboki')\nstate.where_is(name='inggmyxltetvjz')\nstate.where_is(name='o')\nstate.where_is(name='pqtjbkw')\nstate.where_is(name='')\nstate.where_is(name='ljzygesjngggkkigq')\nstate.where_is(name='p')\nstate.where_is(name='')\nstate.where_is(name='xojz')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='iydvgcmghpvphwoftzeaqukvv')\nstate.where_is(name='jkl')\nstate.where_is(name='')\nstate.where_is(name='as')\nstate.where_is(name='smxnme')\nstate.where_is(name='letm')\nstate.where_is(name='')\nstate.where_is(name='qll')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='ldmqqtckon')\nstate.where_is(name='pkfksh')\nstate.where_is(name='')\nstate.where_is(name='zhlbyluzovph')\nstate.where_is(name='b')\nstate.where_is(name='fls')\nstate.where_is(name='qkwmnbhhlxmf')\nstate.where_is(name='fm')\nstate.where_is(name='wmcijmw')\nstate.where_is(name='bplod')\nstate.where_is(name='kxmjmq')\nstate.where_is(name='cmsjsvy')\nstate.where_is(name='wltyx')\nstate.where_is(name='vgv')\nstate.where_is(name='xby')\nstate.where_is(name='wnytqj')\nstate.where_is(name='eiuzewilgupx')\nstate.where_is(name='zmsr')\nstate.where_is(name='kt')\nstate.where_is(name='tmmn')\nstate.where_is(name='aww')\nstate.where_is(name='r')\nstate.where_is(name='zkoizqaumsqohllyxgasneiaif')\nstate.where_is(name='vkekco')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0058197081089019775, "generate:data": 4.3208012357354164e-05, "generate:rule:where_is": 0.2468771249987185, "execute:rule:where_is": 0.00033062510192394257}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='ovm')\nstate.where_is(name='bfjycp')\nstate.where_is(name='eyytwlc')\nstate.where_is(name='hsemir')\nstate.where_is(name='iemrotkbcdboki')\nstate.where_is(name='inggmyxltetvjz')\nstate.where_is(name='o')\nstate.where_is(name='pqtjbkw')\nstate.where_is(name='')\nstate.where_is(name='ljzygesjngggkkigq')\nstate.where_is(name='p')\nstate.where_is(name='')\nstate.where_is(name='xojz')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='iydvgcmghpvphwoftzeaqukvv')\nstate.where_is(name='jkl')\nstate.where_is(name='')\nstate.where_is(name='as')\nstate.where_is(name='smxnme')\nstate.where_is(name='letm')\nstate.where_is(name='')\nstate.where_is(name='qll')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='ldmqqtckon')\nstate.where_is(name='pkfksh')\nstate.where_is(name='')\nstate.where_is(name='zhlbyluzovph')\nstate.where_is(name='b')\nstate.where_is(name='fls')\nstate.where_is(name='qkwmnbhhlxmf')\nstate.where_is(name='fm')\nstate.where_is(name='wmcijmw')\nstate.where_is(name='bplod')\nstate.where_is(name='kxmjmq')\nstate.where_is(name='cmsjsvy')\nstate.where_is(name='wltyx')\nstate.where_is(name='vgv')\nstate.where_is(name='xby')\nstate.where_is(name='fls')\nstate.where_is(name='eiuzewilgupx')\nstate.where_is(name='zmsr')\nstate.where_is(name='kt')\nstate.where_is(name='tmmn')\nstate.where_is(name='aww')\nstate.where_is(name='r')\nstate.where_is(name='zkoizqaumsqohllyxgasneiaif')\nstate.where_is(name='vkekco')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005779835628345609, "generate:data": 4.4082989916205406e-05, "generate:rule:where_is": 0.23846595641225576, "execute:rule:where_is": 0.00033128797076642513}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='ovm')\nstate.where_is(name='bfjycp')\nstate.where_is(name='eyytwlc')\nstate.where_is(name='hsemir')\nstate.where_is(name='iemrotkbcdboki')\nstate.where_is(name='inggmyxltetvjz')\nstate.where_is(name='o')\nstate.where_is(name='pqtjbkw')\nstate.where_is(name='')\nstate.where_is(name='ljzygesjngggkkigq')\nstate.where_is(name='p')\nstate.where_is(name='')\nstate.where_is(name='xojz')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='iydvgcmghpvphwoftzeaqukvv')\nstate.where_is(name='jkl')\nstate.where_is(name='')\nstate.where_is(name='as')\nstate.where_is(name='smxnme')\nstate.where_is(name='letm')\nstate.where_is(name='')\nstate.where_is(name='qll')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='ldmqqtckon')\nstate.where_is(name='pkfksh')\nstate.where_is(name='')\nstate.where_is(name='zhlbyluzovph')\nstate.where_is(name='b')\nstate.where_is(name='fls')\nstate.where_is(name='qkwmnbhhlxmf')\nstate.where_is(name='fm')\nstate.where_is(name='wmcijmw')\nstate.where_is(name='bplod')\nstate.where_is(name='kxmjmq')\nstate.where_is(name='cmsjsvy')\nstate.where_is(name='wltyx')\nstate.where_is(name='vgv')\nstate.where_is(name='xby')\nstate.where_is(name='fls')\nstate.where_is(name='eiuzewilgupx')\nstate.where_is(name='zmsr')\nstate.where_is(name='kt')\nstate.where_is(name='tmmn')\nstate.where_is(name='aww')\nstate.where_is(name='r')\nstate.where_is(name='zkoizqaumsqohllyxgasneiaif')\nstate.where_is(name='vkekco')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005781624000519514, "generate:data": 4.5459019020199776e-05, "generate:rule:where_is": 0.2370505011640489, "execute:rule:where_is": 0.00033141463063657284}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='ovm')\nstate.where_is(name='bfjycp')\nstate.where_is(name='eyytwlc')\nstate.where_is(name='hsemir')\nstate.where_is(name='iemrotkbcdboki')\nstate.where_is(name='inggmyxltetvjz')\nstate.where_is(name='o')\nstate.where_is(name='pqtjbkw')\nstate.where_is(name='')\nstate.where_is(name='ljzygesjngggkkigq')\nstate.where_is(name='p')\nstate.where_is(name='')\nstate.where_is(name='xojz')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='iydvgcmghpvphwoftzeaqukvv')\nstate.where_is(name='jkl')\nstate.where_is(name='')\nstate.where_is(name='as')\nstate.where_is(name='smxnme')\nstate.where_is(name='letm')\nstate.where_is(name='')\nstate.where_is(name='qll')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='ldmqqtckon')\nstate.where_is(name='pkfksh')\nstate.where_is(name='')\nstate.where_is(name='zhlbyluzovph')\nstate.where_is(name='b')\nstate.where_is(name='fls')\nstate.where_is(name='qkwmnbhhlxmf')\nstate.where_is(name='fm')\nstate.where_is(name='wmcijmw')\nstate.where_is(name='bplod')\nstate.where_is(name='kxmjmq')\nstate.where_is(name='cmsjsvy')\nstate.where_is(name='wltyx')\nstate.where_is(name='vgv')\nstate.where_is(name='xby')\nstate.where_is(name='fls')\nstate.where_is(name='eiuzewilgupx')\nstate.where_is(name='zmsr')\nstate.where_is(name='kt')\nstate.where_is(name='tmmn')\nstate.where_is(name='aww')\nstate.where_is(name='r')\nstate.where_is(name='zkoizqaumsqohllyxgasneiaif')\nstate.where_is(name='vkekco')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005965955322608352, "generate:data": 4.4416869059205055e-05, "generate:rule:where_is": 0.24200516962446272, "execute:rule:where_is": 0.000341582577675581}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='ovm')\nstate.where_is(name='bfjycp')\nstate.where_is(name='eyytwlc')\nstate.where_is(name='hsemir')\nstate.where_is(name='')\nstate.where_is(name='inggmyxltetvjz')\nstate.where_is(name='o')\nstate.where_is(name='pqtjbkw')\nstate.where_is(name='')\nstate.where_is(name='ljzygesjngggkkigq')\nstate.where_is(name='p')\nstate.where_is(name='')\nstate.where_is(name='xojz')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='iydvgcmghpvphwoftzeaqukvv')\nstate.where_is(name='jkl')\nstate.where_is(name='')\nstate.where_is(name='as')\nstate.where_is(name='smxnme')\nstate.where_is(name='letm')\nstate.where_is(name='')\nstate.where_is(name='qll')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='ldmqqtckon')\nstate.where_is(name='pkfksh')\nstate.where_is(name='')\nstate.where_is(name='zhlbyluzovph')\nstate.where_is(name='b')\nstate.where_is(name='fls')\nstate.where_is(name='qkwmnbhhlxmf')\nstate.where_is(name='fm')\nstate.where_is(name='wmcijmw')\nstate.where_is(name='bplod')\nstate.where_is(name='kxmjmq')\nstate.where_is(name='cmsjsvy')\nstate.where_is(name='wltyx')\nstate.where_is(name='vgv')\nstate.where_is(name='xby')\nstate.where_is(name='fls')\nstate.where_is(name='eiuzewilgupx')\nstate.where_is(name='zmsr')\nstate.where_is(name='kt')\nstate.where_is(name='tmmn')\nstate.where_is(name='aww')\nstate.where_is(name='r')\nstate.where_is(name='zkoizqaumsqohllyxgasneiaif')\nstate.where_is(name='vkekco')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005880833137780428, "generate:data": 4.7083012759685516e-05, "generate:rule:where_is": 0.24427445884793997, "execute:rule:where_is": 0.00033570872619748116}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='ovm')\nstate.where_is(name='bfjycp')\nstate.where_is(name='eyytwlc')\nstate.where_is(name='hsemir')\nstate.where_is(name='')\nstate.where_is(name='inggmyxltetvjz')\nstate.where_is(name='o')\nstate.where_is(name='pqtjbkw')\nstate.where_is(name='')\nstate.where_is(name='ljzygesjngggkkigq')\nstate.where_is(name='p')\nstate.where_is(name='')\nstate.where_is(name='xojz')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='iydvgcmghpvphwoftzeaqukvv')\nstate.where_is(name='jkl')\nstate.where_is(name='')\nstate.where_is(name='as')\nstate.where_is(name='smxnme')\nstate.where_is(name='letm')\nstate.where_is(name='')\nstate.where_is(name='qll')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='ldmqqtckon')\nstate.where_is(name='pkfksh')\nstate.where_is(name='tmmn')\nstate.where_is(name='zhlbyluzovph')\nstate.where_is(name='b')\nstate.where_is(name='fls')\nstate.where_is(name='qkwmnbhhlxmf')\nstate.where_is(name='fm')\nstate.where_is(name='wmcijmw')\nstate.where_is(name='bplod')\nstate.where_is(name='kxmjmq')\nstate.where_is(name='cmsjsvy')\nstate.where_is(name='wltyx')\nstate.where_is(name='vgv')\nstate.where_is(name='xby')\nstate.where_is(name='fls')\nstate.where_is(name='eiuzewilgupx')\nstate.where_is(name='zmsr')\nstate.where_is(name='kt')\nstate.where_is(name='tmmn')\nstate.where_is(name='aww')\nstate.where_is(name='r')\nstate.where_is(name='zkoizqaumsqohllyxgasneiaif')\nstate.where_is(name='vkekco')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0057915011420845985, "generate:data": 4.9625057727098465e-05, "generate:rule:where_is": 0.23804216599091887, "execute:rule:where_is": 0.00032916758209466934}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='ovm')\nstate.where_is(name='bfjycp')\nstate.where_is(name='eyytwlc')\nstate.where_is(name='hsemir')\nstate.where_is(name='')\nstate.where_is(name='inggmyxltetvjz')\nstate.where_is(name='o')\nstate.where_is(name='pqtjbkw')\nstate.where_is(name='')\nstate.where_is(name='ljzygesjngggkkigq')\nstate.where_is(name='p')\nstate.where_is(name='')\nstate.where_is(name='xojz')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='iydvgcmghpvphwof')\nstate.where_is(name='aqukvv')\nstate.where_is(name='jkl')\nstate.where_is(name='')\nstate.where_is(name='as')\nstate.where_is(name='smxnme')\nstate.where_is(name='letm')\nstate.where_is(name='')\nstate.where_is(name='qll')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='w')\nstate.where_is(name='ldmqqtckon')\nstate.where_is(name='pkfksh')\nstate.where_is(name='tmmn')\nstate.where_is(name='zhlbyluzovph')\nstate.where_is(name='b')\nstate.where_is(name='fls')\nstate.where_is(name='qkwmnbhhlxmf')\nstate.where_is(name='fm')\nstate.where_is(name='wmcijmw')\nstate.where_is(name='bplod')\nstate.where_is(name='kxmjmq')\nstate.where_is(name='cmsjsvy')\nstate.where_is(name='wltyx')\nstate.where_is(name='vgv')\nstate.where_is(name='xby')\nstate.where_is(name='fls')\nstate.where_is(name='eiuzewilgupx')\nstate.where_is(name='zmsr')\nstate.where_is(name='kt')\nstate.where_is(name='tmmn')\nstate.where_is(name='aww')\nstate.where_is(name='r')\nstate.where_is(name='zkoizqaumsqohllyxgasneiaif')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005770000396296382, "generate:data": 4.4125132262706757e-05, "generate:rule:where_is": 0.23725083353929222, "execute:rule:where_is": 0.00032883090898394585}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.003388958051800728, "generate:data": 4.429183900356293e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='oboiwkr')\nstate.where_is(name='hkbartpmqrozsw')\nstate.where_is(name='')\nstate.where_is(name='cacobdut')\nstate.where_is(name='sehvtycu')\nstate.where_is(name='ez')\nstate.where_is(name='exbzqcyqbxnbug')\nstate.where_is(name='')\nstate.where_is(name='fzx')\nstate.where_is(name='qnzmrbd')\nstate.where_is(name='kca')\nstate.where_is(name='qlietkyv')\nstate.where_is(name='excm')\nstate.where_is(name='tww')\nstate.where_is(name='kuumosi')\nstate.where_is(name='xhh')\nstate.where_is(name='b')\nstate.where_is(name='pmumuhldgewitt')\nstate.where_is(name='cnjauehtlvcchluntt')\nstate.where_is(name='')\nstate.where_is(name='j')\nstate.where_is(name='vd')\nstate.where_is(name='yzgels')\nstate.where_is(name='')\nstate.where_is(name='skwqma')\nstate.where_is(name='wmfdgpgelphnmtpkbtqw')\nstate.where_is(name='v')\nstate.where_is(name='pvnupx')\nstate.where_is(name='cycnu')\nstate.where_is(name='atjf')\nstate.where_is(name='dihogontzmzlphjovqthef')\nstate.where_is(name='vtctnjzzeyxjenxtfvpdrvda')\nstate.where_is(name='yhpyr')\nstate.where_is(name='yopm')\nstate.where_is(name='uzv')\nstate.where_is(name='jfxbowtr')\nstate.where_is(name='phupbqay')\nstate.where_is(name='gjb')\nstate.where_is(name='urdsktzoe')\nstate.where_is(name='z')\nstate.where_is(name='pqdjal')\nstate.where_is(name='q')\nstate.where_is(name='uidgtqbrzmce')\nstate.where_is(name='')\nstate.where_is(name='sa')\nstate.where_is(name='ttgm')\nstate.where_is(name='n')\nstate.where_is(name='nekqfy')\nstate.where_is(name='y')\nstate.where_is(name='rywftyf')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005776502192020416, "generate:data": 4.24159225076437e-05, "generate:rule:where_is": 0.2532225816976279, "execute:rule:where_is": 0.0003307911101728678}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='oboiwkr')\nstate.where_is(name='hkbartpmqrozsw')\nstate.where_is(name='')\nstate.where_is(name='cacobdut')\nstate.where_is(name='sehvtycu')\nstate.where_is(name='ez')\nstate.where_is(name='exbzqcyqbxnbug')\nstate.where_is(name='')\nstate.where_is(name='fzx')\nstate.where_is(name='qnzmrbd')\nstate.where_is(name='kca')\nstate.where_is(name='qlietkyv')\nstate.where_is(name='excm')\nstate.where_is(name='tww')\nstate.where_is(name='kuumosi')\nstate.where_is(name='xhh')\nstate.where_is(name='b')\nstate.where_is(name='pmumuhldgewitt')\nstate.where_is(name='cnjauehtlvcchluntt')\nstate.where_is(name='')\nstate.where_is(name='j')\nstate.where_is(name='vd')\nstate.where_is(name='yzgels')\nstate.where_is(name='')\nstate.where_is(name='skwqma')\nstate.where_is(name='wmfdgpgelphnmtpkbtqw')\nstate.where_is(name='v')\nstate.where_is(name='pvnupx')\nstate.where_is(name='cycnu')\nstate.where_is(name='atjf')\nstate.where_is(name='dihogontzmzlphjovqthef')\nstate.where_is(name='vtctnjzzeyxjenxtfvpdrvda')\nstate.where_is(name='yhpyr')\nstate.where_is(name='yopm')\nstate.where_is(name='uzv')\nstate.where_is(name='jfxbowtr')\nstate.where_is(name='phupbqay')\nstate.where_is(name='gjb')\nstate.where_is(name='urdsktzoe')\nstate.where_is(name='z')\nstate.where_is(name='pqdjal')\nstate.where_is(name='q')\nstate.where_is(name='uidgtqbrzmce')\nstate.where_is(name='v')\nstate.where_is(name='sa')\nstate.where_is(name='ttgm')\nstate.where_is(name='n')\nstate.where_is(name='nekqfy')\nstate.where_is(name='y')\nstate.where_is(name='rywftyf')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005877832416445017, "generate:data": 4.400010220706463e-05, "generate:rule:where_is": 0.24986037542112172, "execute:rule:where_is": 0.0003354181535542011}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='oboiwkr')\nstate.where_is(name='hkbartpmqrozsw')\nstate.where_is(name='')\nstate.where_is(name='cacobdut')\nstate.where_is(name='sehvtycu')\nstate.where_is(name='ez')\nstate.where_is(name='exbzqcyqbxnbug')\nstate.where_is(name='')\nstate.where_is(name='fzx')\nstate.where_is(name='qnzmrbd')\nstate.where_is(name='kca')\nstate.where_is(name='qlietkyv')\nstate.where_is(name='excm')\nstate.where_is(name='tww')\nstate.where_is(name='kuumosi')\nstate.where_is(name='xhh')\nstate.where_is(name='b')\nstate.where_is(name='pmumuhldgewitt')\nstate.where_is(name='cnjauehtlvcchluntt')\nstate.where_is(name='')\nstate.where_is(name='j')\nstate.where_is(name='vd')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='skwqma')\nstate.where_is(name='wmfdgpgelphnmtpkbtqw')\nstate.where_is(name='v')\nstate.where_is(name='pvnupx')\nstate.where_is(name='cycnu')\nstate.where_is(name='atjf')\nstate.where_is(name='dihogontzmzlphjovqthef')\nstate.where_is(name='vtctnjzzeyxjenxtfvpdrvda')\nstate.where_is(name='yhpyr')\nstate.where_is(name='yopm')\nstate.where_is(name='uzv')\nstate.where_is(name='jfxbowtr')\nstate.where_is(name='phupbqay')\nstate.where_is(name='gjb')\nstate.where_is(name='urdsktzoe')\nstate.where_is(name='z')\nstate.where_is(name='pqdjal')\nstate.where_is(name='q')\nstate.where_is(name='uidgtqbrzmce')\nstate.where_is(name='v')\nstate.where_is(name='sa')\nstate.where_is(name='ttgm')\nstate.where_is(name='n')\nstate.where_is(name='nekqfy')\nstate.where_is(name='y')\nstate.where_is(name='rywftyf')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0058793721254915, "generate:data": 4.52499371021986e-05, "generate:rule:where_is": 0.2531237108632922, "execute:rule:where_is": 0.0003317485097795725}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='oboiwkr')\nstate.where_is(name='hkbartpmqrozsw')\nstate.where_is(name='')\nstate.where_is(name='cacobdut')\nstate.where_is(name='sehvtycu')\nstate.where_is(name='ez')\nstate.where_is(name='exbzqcyqbxnbug')\nstate.where_is(name='')\nstate.where_is(name='fzx')\nstate.where_is(name='qnzmrbd')\nstate.where_is(name='kca')\nstate.where_is(name='qlietkyv')\nstate.where_is(name='excm')\nstate.where_is(name='tww')\nstate.where_is(name='')\nstate.where_is(name='xhh')\nstate.where_is(name='b')\nstate.where_is(name='pmumuhldgewitt')\nstate.where_is(name='cnjauehtlvcchluntt')\nstate.where_is(name='')\nstate.where_is(name='j')\nstate.where_is(name='vd')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='skwqma')\nstate.where_is(name='wmfdgpgelphnmtpkbtqw')\nstate.where_is(name='v')\nstate.where_is(name='pvnupx')\nstate.where_is(name='cycnu')\nstate.where_is(name='atjf')\nstate.where_is(name='dihogontzmzlphjovqthef')\nstate.where_is(name='vtctnjzzeyxjenxtfvpdrvda')\nstate.where_is(name='yhpyr')\nstate.where_is(name='yopm')\nstate.where_is(name='uzv')\nstate.where_is(name='jfxbowtr')\nstate.where_is(name='phupbqay')\nstate.where_is(name='gjb')\nstate.where_is(name='urdsktzoe')\nstate.where_is(name='z')\nstate.where_is(name='pqdjal')\nstate.where_is(name='q')\nstate.where_is(name='uidgtqbrzmce')\nstate.where_is(name='v')\nstate.where_is(name='sa')\nstate.where_is(name='ttgm')\nstate.where_is(name='n')\nstate.where_is(name='nekqfy')\nstate.where_is(name='y')\nstate.where_is(name='rywftyf')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005846127402037382, "generate:data": 4.537496715784073e-05, "generate:rule:where_is": 0.2527375384233892, "execute:rule:where_is": 0.0003315869253128767}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='oboiwkr')\nstate.where_is(name='hkbartpmqrozsw')\nstate.where_is(name='')\nstate.where_is(name='cacobdut')\nstate.where_is(name='sehvtycu')\nstate.where_is(name='ez')\nstate.where_is(name='exbzqcyqbxnbug')\nstate.where_is(name='')\nstate.where_is(name='fzx')\nstate.where_is(name='qnzmrbd')\nstate.where_is(name='kca')\nstate.where_is(name='qlietkyv')\nstate.where_is(name='excm')\nstate.where_is(name='tww')\nstate.where_is(name='')\nstate.where_is(name='xhh')\nstate.where_is(name='b')\nstate.where_is(name='pmumuhldgewitt')\nstate.where_is(name='cnjauehtlvcchluntt')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='vd')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='skwqma')\nstate.where_is(name='wmfdgpgelphnmtpkbtqw')\nstate.where_is(name='v')\nstate.where_is(name='pvnupx')\nstate.where_is(name='cycnu')\nstate.where_is(name='atjf')\nstate.where_is(name='dihogontzmzlphjovqthef')\nstate.where_is(name='vtctnjzzeyxjenxtfvpdrvda')\nstate.where_is(name='yhpyr')\nstate.where_is(name='yopm')\nstate.where_is(name='uzv')\nstate.where_is(name='jfxbowtr')\nstate.where_is(name='phupbqay')\nstate.where_is(name='gjb')\nstate.where_is(name='urdsktzoe')\nstate.where_is(name='z')\nstate.where_is(name='pqdjal')\nstate.where_is(name='q')\nstate.where_is(name='uidgtqbrzmce')\nstate.where_is(name='v')\nstate.where_is(name='sa')\nstate.where_is(name='ttgm')\nstate.where_is(name='n')\nstate.where_is(name='nekqfy')\nstate.where_is(name='y')\nstate.where_is(name='rywftyf')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005910708336159587, "generate:data": 4.52499371021986e-05, "generate:rule:where_is": 0.2513905835803598, "execute:rule:where_is": 0.0003437839914113283}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='oboiwkr')\nstate.where_is(name='hkbartpmqrozsw')\nstate.where_is(name='')\nstate.where_is(name='cacobdut')\nstate.where_is(name='sehvtycu')\nstate.where_is(name='ez')\nstate.where_is(name='exbzqcyqbxnbug')\nstate.where_is(name='')\nstate.where_is(name='fzx')\nstate.where_is(name='qnzmrbd')\nstate.where_is(name='kca')\nstate.where_is(name='qlietkyv')\nstate.where_is(name='excm')\nstate.where_is(name='tww')\nstate.where_is(name='')\nstate.where_is(name='xhh')\nstate.where_is(name='b')\nstate.where_is(name='pmumuhldgewitt')\nstate.where_is(name='cnjauehtlvcchluntt')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='vd')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='skwqma')\nstate.where_is(name='wmfdgpgelphnmtpkbtqw')\nstate.where_is(name='v')\nstate.where_is(name='pvnupx')\nstate.where_is(name='cycnu')\nstate.where_is(name='atjf')\nstate.where_is(name='dihogontzmzlphjovqthef')\nstate.where_is(name='vtctnjzzeyxjenxtfvpdrvda')\nstate.where_is(name='yhpyr')\nstate.where_is(name='yopm')\nstate.where_is(name='uzv')\nstate.where_is(name='jfxbowtr')\nstate.where_is(name='phupbqay')\nstate.where_is(name='gjb')\nstate.where_is(name='urdsktzoe')\nstate.where_is(name='z')\nstate.where_is(name='pqdjal')\nstate.where_is(name='q')\nstate.where_is(name='uidgtqbrzmce')\nstate.where_is(name='v')\nstate.where_is(name='sa')\nstate.where_is(name='ttgm')\nstate.where_is(name='n')\nstate.where_is(name='nekqfy')\nstate.where_is(name='y')\nstate.where_is(name='rywftyf')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005807079607620835, "generate:data": 4.495796747505665e-05, "generate:rule:where_is": 0.24809875339269638, "execute:rule:where_is": 0.00032711680978536606}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='tlrjrj')\nstate.where_is(name='svlb')\nstate.where_is(name='acxvwcdijqquyuogzhghxs')\nstate.where_is(name='kyimyrojhezyips')\nstate.where_is(name='o')\nstate.where_is(name='vaw')\nstate.where_is(name='fxduq')\nstate.where_is(name='wzgjai')\nstate.where_is(name='a')\nstate.where_is(name='iz')\nstate.where_is(name='urb')\nstate.where_is(name='vjjfhmmckljoyo')\nstate.where_is(name='ment')\nstate.where_is(name='wcfozedqx')\nstate.where_is(name='lbvhg')\nstate.where_is(name='')\nstate.where_is(name='da')\nstate.where_is(name='')\nstate.where_is(name='zjup')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='qgozwrxz')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='t')\nstate.where_is(name='jkbg')\nstate.where_is(name='llu')\nstate.where_is(name='gt')\nstate.where_is(name='zgoe')\nstate.where_is(name='')\nstate.where_is(name='lfetf')\nstate.where_is(name='txib')\nstate.where_is(name='qbsmg')\nstate.where_is(name='vdxqvvbjlpyhq')\nstate.where_is(name='eixc')\nstate.where_is(name='qvjkzxq')\nstate.where_is(name='idgxfflrvea')\nstate.where_is(name='mdgeglgllminu')\nstate.where_is(name='mwh')\nstate.where_is(name='cvawtgue')\nstate.where_is(name='x')\nstate.where_is(name='')\nstate.where_is(name='mduqvlsfu')\nstate.where_is(name='g')\nstate.where_is(name='fiix')\nstate.where_is(name='ybku')\nstate.where_is(name='hff')\nstate.where_is(name='dtkuablsvgdpur')\nstate.where_is(name='et')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005792412906885147, "generate:data": 4.3625012040138245e-05, "generate:rule:where_is": 0.24447046197019517, "execute:rule:where_is": 0.0003270409069955349}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='tlrjrj')\nstate.where_is(name='svlb')\nstate.where_is(name='acxvwcdijqquyuogzhghxs')\nstate.where_is(name='kyimyrojhezyips')\nstate.where_is(name='o')\nstate.where_is(name='vaw')\nstate.where_is(name='fxduq')\nstate.where_is(name='wzgjai')\nstate.where_is(name='a')\nstate.where_is(name='iz')\nstate.where_is(name='urb')\nstate.where_is(name='vjjfhmmckljoyo')\nstate.where_is(name='ment')\nstate.where_is(name='wcfozedqx')\nstate.where_is(name='lbvhg')\nstate.where_is(name='')\nstate.where_is(name='da')\nstate.where_is(name='')\nstate.where_is(name='zjup')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='qgozwrxz')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='t')\nstate.where_is(name='jkbg')\nstate.where_is(name='llu')\nstate.where_is(name='gt')\nstate.where_is(name='zgoe')\nstate.where_is(name='')\nstate.where_is(name='lfetf')\nstate.where_is(name='txib')\nstate.where_is(name='qbsmg')\nstate.where_is(name='vdxqvvbjlpyhq')\nstate.where_is(name='eixc')\nstate.where_is(name='qvjkzxq')\nstate.where_is(name='idgxfflrvea')\nstate.where_is(name='mdgeglgllminu')\nstate.where_is(name='mwh')\nstate.where_is(name='cvawtgue')\nstate.where_is(name='x')\nstate.where_is(name='')\nstate.where_is(name='mduqvlsfu')\nstate.where_is(name='g')\nstate.where_is(name='fiix')\nstate.where_is(name='ybku')\nstate.where_is(name='hff')\nstate.where_is(name='dtkuablsvgdpur')\nstate.where_is(name='et')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005842749495059252, "generate:data": 4.4125132262706757e-05, "generate:rule:where_is": 0.23616045946255326, "execute:rule:where_is": 0.00033116620033979416}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='tlrjrj')\nstate.where_is(name='svlb')\nstate.where_is(name='acxvwcdijqquyuogzhghxs')\nstate.where_is(name='kyimyrojhezyips')\nstate.where_is(name='o')\nstate.where_is(name='vaw')\nstate.where_is(name='fxduq')\nstate.where_is(name='wzgjai')\nstate.where_is(name='a')\nstate.where_is(name='iz')\nstate.where_is(name='urb')\nstate.where_is(name='vjjfhmmckljoyo')\nstate.where_is(name='ment')\nstate.where_is(name='wcfozedqx')\nstate.where_is(name='lbvhg')\nstate.where_is(name='')\nstate.where_is(name='da')\nstate.where_is(name='')\nstate.where_is(name='zjup')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='qgozwrxz')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='t')\nstate.where_is(name='jkbg')\nstate.where_is(name='a')\nstate.where_is(name='gt')\nstate.where_is(name='zgoe')\nstate.where_is(name='')\nstate.where_is(name='lfetf')\nstate.where_is(name='txib')\nstate.where_is(name='qbsmg')\nstate.where_is(name='vdxqvvbjlpyhq')\nstate.where_is(name='eixc')\nstate.where_is(name='qvjkzxq')\nstate.where_is(name='idgxfflrvea')\nstate.where_is(name='mdgeglgllminu')\nstate.where_is(name='mwh')\nstate.where_is(name='cvawtgue')\nstate.where_is(name='x')\nstate.where_is(name='')\nstate.where_is(name='mduqvlsfu')\nstate.where_is(name='g')\nstate.where_is(name='fiix')\nstate.where_is(name='ybku')\nstate.where_is(name='hff')\nstate.where_is(name='dtkuablsvgdpur')\nstate.where_is(name='et')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005841334816068411, "generate:data": 4.549999721348286e-05, "generate:rule:where_is": 0.24368929001502693, "execute:rule:where_is": 0.00032845535315573215}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='tlrjrj')\nstate.where_is(name='svlb')\nstate.where_is(name='acxvwcdijqquyuogzhghxs')\nstate.where_is(name='kyimyrojhezyips')\nstate.where_is(name='o')\nstate.where_is(name='vaw')\nstate.where_is(name='fxduq')\nstate.where_is(name='wzgjai')\nstate.where_is(name='a')\nstate.where_is(name='iz')\nstate.where_is(name='urb')\nstate.where_is(name='vjjfhmmckljoyo')\nstate.where_is(name='ment')\nstate.where_is(name='wcfozedqx')\nstate.where_is(name='lbvhg')\nstate.where_is(name='')\nstate.where_is(name='da')\nstate.where_is(name='')\nstate.where_is(name='zjup')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='qgozwrxz')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='t')\nstate.where_is(name='jkbg')\nstate.where_is(name='a')\nstate.where_is(name='gt')\nstate.where_is(name='zgoe')\nstate.where_is(name='')\nstate.where_is(name='lfet')\nstate.where_is(name='')\nstate.where_is(name='mcab')\nstate.where_is(name='qbsmg')\nstate.where_is(name='vdxqvvbjlpyhq')\nstate.where_is(name='eixc')\nstate.where_is(name='qvjkzxq')\nstate.where_is(name='idgxfflrvea')\nstate.where_is(name='mdgeglgllminu')\nstate.where_is(name='mwh')\nstate.where_is(name='cvawtgue')\nstate.where_is(name='x')\nstate.where_is(name='')\nstate.where_is(name='mduqvlsfu')\nstate.where_is(name='g')\nstate.where_is(name='fiix')\nstate.where_is(name='ybku')\nstate.where_is(name='hff')\nstate.where_is(name='dtkuablsvgdpur')\nstate.where_is(name='et')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.00589312263764441, "generate:data": 4.541594535112381e-05, "generate:rule:where_is": 0.2586567522957921, "execute:rule:where_is": 0.00033204001374542713}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='tlrjrj')\nstate.where_is(name='svlb')\nstate.where_is(name='acxvwcdijqquyuogzhghxs')\nstate.where_is(name='kyimyrojhezyips')\nstate.where_is(name='o')\nstate.where_is(name='vaw')\nstate.where_is(name='fxduq')\nstate.where_is(name='wzgjai')\nstate.where_is(name='a')\nstate.where_is(name='iz')\nstate.where_is(name='urb')\nstate.where_is(name='vjjfhmmckljoyo')\nstate.where_is(name='ment')\nstate.where_is(name='wcfozedqx')\nstate.where_is(name='lbvhg')\nstate.where_is(name='')\nstate.where_is(name='da')\nstate.where_is(name='')\nstate.where_is(name='zjup')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='qgozwrxz')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='t')\nstate.where_is(name='jkbg')\nstate.where_is(name='a')\nstate.where_is(name='gt')\nstate.where_is(name='zgoe')\nstate.where_is(name='')\nstate.where_is(name='lfet')\nstate.where_is(name='')\nstate.where_is(name='mcab')\nstate.where_is(name='qbsmg')\nstate.where_is(name='vdxqvvbjlpyhq')\nstate.where_is(name='eiwc')\nstate.where_is(name='qvjkzxq')\nstate.where_is(name='idgxfflrvea')\nstate.where_is(name='mdgeglgllminu')\nstate.where_is(name='mwh')\nstate.where_is(name='cvawtgue')\nstate.where_is(name='x')\nstate.where_is(name='')\nstate.where_is(name='mduqvlsfu')\nstate.where_is(name='g')\nstate.where_is(name='fiix')\nstate.where_is(name='ybku')\nstate.where_is(name='hff')\nstate.where_is(name='dtkuablsvgdpur')\nstate.where_is(name='et')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005870081018656492, "generate:data": 4.837499000132084e-05, "generate:rule:where_is": 0.24003175180405378, "execute:rule:where_is": 0.0003310008905827999}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='tlrjrj')\nstate.where_is(name='svlb')\nstate.where_is(name='acxvwcdijqquyuogzhghxs')\nstate.where_is(name='kyimyrojhezyips')\nstate.where_is(name='o')\nstate.where_is(name='vaw')\nstate.where_is(name='fxduq')\nstate.where_is(name='wzgjai')\nstate.where_is(name='a')\nstate.where_is(name='iz')\nstate.where_is(name='urb')\nstate.where_is(name='vjj')\nstate.where_is(name='bbc')\nstate.where_is(name='g')\nstate.where_is(name='ament')\nstate.where_is(name='wcfozedqx')\nstate.where_is(name='lbvhg')\nstate.where_is(name='')\nstate.where_is(name='da')\nstate.where_is(name='')\nstate.where_is(name='zjup')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='qgozwrxz')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='t')\nstate.where_is(name='jkbg')\nstate.where_is(name='a')\nstate.where_is(name='gt')\nstate.where_is(name='zgoe')\nstate.where_is(name='')\nstate.where_is(name='lfet')\nstate.where_is(name='')\nstate.where_is(name='mcab')\nstate.where_is(name='qbsmg')\nstate.where_is(name='vdxqvvbjlpyhq')\nstate.where_is(name='eiwc')\nstate.where_is(name='qvjkzxq')\nstate.where_is(name='idgxfflrvea')\nstate.where_is(name='mdgeglgllminu')\nstate.where_is(name='mwh')\nstate.where_is(name='cvawtgue')\nstate.where_is(name='x')\nstate.where_is(name='')\nstate.where_is(name='mduqvlsfu')\nstate.where_is(name='g')\nstate.where_is(name='fiix')\nstate.where_is(name='ybku')\nstate.where_is(name='hff')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005862837890163064, "generate:data": 4.537496715784073e-05, "generate:rule:where_is": 0.2346471620257944, "execute:rule:where_is": 0.0003347550518810749}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='tlrjrj')\nstate.where_is(name='svlb')\nstate.where_is(name='acxvwcdijqquyuogzhghxs')\nstate.where_is(name='kyimyrojhezyips')\nstate.where_is(name='o')\nstate.where_is(name='vaw')\nstate.where_is(name='fxduq')\nstate.where_is(name='wzgjai')\nstate.where_is(name='a')\nstate.where_is(name='iz')\nstate.where_is(name='urb')\nstate.where_is(name='vjj')\nstate.where_is(name='bbc')\nstate.where_is(name='g')\nstate.where_is(name='ament')\nstate.where_is(name='wcfozedqx')\nstate.where_is(name='lbvhg')\nstate.where_is(name='')\nstate.where_is(name='da')\nstate.where_is(name='')\nstate.where_is(name='zjup')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='qgozwrxz')\nstate.where_is(name='v')\nstate.where_is(name='')\nstate.where_is(name='t')\nstate.where_is(name='jkbg')\nstate.where_is(name='a')\nstate.where_is(name='gt')\nstate.where_is(name='zgoe')\nstate.where_is(name='')\nstate.where_is(name='lfet')\nstate.where_is(name='')\nstate.where_is(name='mcab')\nstate.where_is(name='qbsmg')\nstate.where_is(name='vdxqvvbjlpyhq')\nstate.where_is(name='eiwc')\nstate.where_is(name='qvjkzxq')\nstate.where_is(name='idgxfflrvea')\nstate.where_is(name='mdgeglgllminu')\nstate.where_is(name='mwh')\nstate.where_is(name='cvawtgue')\nstate.where_is(name='x')\nstate.where_is(name='')\nstate.where_is(name='')\nstate.where_is(name='g')\nstate.where_is(name='fiix')\nstate.where_is(name='ybku')\nstate.where_is(name='hff')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0058856678660959005, "generate:data": 5.312496796250343e-05, "generate:rule:where_is": 0.22522495710290968, "execute:rule:where_is": 0.0003296211361885071}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.0031644999980926514, "generate:data": 4.38750721514225e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.0029225421603769064, "generate:data": 4.237494431436062e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=27985)\nnames_1 = state.register(name='kld', pid=-1252147113)\nnames_2 = state.register(name=names_0, pid=744361718)\nnames_3 = state.register(name=names_0, pid=-1840941184356116439)\nnames_4 = state.register(name='zs', pid=26764)\nnames_5 = state.register(name='ojvr', pid=1913)\nnames_6 = state.register(name='y', pid=4)\nnames_7 = state.register(name='oeqdslf', pid=-6255)\nnames_8 = state.register(name='s', pid=-873200385739613046)\nnames_9 = state.register(name='f', pid=23)\nnames_10 = state.register(name='r', pid=19227)\nnames_11 = state.register(name='km', pid=18315)\nnames_12 = state.register(name=names_0, pid=-4799667286549074492)\nnames_13 = state.register(name='ng', pid=23484)\nnames_14 = state.register(name='sbhtlji', pid=-30687)\nnames_15 = state.register(name='ipltvqqrtzaye', pid=-2668)\nnames_16 = state.register(name=names_0, pid=-2346)\nnames_17 = state.register(name='lne', pid=-71)\nnames_18 = state.register(name='tsqxwakgg', pid=-46)\nnames_19 = state.register(name=names_0, pid=8006)\nnames_20 = state.register(name='szes', pid=-42)\nnames_21 = state.register(name='nga', pid=29483)\nnames_22 = state.register(name='djzxqtuz', pid=30)\nnames_23 = state.register(name='rdoix', pid=-9122)\nnames_24 = state.register(name='dtubc', pid=158808242891802228170821415693765328927)\nnames_25 = state.register(name='ls', pid=-30776)\nnames_26 = state.register(name='d', pid=-14536)\nnames_27 = state.register(name='u', pid=-3244)\nnames_28 = state.register(name='nnhkxno', pid=-17275)\nnames_29 = state.register(name=names_0, pid=19)\nnames_30 = state.register(name='vjhwnn', pid=84)\nnames_31 = state.register(name=names_0, pid=-26906)\nnames_32 = state.register(name=names_0, pid=10420)\nnames_33 = state.register(name='hzjzjogxszrz', pid=-30472)\nnames_34 = state.register(name='azrgca', pid=-29913)\nnames_35 = state.register(name='bhdvrgba', pid=-8141026701689455019)\nnames_36 = state.register(name='zd', pid=71)\nnames_37 = state.register(name='ushimkgvhp', pid=-6667)\nnames_38 = state.register(name='nysda', pid=-530292240)\nnames_39 = state.register(name='lrttl', pid=-15672)\nnames_40 = state.register(name=names_0, pid=-91)\nnames_41 = state.register(name='ilelhpbgm', pid=125)\nnames_42 = state.register(name=names_0, pid=-8)\nnames_43 = state.register(name='gulb', pid=-27079)\nnames_44 = state.register(name=names_0, pid=26747)\nnames_45 = state.register(name='gwpbajvgzdcnsblx', pid=20158)\nnames_46 = state.register(name='gsx', pid=1)\nnames_47 = state.register(name='kzjrxcjzxfbq', pid=-24001)\nnames_48 = state.register(name=names_0, pid=3268)\nnames_49 = state.register(name='nulldhpnjornw', pid=32104)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 38, "failures": 12}, "timing": {"execute:test": 0.008901166263967752, "generate:data": 4.237494431436062e-05, "generate:rule:register": 0.20582345873117447, "execute:rule:register": 0.00043070921674370766}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=27985)\nnames_1 = state.register(name='kld', pid=-1252147113)\nnames_2 = state.register(name=names_0, pid=744361718)\nnames_3 = state.register(name=names_0, pid=23484)\nnames_4 = state.register(name='zs', pid=26764)\nnames_5 = state.register(name='ojvr', pid=1913)\nnames_6 = state.register(name='y', pid=4)\nnames_7 = state.register(name='oeqdslf', pid=-6255)\nnames_8 = state.register(name='s', pid=-873200385739613046)\nnames_9 = state.register(name='f', pid=23)\nnames_10 = state.register(name='r', pid=19227)\nnames_11 = state.register(name='km', pid=18315)\nnames_12 = state.register(name=names_0, pid=-4799667286549074492)\nnames_13 = state.register(name='ng', pid=23484)\nnames_14 = state.register(name='sbhtlji', pid=-30687)\nnames_15 = state.register(name='ipltvqqrtzaye', pid=-2668)\nnames_16 = state.register(name=names_0, pid=-2346)\nnames_17 = state.register(name='lne', pid=-71)\nnames_18 = state.register(name='tsqxwakgg', pid=-46)\nnames_19 = state.register(name=names_0, pid=8006)\nnames_20 = state.register(name='szes', pid=-42)\nnames_21 = state.register(name='nga', pid=29483)\nnames_22 = state.register(name='djzxqtuz', pid=30)\nnames_23 = state.register(name='rdoix', pid=-9122)\nnames_24 = state.register(name='dtubc', pid=158808242891802228170821415693765328927)\nnames_25 = state.register(name='ls', pid=-30776)\nnames_26 = state.register(name='d', pid=-14536)\nnames_27 = state.register(name='u', pid=-3244)\nnames_28 = state.register(name='nnhkxno', pid=-17275)\nnames_29 = state.register(name=names_0, pid=19)\nnames_30 = state.register(name='vjhwnn', pid=84)\nnames_31 = state.register(name=names_0, pid=-26906)\nnames_32 = state.register(name=names_0, pid=10420)\nnames_33 = state.register(name='hzjzjogxszrz', pid=-30472)\nnames_34 = state.register(name='azrgca', pid=-29913)\nnames_35 = state.register(name='bhdvrgba', pid=-8141026701689455019)\nnames_36 = state.register(name='zd', pid=71)\nnames_37 = state.register(name='ushimkgvhp', pid=-6667)\nnames_38 = state.register(name='nysda', pid=-530292240)\nnames_39 = state.register(name='lrttl', pid=-15672)\nnames_40 = state.register(name=names_0, pid=-91)\nnames_41 = state.register(name='ilelhpbgm', pid=125)\nnames_42 = state.register(name=names_0, pid=-8)\nnames_43 = state.register(name='gulb', pid=-27079)\nnames_44 = state.register(name=names_0, pid=26747)\nnames_45 = state.register(name='gwpbajvgzdcnsblx', pid=20158)\nnames_46 = state.register(name='gsx', pid=1)\nnames_47 = state.register(name='kzjrxcjzxfbq', pid=-24001)\nnames_48 = state.register(name=names_0, pid=3268)\nnames_49 = state.register(name='nulldhpnjornw', pid=32104)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 38, "failures": 12}, "timing": {"execute:test": 0.008921621134504676, "generate:data": 4.41248994320631e-05, "generate:rule:register": 0.20842462894506752, "execute:rule:register": 0.0004068755079060793}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=27985)\nnames_1 = state.register(name='kld', pid=-1252147113)\nnames_2 = state.register(name=names_0, pid=744361718)\nnames_3 = state.register(name=names_0, pid=23484)\nnames_4 = state.register(name='zs', pid=26764)\nnames_5 = state.register(name='ojvr', pid=1913)\nnames_6 = state.register(name='y', pid=4)\nnames_7 = state.register(name='oeqdslf', pid=-6255)\nnames_8 = state.register(name='s', pid=-873200385739613046)\nnames_9 = state.register(name='f', pid=23)\nnames_10 = state.register(name='r', pid=19227)\nnames_11 = state.register(name='km', pid=18315)\nnames_12 = state.register(name=names_0, pid=-4799667286549074492)\nnames_13 = state.register(name='ng', pid=23484)\nnames_14 = state.register(name='sbhtlji', pid=-30687)\nnames_15 = state.register(name='ipltvqqrtzaye', pid=-2668)\nnames_16 = state.register(name=names_0, pid=-2346)\nnames_17 = state.register(name='lne', pid=-71)\nnames_18 = state.register(name='tsqxwakgg', pid=-46)\nnames_19 = state.register(name=names_0, pid=8006)\nnames_20 = state.register(name='szes', pid=-42)\nnames_21 = state.register(name='nga', pid=29483)\nnames_22 = state.register(name='djzxqtuz', pid=30)\nnames_23 = state.register(name='rdoix', pid=-9122)\nnames_24 = state.register(name='dtubc', pid=158808242891802228170821415693765328927)\nnames_25 = state.register(name='ls', pid=-30776)\nnames_26 = state.register(name='d', pid=-14536)\nnames_27 = state.register(name='u', pid=-3244)\nnames_28 = state.register(name='nnhkxno', pid=-17275)\nnames_29 = state.register(name=names_0, pid=19)\nnames_30 = state.register(name='vjhwnn', pid=84)\nnames_31 = state.register(name=names_0, pid=-26906)\nnames_32 = state.register(name=names_0, pid=10420)\nnames_33 = state.register(name='hzjzjogxszrz', pid=-30472)\nnames_34 = state.register(name='azrgca', pid=-29913)\nnames_35 = state.register(name='bhdvrgba', pid=-8141026701689455019)\nnames_36 = state.register(name='zd', pid=71)\nnames_37 = state.register(name='ushimkgvhp', pid=-6667)\nnames_38 = state.register(name='nysda', pid=-530292240)\nnames_39 = state.register(name='lrttl', pid=-15672)\nnames_40 = state.register(name=names_0, pid=-91)\nnames_41 = state.register(name='ilelhpbgm', pid=125)\nnames_42 = state.register(name=names_0, pid=-8)\nnames_43 = state.register(name='gulb', pid=-27079)\nnames_44 = state.register(name=names_0, pid=26747)\nnames_45 = state.register(name='gwpbajvgzdcnsblx', pid=20158)\nnames_46 = state.register(name='gsx', pid=1)\nnames_47 = state.register(name='kzjrxcjzxfbq', pid=-24001)\nnames_48 = state.register(name=names_0, pid=3268)\nnames_49 = state.register(name='nulldhpnjornw', pid=32104)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 38, "failures": 12}, "timing": {"execute:test": 0.008851953549310565, "generate:data": 4.5999884605407715e-05, "generate:rule:register": 0.19931879662908614, "execute:rule:register": 0.00040537910535931587}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=27985)\nnames_1 = state.register(name='kld', pid=-1252147113)\nnames_2 = state.register(name=names_0, pid=744361718)\nnames_3 = state.register(name=names_0, pid=23484)\nnames_4 = state.register(name='zs', pid=26764)\nnames_5 = state.register(name='ojvr', pid=1913)\nnames_6 = state.register(name='y', pid=4)\nnames_7 = state.register(name='oeqdslf', pid=-6255)\nnames_8 = state.register(name='s', pid=-873200385739613046)\nnames_9 = state.register(name='f', pid=23)\nnames_10 = state.register(name='r', pid=19227)\nnames_11 = state.register(name='km', pid=18315)\nnames_12 = state.register(name=names_0, pid=-4799667286549074492)\nnames_13 = state.register(name='ng', pid=23484)\nnames_14 = state.register(name='sbhtlji', pid=-30687)\nnames_15 = state.register(name='ipltvqqrtzaye', pid=-2668)\nnames_16 = state.register(name=names_0, pid=-2346)\nnames_17 = state.register(name='lne', pid=-71)\nnames_18 = state.register(name='tsqxwakgg', pid=-46)\nnames_19 = state.register(name=names_0, pid=8006)\nnames_20 = state.register(name='szes', pid=-42)\nnames_21 = state.register(name='nga', pid=29483)\nnames_22 = state.register(name='djzxqtuz', pid=30)\nnames_23 = state.register(name='rdoix', pid=-9122)\nnames_24 = state.register(name='dtubc', pid=158808242891802228170821415693765328927)\nnames_25 = state.register(name='ls', pid=-30776)\nnames_26 = state.register(name='d', pid=-14536)\nnames_27 = state.register(name='u', pid=-3244)\nnames_28 = state.register(name='nnhkxno', pid=-17275)\nnames_29 = state.register(name=names_0, pid=19)\nnames_30 = state.register(name='vjhwnn', pid=84)\nnames_31 = state.register(name=names_0, pid=-26906)\nnames_32 = state.register(name=names_0, pid=10420)\nnames_33 = state.register(name='hzjzjogxszrz', pid=-30472)\nnames_34 = state.register(name='azrgca', pid=-29913)\nnames_35 = state.register(name='bhdvrgba', pid=-30776)\nnames_36 = state.register(name='zd', pid=71)\nnames_37 = state.register(name='ushimkgvhp', pid=-6667)\nnames_38 = state.register(name='nysda', pid=-530292240)\nnames_39 = state.register(name='lrttl', pid=-15672)\nnames_40 = state.register(name=names_0, pid=-91)\nnames_41 = state.register(name='ilelhpbgm', pid=125)\nnames_42 = state.register(name=names_0, pid=-8)\nnames_43 = state.register(name='gulb', pid=-27079)\nnames_44 = state.register(name=names_0, pid=26747)\nnames_45 = state.register(name='gwpbajvgzdcnsblx', pid=20158)\nnames_46 = state.register(name='gsx', pid=1)\nnames_47 = state.register(name='kzjrxcjzxfbq', pid=-24001)\nnames_48 = state.register(name=names_0, pid=3268)\nnames_49 = state.register(name='nulldhpnjornw', pid=32104)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 38, "failures": 12}, "timing": {"execute:test": 0.00891158264130354, "generate:data": 4.5582884922623634e-05, "generate:rule:register": 0.20281175151467323, "execute:rule:register": 0.00040479167364537716}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='dbc')\nnames_0 = state.register(name='eh', pid=-1252147113)\nnames_1 = state.register(name='', pid=744361718)\nnames_2 = state.register(name=names_1, pid=23484)\nstate.where_is(name=names_1)\nnames_3 = state.register(name='fh', pid=17)\nstate.where_is(name=names_0)\nstate.unregister(name=names_1)\nnames_4 = state.register(name='jvr', pid=1913)\nstate.where_is(name=None)\nstate.unregister(name=names_4)\nnames_5 = state.register(name=names_1, pid=7)\nstate.unregister(name=names_2)\nnames_6 = state.register(name='lf', pid=-6255)\nnames_7 = state.register(name='s', pid=-873200385739613046)\nstate.where_is(name=names_7)\nstate.unregister(name=names_5)\nstate.where_is(name=names_7)\nnames_8 = state.register(name='ba', pid=3)\nstate.unregister(name=names_7)\nnames_9 = state.register(name=names_1, pid=0)\nnames_10 = state.register(name='agcpd', pid=1)\nnames_11 = state.register(name='feziadba', pid=-1666)\nnames_12 = state.register(name='x', pid=-16777615)\nstate.where_is(name=names_6)\nstate.unregister(name=names_0)\nnames_13 = state.register(name=names_1, pid=-30687)\nstate.where_is(name=names_1)\nstate.where_is(name='cf')\nstate.unregister(name=names_12)\nstate.unregister(name=names_3)\nstate.unregister(name=names_8)\nnames_14 = state.register(name='zubdc', pid=0)\nstate.where_is(name=None)\nstate.where_is(name='lne')\nstate.unregister(name=names_10)\nstate.where_is(name='tsqxwakgg')\nstate.where_is(name='bc')\nstate.unregister(name=names_6)\nnames_15 = state.register(name='szes', pid=-42)\nnames_16 = state.register(name='nga', pid=29483)\nnames_17 = state.register(name='djzxqtuz', pid=30)\nstate.unregister(name=names_16)\nstate.unregister(name=names_9)\nstate.where_is(name=names_1)\nstate.unregister(name=names_17)\nnames_18 = state.register(name='adtubc', pid=158808242891802228170821415693765328927)\nnames_19 = state.register(name='ls', pid=-30776)\nnames_20 = state.register(name='d', pid=-14536)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.006377833196893334, "generate:data": 4.429207183420658e-05, "generate:rule:where_is": 0.03986033401452005, "generate:rule:register": 0.06423283298499882, "generate:rule:unregister": 0.02229879074729979, "execute:rule:where_is": 0.00010041380301117897, "execute:rule:register": 0.0001649591140449047, "execute:rule:unregister": 0.00010075024329125881}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='uziqx')\nstate.where_is(name='tcxtornmkwmneljv')\nstate.where_is(name='')\nstate.where_is(name='jf')\nstate.where_is(name='hvry')\nstate.where_is(name='emggajxvpyai')\nstate.where_is(name='li')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='dd')\nstate.where_is(name='hhmnb')\nstate.where_is(name='d')\nstate.where_is(name='uucmbxn')\nstate.where_is(name='kdxfxuyemehik')\nstate.where_is(name='tyroot')\nstate.where_is(name='qmbe')\nstate.where_is(name='k')\nstate.where_is(name='xyfpguaixcdeytbgdrz')\nstate.where_is(name='sg')\nstate.where_is(name='zrmk')\nstate.where_is(name='ojadvhm')\nstate.where_is(name='tsbjow')\nstate.where_is(name='cceedertwu')\nstate.where_is(name='inya')\nstate.where_is(name='')\nstate.where_is(name='uat')\nstate.where_is(name='')\nstate.where_is(name='rz')\nstate.where_is(name='')\nstate.where_is(name='lldtthaiglkfslvgl')\nstate.where_is(name='vxrqvij')\nstate.where_is(name='lxwebnfus')\nstate.where_is(name='edcctem')\nstate.where_is(name='lnegpls')\nstate.where_is(name='msmjedypqzzxefqjs')\nstate.where_is(name='okrnqwqip')\nstate.where_is(name='gptmj')\nstate.where_is(name='iyzn')\nstate.where_is(name='j')\nstate.where_is(name='bhf')\nstate.where_is(name='ikr')\nstate.where_is(name='c')\nstate.where_is(name='gnhjrk')\nstate.where_is(name='qexoir')\nstate.where_is(name='gumrkjopzggtjetfd')\nstate.where_is(name='sgyufnrhcm')\nstate.where_is(name='')\nstate.where_is(name='yeg')\nstate.where_is(name='')\nstate.where_is(name='jnlimv')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005805502645671368, "generate:data": 4.35409601777792e-05, "generate:rule:where_is": 0.24843220529146492, "execute:rule:where_is": 0.0003290874883532524}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='uziqx')\nstate.where_is(name='tcxtornmkwmneljv')\nstate.where_is(name='')\nstate.where_is(name='jf')\nstate.where_is(name='hvry')\nstate.where_is(name='emggajxvpyai')\nstate.where_is(name='li')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='dd')\nstate.where_is(name='hhmnb')\nstate.where_is(name='d')\nstate.where_is(name='uucmbxn')\nstate.where_is(name='kdxfxuyemehik')\nstate.where_is(name='tyroot')\nstate.where_is(name='qmbe')\nstate.where_is(name='k')\nstate.where_is(name='xyfpguaixcdeytbgdrz')\nstate.where_is(name='sg')\nstate.where_is(name='zrmk')\nstate.where_is(name='ojadvhm')\nstate.where_is(name='tsbjow')\nstate.where_is(name='cceedertwu')\nstate.where_is(name='inya')\nstate.where_is(name='')\nstate.where_is(name='uat')\nstate.where_is(name='')\nstate.where_is(name='rz')\nstate.where_is(name='')\nstate.where_is(name='lldtthaiglkfslvgl')\nstate.where_is(name='vxrqvij')\nstate.where_is(name='lxwebnfus')\nstate.where_is(name='edcctem')\nstate.where_is(name='lnegpls')\nstate.where_is(name='msmjedypqzzxefqjs')\nstate.where_is(name='okrnqwqip')\nstate.where_is(name='gptmj')\nstate.where_is(name='iyzn')\nstate.where_is(name='j')\nstate.where_is(name='bhf')\nstate.where_is(name='ikr')\nstate.where_is(name='c')\nstate.where_is(name='gnhjrk')\nstate.where_is(name='qexoir')\nstate.where_is(name='gumrkjopzggtjetfd')\nstate.where_is(name='sgyufnrhcm')\nstate.where_is(name='')\nstate.where_is(name='yeg')\nstate.where_is(name='')\nstate.where_is(name='jnlimvaijjxqbyb')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0057989987544715405, "generate:data": 4.650000482797623e-05, "generate:rule:where_is": 0.24094908428378403, "execute:rule:where_is": 0.0003248357679694891}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='uziqx')\nstate.where_is(name='tcxtornmkwmneljv')\nstate.where_is(name='')\nstate.where_is(name='jf')\nstate.where_is(name='hvry')\nstate.where_is(name='emggajxvpyai')\nstate.where_is(name='li')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='dd')\nstate.where_is(name='hhmnb')\nstate.where_is(name='d')\nstate.where_is(name='uucmbxn')\nstate.where_is(name='kdxfxuyemehik')\nstate.where_is(name='tyroot')\nstate.where_is(name='qmbe')\nstate.where_is(name='k')\nstate.where_is(name='xyfpguaixcdeytbgdrz')\nstate.where_is(name='sg')\nstate.where_is(name='zrmk')\nstate.where_is(name='ojadvhm')\nstate.where_is(name='tsbjow')\nstate.where_is(name='cceedertwu')\nstate.where_is(name='inya')\nstate.where_is(name='')\nstate.where_is(name='uat')\nstate.where_is(name='')\nstate.where_is(name='rz')\nstate.where_is(name='')\nstate.where_is(name='lldtthaiglkfslvgl')\nstate.where_is(name='vxrqvij')\nstate.where_is(name='lxwebnfus')\nstate.where_is(name='edcctem')\nstate.where_is(name='lnegpls')\nstate.where_is(name='msmjedypqzzxefqjs')\nstate.where_is(name='okrnqwqip')\nstate.where_is(name='gptmj')\nstate.where_is(name='iyzn')\nstate.where_is(name='j')\nstate.where_is(name='bhf')\nstate.where_is(name='ikr')\nstate.where_is(name='c')\nstate.where_is(name='gnhjrk')\nstate.where_is(name='qexoir')\nstate.where_is(name='gumrkjopzggtjetfd')\nstate.where_is(name='sgyufnrhcm')\nstate.where_is(name='')\nstate.where_is(name='yeg')\nstate.where_is(name='')\nstate.where_is(name='jnlimvaijjxqbyb')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005993748316541314, "generate:data": 4.570791497826576e-05, "generate:rule:where_is": 0.25482962653040886, "execute:rule:where_is": 0.0003398789558559656}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='uziqx')\nstate.where_is(name='tcxtornmkwmneljv')\nstate.where_is(name='')\nstate.where_is(name='jf')\nstate.where_is(name='hvry')\nstate.where_is(name='emggajxvpyai')\nstate.where_is(name='li')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='dd')\nstate.where_is(name='hhmnb')\nstate.where_is(name='d')\nstate.where_is(name='uucmbxn')\nstate.where_is(name='kdxfxuyemehik')\nstate.where_is(name='tyroot')\nstate.where_is(name='qmbe')\nstate.where_is(name='k')\nstate.where_is(name='xyfpguaixcdeytbgdrz')\nstate.where_is(name='sg')\nstate.where_is(name='zrmk')\nstate.where_is(name='ojadvhm')\nstate.where_is(name='tsbjow')\nstate.where_is(name='cceedertwu')\nstate.where_is(name='inya')\nstate.where_is(name='')\nstate.where_is(name='uat')\nstate.where_is(name='')\nstate.where_is(name='rz')\nstate.where_is(name='')\nstate.where_is(name='lldtthaiglkfslvgl')\nstate.where_is(name='vxrqvij')\nstate.where_is(name='lxwebnfus')\nstate.where_is(name='edcctem')\nstate.where_is(name='lnegpls')\nstate.where_is(name='msmjedypqzzxefqjs')\nstate.where_is(name='okrnqwv')\nstate.where_is(name='wa')\nstate.where_is(name='gj')\nstate.where_is(name='iyzn')\nstate.where_is(name='j')\nstate.where_is(name='bhf')\nstate.where_is(name='ikr')\nstate.where_is(name='c')\nstate.where_is(name='gnhjrk')\nstate.where_is(name='qexoir')\nstate.where_is(name='gumrkjopzggtjetfd')\nstate.where_is(name='sgyufnrhcm')\nstate.where_is(name='')\nstate.where_is(name='yeg')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005866586230695248, "generate:data": 4.595797508955002e-05, "generate:rule:where_is": 0.24289120570756495, "execute:rule:where_is": 0.00033099926076829433}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='uziqx')\nstate.where_is(name='tcxtornmkwmneljv')\nstate.where_is(name='')\nstate.where_is(name='jf')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='emggajxvpyai')\nstate.where_is(name='li')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='dd')\nstate.where_is(name='hhmnb')\nstate.where_is(name='d')\nstate.where_is(name='uucmbxn')\nstate.where_is(name='kdxfxuyemehik')\nstate.where_is(name='tyroot')\nstate.where_is(name='qmbe')\nstate.where_is(name='k')\nstate.where_is(name='xyfpguaixcdeytbgdrz')\nstate.where_is(name='sg')\nstate.where_is(name='zrmk')\nstate.where_is(name='ojadvhm')\nstate.where_is(name='tsbjow')\nstate.where_is(name='cceedertwu')\nstate.where_is(name='inya')\nstate.where_is(name='')\nstate.where_is(name='uat')\nstate.where_is(name='')\nstate.where_is(name='rz')\nstate.where_is(name='')\nstate.where_is(name='lldtthaiglkfslvgl')\nstate.where_is(name='vxrqvij')\nstate.where_is(name='lxwebnfus')\nstate.where_is(name='edcctem')\nstate.where_is(name='lnegpls')\nstate.where_is(name='msmjedypqzzxefqjs')\nstate.where_is(name='okrnqwv')\nstate.where_is(name='wa')\nstate.where_is(name='gj')\nstate.where_is(name='iyzn')\nstate.where_is(name='j')\nstate.where_is(name='bhf')\nstate.where_is(name='ikr')\nstate.where_is(name='c')\nstate.where_is(name='gnhjrk')\nstate.where_is(name='qexoir')\nstate.where_is(name='gumrkjopzggtjetfd')\nstate.where_is(name='sgyufnrhcm')\nstate.where_is(name='')\nstate.where_is(name='yeg')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.00583912106230855, "generate:data": 4.4082989916205406e-05, "generate:rule:where_is": 0.24992662901058793, "execute:rule:where_is": 0.0003299606032669544}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='uziqx')\nstate.where_is(name='tcxtornmkwmneljv')\nstate.where_is(name='')\nstate.where_is(name='jf')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='emggajxvpyai')\nstate.where_is(name='li')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='dd')\nstate.where_is(name='hhmnb')\nstate.where_is(name='d')\nstate.where_is(name='uucmbxn')\nstate.where_is(name='kdxfxuyemehik')\nstate.where_is(name='tyroot')\nstate.where_is(name='qmbe')\nstate.where_is(name='k')\nstate.where_is(name='xyfpguaixcdeytbgdrz')\nstate.where_is(name='sg')\nstate.where_is(name='zrmk')\nstate.where_is(name='ojadvhm')\nstate.where_is(name='tsbjow')\nstate.where_is(name='cceedertwu')\nstate.where_is(name='inya')\nstate.where_is(name='')\nstate.where_is(name='uat')\nstate.where_is(name='')\nstate.where_is(name='rz')\nstate.where_is(name='')\nstate.where_is(name='lldtthaiglkfslvgl')\nstate.where_is(name='vxrqvij')\nstate.where_is(name='lxwebnfus')\nstate.where_is(name='edcctem')\nstate.where_is(name='lnegpls')\nstate.where_is(name='msmjedypqzzxefqjs')\nstate.where_is(name='okrnqwv')\nstate.where_is(name='wa')\nstate.where_is(name='gj')\nstate.where_is(name='iyzn')\nstate.where_is(name='j')\nstate.where_is(name='bhf')\nstate.where_is(name='ikr')\nstate.where_is(name='c')\nstate.where_is(name='gnhjrk')\nstate.where_is(name='qexoir')\nstate.where_is(name='gumrkjopzggtjetfd')\nstate.where_is(name='sgyufnrhcm')\nstate.where_is(name='')\nstate.where_is(name='yeg')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.005858546122908592, "generate:data": 4.570791497826576e-05, "generate:rule:where_is": 0.24191691307350993, "execute:rule:where_is": 0.000330792972818017}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='uziqx')\nstate.where_is(name='tcxtornmkwmneljv')\nstate.where_is(name='')\nstate.where_is(name='jf')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='emggajxvpyai')\nstate.where_is(name='li')\nstate.where_is(name='xnkkiegtfjobj')\nstate.where_is(name='dd')\nstate.where_is(name='hhmnb')\nstate.where_is(name='d')\nstate.where_is(name='uucmbxn')\nstate.where_is(name='kdxfxuyemehik')\nstate.where_is(name='tyroot')\nstate.where_is(name='qmbe')\nstate.where_is(name='k')\nstate.where_is(name='xyfpguaixcdeytbgdrz')\nstate.where_is(name='sg')\nstate.where_is(name='zrmk')\nstate.where_is(name='ojadvhm')\nstate.where_is(name='tsbjow')\nstate.where_is(name='cceedertwu')\nstate.where_is(name='inya')\nstate.where_is(name='')\nstate.where_is(name='uat')\nstate.where_is(name='')\nstate.where_is(name='rz')\nstate.where_is(name='')\nstate.where_is(name='lldtthaiglkfslvgl')\nstate.where_is(name='vxrqvij')\nstate.where_is(name='lxwebnfus')\nstate.where_is(name='edcctem')\nstate.where_is(name='lnegpls')\nstate.where_is(name='msmjedypqzzxefqjs')\nstate.where_is(name='okrnqwv')\nstate.where_is(name='wa')\nstate.where_is(name='gj')\nstate.where_is(name='iyzn')\nstate.where_is(name='j')\nstate.where_is(name='bhf')\nstate.where_is(name='ikr')\nstate.where_is(name='c')\nstate.where_is(name='gnhjrk')\nstate.where_is(name='qexoir')\nstate.where_is(name='gumrkjopzggtjetfd')\nstate.where_is(name='sgyufnrhcm')\nstate.where_is(name='')\nstate.where_is(name='yeg')\nstate.where_is(name='')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0058583777863532305, "generate:data": 4.520895890891552e-05, "generate:rule:where_is": 0.242767081130296, "execute:rule:where_is": 0.0003284171689301729}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=-55)\nnames_1 = state.register(name=names_0, pid=-10715)\nstate.unregister(name=names_1)\nnames_2 = state.register(name='yyiynrrobohcbewnk', pid=25157)\nnames_3 = state.register(name='wveqtomfjeijjnxz', pid=24911)\nstate.unregister(name=names_2)\nnames_4 = state.register(name='rhbg', pid=-23678)\nstate.unregister(name=names_0)\nstate.unregister(name=names_4)\nstate.unregister(name=names_3)\nnames_5 = state.register(name='x', pid=-20694)\nnames_6 = state.register(name='kgnlzwniwwfpqpztzbrwczapkqjjd', pid=-94)\nstate.unregister(name=names_5)\nnames_7 = state.register(name='rvwp', pid=-10863)\nnames_8 = state.register(name='ysquvhtmweyzkc', pid=-1903112264647683912)\nnames_9 = state.register(name='uf', pid=50)\nstate.unregister(name=names_9)\nstate.unregister(name=names_8)\nstate.unregister(name=names_7)\nnames_10 = state.register(name='e', pid=-44)\nstate.unregister(name=names_6)\nstate.unregister(name=names_10)\nnames_11 = state.register(name='ag', pid=48)\nstate.unregister(name=names_11)\nnames_12 = state.register(name='rzk', pid=-27034)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='ufbhid', pid=154021614)\nstate.unregister(name=names_13)\nnames_14 = state.register(name='oq', pid=20008)\nnames_15 = state.register(name='de', pid=12558)\nstate.unregister(name=names_15)\nstate.unregister(name=names_14)\nnames_16 = state.register(name='gfumbm', pid=110)\nstate.unregister(name=names_16)\nnames_17 = state.register(name='rnafcqjzjdwjqlymmfzrusckmochkjtd', pid=-29863)\nnames_18 = state.register(name='gminmhnk', pid=-83)\nstate.unregister(name=names_17)\nnames_19 = state.register(name=names_5, pid=60753404)\nstate.unregister(name=names_18)\nstate.unregister(name=names_19)\nnames_20 = state.register(name='h', pid=-3185651290835116831)\nnames_21 = state.register(name='f', pid=17418)\nnames_22 = state.register(name='bt', pid=99559069570783349956590859125848351532)\nnames_23 = state.register(name='y', pid=-7366970360318333106)\nnames_24 = state.register(name='jpvre', pid=-31)\nstate.unregister(name=names_21)\nstate.unregister(name=names_23)\nnames_25 = state.register(name='fbvsguxsnvvmvgz', pid=-95)\nstate.unregister(name=names_24)\nnames_26 = state.register(name=names_0, pid=-5955)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 48, "failures": 2}, "timing": {"execute:test": 0.006468292558565736, "generate:data": 4.466692917048931e-05, "generate:rule:register": 0.12548987520858645, "generate:rule:unregister": 0.04232049803249538, "execute:rule:register": 0.00020829192362725735, "execute:rule:unregister": 0.00016220752149820328}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=-55)\nnames_1 = state.register(name=names_0, pid=-10715)\nstate.unregister(name=names_1)\nnames_2 = state.register(name='yyiynrrobohcbewnk', pid=25157)\nnames_3 = state.register(name='wveqtomfjeijjnxz', pid=24911)\nstate.unregister(name=names_2)\nnames_4 = state.register(name='rhbg', pid=-23678)\nstate.unregister(name=names_0)\nstate.unregister(name=names_4)\nstate.unregister(name=names_3)\nnames_5 = state.register(name='x', pid=-20694)\nnames_6 = state.register(name='kgnlzwniwwfpqpztzbrwczapkqjjd', pid=-94)\nstate.unregister(name=names_5)\nnames_7 = state.register(name='rvwp', pid=-10863)\nnames_8 = state.register(name='ysquvhtmweyzkc', pid=-1903112264647683912)\nnames_9 = state.register(name='uf', pid=50)\nstate.unregister(name=names_9)\nstate.unregister(name=names_8)\nstate.unregister(name=names_7)\nnames_10 = state.register(name='e', pid=-44)\nstate.unregister(name=names_6)\nstate.unregister(name=names_10)\nnames_11 = state.register(name='ag', pid=48)\nstate.unregister(name=names_11)\nnames_12 = state.register(name='rzk', pid=-27034)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='ufbhid', pid=154021614)\nstate.unregister(name=names_13)\nnames_14 = state.register(name='oq', pid=20008)\nnames_15 = state.register(name='de', pid=12558)\nstate.unregister(name=names_15)\nstate.unregister(name=names_14)\nnames_16 = state.register(name='gfumbm', pid=110)\nstate.unregister(name=names_16)\nnames_17 = state.register(name='rnafcqjzjdwjqlymmfzrusckmochkjtd', pid=-29863)\nnames_18 = state.register(name='gminmhnk', pid=-83)\nstate.unregister(name=names_17)\nnames_19 = state.register(name=names_5, pid=60753404)\nstate.unregister(name=names_18)\nstate.unregister(name=names_19)\nnames_20 = state.register(name='h', pid=-3185651290835116831)\nnames_21 = state.register(name='f', pid=17418)\nnames_22 = state.register(name='bt', pid=99559069570783349956590859125848351532)\nnames_23 = state.register(name='y', pid=-7366970360318333106)\nnames_24 = state.register(name='jpvre', pid=-31)\nstate.unregister(name=names_21)\nstate.unregister(name=names_23)\nnames_25 = state.register(name='fbvsguxsnvvmvgz', pid=-95)\nstate.unregister(name=names_24)\nnames_26 = state.register(name=names_0, pid=-5955)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 48, "failures": 2}, "timing": {"execute:test": 0.006461957702413201, "generate:data": 4.4208019971847534e-05, "generate:rule:register": 0.12131116748787463, "generate:rule:unregister": 0.039861624827608466, "execute:rule:register": 0.00021154270507395267, "execute:rule:unregister": 0.00016308389604091644}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=-55)\nnames_1 = state.register(name=names_0, pid=-10715)\nstate.unregister(name=names_1)\nnames_2 = state.register(name='yyiynrrobohcbewnk', pid=25157)\nnames_3 = state.register(name='wveqtomfjeijjnxz', pid=24911)\nstate.unregister(name=names_2)\nnames_4 = state.register(name='rhbg', pid=-23678)\nstate.unregister(name=names_0)\nstate.unregister(name=names_4)\nstate.unregister(name=names_3)\nnames_5 = state.register(name='x', pid=-20694)\nnames_6 = state.register(name='kgnlzwniwwfpqpztzbrwczapkqjjd', pid=-94)\nstate.unregister(name=names_5)\nnames_7 = state.register(name='rvwp', pid=-10863)\nnames_8 = state.register(name='ysquvhtmweyzkc', pid=-1903112264647683912)\nnames_9 = state.register(name='uf', pid=50)\nstate.unregister(name=names_9)\nstate.unregister(name=names_8)\nstate.unregister(name=names_7)\nnames_10 = state.register(name='e', pid=-44)\nstate.unregister(name=names_6)\nstate.unregister(name=names_10)\nnames_11 = state.register(name='ag', pid=48)\nstate.unregister(name=names_11)\nnames_12 = state.register(name='rzk', pid=-27034)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='ufbhid', pid=154021614)\nstate.unregister(name=names_13)\nnames_14 = state.register(name='oq', pid=20008)\nnames_15 = state.register(name='de', pid=12558)\nstate.unregister(name=names_15)\nstate.unregister(name=names_14)\nnames_16 = state.register(name='gfumbm', pid=110)\nstate.unregister(name=names_16)\nnames_17 = state.register(name='rnafcqjzjdwjqlymmfzrusckmochkjtd', pid=-29863)\nnames_18 = state.register(name='gminmhnk', pid=-83)\nstate.unregister(name=names_17)\nnames_19 = state.register(name=names_5, pid=60753404)\nstate.unregister(name=names_18)\nstate.unregister(name=names_19)\nnames_20 = state.register(name='h', pid=-3185651290835116831)\nnames_21 = state.register(name='f', pid=17418)\nnames_22 = state.register(name='bt', pid=99559069570783349956590859125848351532)\nnames_23 = state.register(name='y', pid=-7366970360318333106)\nnames_24 = state.register(name='jpvre', pid=-31)\nstate.unregister(name=names_21)\nstate.unregister(name=names_24)\nnames_25 = state.register(name='fbvsguxsnvvmvgz', pid=-95)\nstate.unregister(name=names_23)\nnames_26 = state.register(name=names_0, pid=-5955)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 48, "failures": 2}, "timing": {"execute:test": 0.006392298033460975, "generate:data": 4.6582892537117004e-05, "generate:rule:register": 0.12177141383290291, "generate:rule:unregister": 0.03990595508366823, "execute:rule:register": 0.00020583602599799633, "execute:rule:unregister": 0.00015974859707057476}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=-55)\nnames_1 = state.register(name=names_0, pid=-10715)\nstate.unregister(name=names_1)\nnames_2 = state.register(name='yyiynrrobohcbewnk', pid=25157)\nnames_3 = state.register(name='wveqtomfjeijjnxz', pid=24911)\nstate.unregister(name=names_2)\nnames_4 = state.register(name='rhbg', pid=-23678)\nstate.unregister(name=names_0)\nstate.unregister(name=names_4)\nstate.unregister(name=names_3)\nnames_5 = state.register(name='x', pid=-20694)\nnames_6 = state.register(name='kgnlzwniwwfpqpztzbrwczapkqjjd', pid=-94)\nstate.unregister(name=names_5)\nnames_7 = state.register(name='rvwp', pid=-10863)\nnames_8 = state.register(name='ysquvhtmweyzkc', pid=-1903112264647683912)\nnames_9 = state.register(name='uf', pid=50)\nstate.unregister(name=names_9)\nstate.unregister(name=names_8)\nstate.unregister(name=names_7)\nnames_10 = state.register(name='e', pid=-44)\nstate.unregister(name=names_6)\nstate.unregister(name=names_10)\nnames_11 = state.register(name='ag', pid=48)\nstate.unregister(name=names_11)\nnames_12 = state.register(name='rzk', pid=-27034)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='ufbhid', pid=154021614)\nstate.unregister(name=names_13)\nnames_14 = state.register(name='oq', pid=20008)\nnames_15 = state.register(name='de', pid=12558)\nstate.unregister(name=names_15)\nstate.unregister(name=names_14)\nnames_16 = state.register(name='gfumbm', pid=110)\nstate.unregister(name=names_16)\nnames_17 = state.register(name='rnafcqjzjdwjqlymmfzrusckmochkjtd', pid=-29863)\nnames_18 = state.register(name='gminmhnk', pid=-83)\nstate.unregister(name=names_17)\nnames_19 = state.register(name=names_5, pid=60753404)\nstate.unregister(name=names_18)\nstate.unregister(name=names_19)\nnames_20 = state.register(name='h', pid=-3185651290835116831)\nnames_21 = state.register(name='f', pid=17418)\nnames_22 = state.register(name='bt', pid=99559069570783349956590859125848351532)\nnames_23 = state.register(name='y', pid=-7366970360318333106)\nnames_24 = state.register(name='jpvre', pid=-31)\nstate.unregister(name=names_21)\nstate.unregister(name=names_24)\nnames_25 = state.register(name='fbvsguxsnvvmvgz', pid=-95)\nstate.unregister(name=names_23)\nnames_26 = state.register(name=names_0, pid=-5955)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 48, "failures": 2}, "timing": {"execute:test": 0.006420123856514692, "generate:data": 4.75000124424696e-05, "generate:rule:register": 0.1213279573712498, "generate:rule:unregister": 0.039813627721741796, "execute:rule:register": 0.00020653940737247467, "execute:rule:unregister": 0.00016262358985841274}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "gave_up", "status_reason": "Aborted test because unable to satisfy sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled)", "representation": "state = NameServerComparison()\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 0, "failures": 0}, "timing": {"execute:test": 0.0027524579782038927, "generate:data": 4.4209184125065804e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=-55)\nnames_1 = state.register(name=names_0, pid=-10715)\nstate.unregister(name=names_1)\nnames_2 = state.register(name='yyiynrrobohcbewnk', pid=25157)\nnames_3 = state.register(name='wveqtomfjeijjnxz', pid=24911)\nstate.unregister(name=names_2)\nnames_4 = state.register(name='rhbg', pid=-23678)\nstate.unregister(name=names_0)\nstate.unregister(name=names_4)\nstate.unregister(name=names_3)\nnames_5 = state.register(name='x', pid=-20694)\nnames_6 = state.register(name='kgnlzwniwwfpqpztzbrwczapkqjjd', pid=-94)\nstate.unregister(name=names_5)\nnames_7 = state.register(name='rvwp', pid=-10863)\nnames_8 = state.register(name='ysquvhtmweyzkc', pid=-1903112264647683912)\nnames_9 = state.register(name='uf', pid=50)\nstate.unregister(name=names_9)\nstate.unregister(name=names_8)\nstate.unregister(name=names_7)\nnames_10 = state.register(name='e', pid=-44)\nstate.unregister(name=names_6)\nstate.unregister(name=names_10)\nnames_11 = state.register(name='ag', pid=48)\nstate.unregister(name=names_11)\nnames_12 = state.register(name='rzk', pid=-27034)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='ufbhid', pid=154021614)\nstate.unregister(name=names_13)\nnames_14 = state.register(name='oq', pid=20008)\nnames_15 = state.register(name='de', pid=12558)\nstate.unregister(name=names_15)\nstate.unregister(name=names_14)\nnames_16 = state.register(name=names_10, pid=110)\nstate.unregister(name=names_16)\nnames_17 = state.register(name='rnafcqjzjdwjqlymmfzrusckmochkjtd', pid=-29863)\nnames_18 = state.register(name='gminmhnk', pid=-83)\nstate.unregister(name=names_17)\nnames_19 = state.register(name=names_5, pid=60753404)\nstate.unregister(name=names_18)\nstate.unregister(name=names_19)\nnames_20 = state.register(name='h', pid=-3185651290835116831)\nnames_21 = state.register(name='f', pid=17418)\nnames_22 = state.register(name='bt', pid=99559069570783349956590859125848351532)\nnames_23 = state.register(name='y', pid=-7366970360318333106)\nnames_24 = state.register(name='jpvre', pid=-31)\nstate.unregister(name=names_21)\nstate.unregister(name=names_24)\nnames_25 = state.register(name='fbvsguxsnvvmvgz', pid=-95)\nstate.unregister(name=names_23)\nnames_26 = state.register(name=names_0, pid=-5955)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 48, "failures": 2}, "timing": {"execute:test": 0.006303585832938552, "generate:data": 4.283408634364605e-05, "generate:rule:register": 0.1197862490080297, "generate:rule:unregister": 0.03966045705601573, "execute:rule:register": 0.00020374823361635208, "execute:rule:unregister": 0.0001586258877068758}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=-55)\nnames_1 = state.register(name=names_0, pid=-10715)\nstate.unregister(name=names_1)\nnames_2 = state.register(name='yyiynrrobohcbewnk', pid=25157)\nnames_3 = state.register(name='wveqtomfjeijjnxz', pid=24911)\nstate.unregister(name=names_2)\nnames_4 = state.register(name='rhbg', pid=-23678)\nstate.unregister(name=names_0)\nstate.unregister(name=names_4)\nstate.unregister(name=names_3)\nnames_5 = state.register(name='x', pid=-20694)\nnames_6 = state.register(name='kgnlzwniwwfpqpztzbrwczapkqjjd', pid=-94)\nstate.unregister(name=names_5)\nnames_7 = state.register(name='rvwp', pid=-10863)\nnames_8 = state.register(name='ysquvhtmweyzkc', pid=-1903112264647683912)\nnames_9 = state.register(name='uf', pid=50)\nstate.unregister(name=names_9)\nstate.unregister(name=names_8)\nstate.unregister(name=names_7)\nnames_10 = state.register(name='e', pid=-44)\nstate.unregister(name=names_6)\nstate.unregister(name=names_10)\nnames_11 = state.register(name='ag', pid=48)\nstate.unregister(name=names_11)\nnames_12 = state.register(name='rzk', pid=-27034)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='ufbhid', pid=154021614)\nstate.unregister(name=names_13)\nnames_14 = state.register(name='oq', pid=20008)\nnames_15 = state.register(name='de', pid=12558)\nstate.unregister(name=names_15)\nstate.unregister(name=names_14)\nnames_16 = state.register(name=names_10, pid=110)\nstate.unregister(name=names_16)\nnames_17 = state.register(name='rnafcqjzjdwjqlymmfzrusckmochkjtd', pid=-29863)\nnames_18 = state.register(name='gminmhnk', pid=-83)\nstate.unregister(name=names_17)\nnames_19 = state.register(name=names_5, pid=60753404)\nstate.unregister(name=names_18)\nstate.unregister(name=names_19)\nnames_20 = state.register(name='h', pid=-3185651290835116831)\nnames_21 = state.register(name='f', pid=17418)\nnames_22 = state.register(name='bt', pid=99559069570783349956590859125848351532)\nnames_23 = state.register(name='y', pid=-7366970360318333106)\nnames_24 = state.register(name='jpvre', pid=-31)\nstate.unregister(name=names_21)\nstate.unregister(name=names_24)\nnames_25 = state.register(name='fbvsguxsnvvmvgz', pid=-95)\nstate.unregister(name=names_23)\nnames_26 = state.register(name=names_0, pid=-5955)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 48, "failures": 2}, "timing": {"execute:test": 0.0065247975289821625, "generate:data": 4.433305002748966e-05, "generate:rule:register": 0.12264133105054498, "generate:rule:unregister": 0.042368913535028696, "execute:rule:register": 0.00024233898147940636, "execute:rule:unregister": 0.00016454258002340794}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='vyjylc')\nnames_0 = state.register(name='', pid=-14686)\nnames_1 = state.register(name=names_0, pid=12361)\nstate.where_is(name=None)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='yyoyfgdqwuogfal', pid=1484)\nnames_3 = state.register(name='cse', pid=-20438)\nstate.where_is(name='wipi')\nstate.where_is(name=None)\nnames_4 = state.register(name='zhzkxdihlaadzeouqwutfqkl', pid=-30812)\nstate.where_is(name='eo')\nnames_5 = state.register(name='wocmpqnmpx', pid=104)\nnames_6 = state.register(name=names_0, pid=62)\nstate.where_is(name=names_3)\nstate.unregister(name=names_0)\nnames_7 = state.register(name='zojn', pid=83)\nstate.where_is(name=names_7)\nstate.where_is(name='fmnvnybrbbj')\nnames_8 = state.register(name='ypzh', pid=-112)\nstate.unregister(name=names_2)\nstate.where_is(name=names_3)\nstate.where_is(name='ps')\nstate.where_is(name='dtr')\nnames_9 = state.register(name='bs', pid=-6656)\nnames_10 = state.register(name='elijnpvyc', pid=26793)\nstate.unregister(name=names_9)\nstate.unregister(name=names_6)\nnames_11 = state.register(name='y', pid=122)\nstate.where_is(name=names_7)\nnames_12 = state.register(name='z', pid=17705)\nnames_13 = state.register(name=names_0, pid=-6842)\nstate.unregister(name=names_12)\nstate.unregister(name=names_13)\nstate.unregister(name=names_5)\nstate.unregister(name=names_3)\nnames_14 = state.register(name='wxyclv', pid=-66)\nnames_15 = state.register(name='eydsyakjpjv', pid=-122)\nstate.where_is(name=names_10)\nstate.where_is(name=names_7)\nstate.where_is(name='ow')\nnames_16 = state.register(name='ektblxdvvbh', pid=28539)\nstate.unregister(name=names_1)\nnames_17 = state.register(name='tt', pid=-95)\nnames_18 = state.register(name=names_0, pid=1444)\nstate.unregister(name=names_7)\nstate.unregister(name=names_14)\nstate.where_is(name=names_16)\nstate.unregister(name=names_17)\nstate.unregister(name=names_4)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"len": 46, "failures": 4}, "timing": {"execute:test": 0.006268459605053067, "generate:data": 4.7083012759685516e-05, "generate:rule:where_is": 0.04926400142721832, "generate:rule:register": 0.07460045674815774, "generate:rule:unregister": 0.021145790116861463, "execute:rule:where_is": 0.0001172511838376522, "execute:rule:register": 0.00014900113455951214, "execute:rule:unregister": 9.645707905292511e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='vyjylc')\nnames_0 = state.register(name='', pid=-14686)\nnames_1 = state.register(name=names_0, pid=12361)\nstate.where_is(name=None)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='yyoyfgdqwuogfal', pid=1484)\nnames_3 = state.register(name='cse', pid=-20438)\nstate.where_is(name='wipi')\nstate.where_is(name=None)\nnames_4 = state.register(name='zhzkxdihlaadzeouqwutfqkl', pid=-30812)\nstate.where_is(name='eo')\nnames_5 = state.register(name='wocmpqnmpx', pid=104)\nnames_6 = state.register(name=names_0, pid=62)\nstate.where_is(name=names_3)\nstate.unregister(name=names_0)\nnames_7 = state.register(name='zojn', pid=83)\nstate.where_is(name=names_7)\nstate.where_is(name='fmnvnybrbbj')\nnames_8 = state.register(name='ypzh', pid=-112)\nstate.unregister(name=names_2)\nstate.where_is(name=names_3)\nstate.where_is(name='ps')\nstate.where_is(name='dtr')\nnames_9 = state.register(name='bs', pid=-6656)\nnames_10 = state.register(name='elijnpvyc', pid=26793)\nstate.unregister(name=names_9)\nstate.unregister(name=names_6)\nnames_11 = state.register(name='y', pid=122)\nstate.where_is(name=names_7)\nnames_12 = state.register(name='z', pid=17705)\nnames_13 = state.register(name=names_0, pid=-6842)\nstate.unregister(name=names_12)\nstate.unregister(name=names_13)\nstate.unregister(name=names_5)\nstate.unregister(name=names_3)\nnames_14 = state.register(name='wxyclv', pid=-66)\nnames_15 = state.register(name='eydsyakjpjv', pid=-122)\nstate.where_is(name=names_10)\nstate.where_is(name=names_7)\nstate.where_is(name='ow')\nnames_16 = state.register(name='ektblxdvvbh', pid=28539)\nstate.unregister(name=names_1)\nnames_17 = state.register(name='tt', pid=-95)\nnames_18 = state.register(name=names_0, pid=1444)\nstate.unregister(name=names_7)\nstate.unregister(name=names_14)\nstate.where_is(name=names_16)\nstate.unregister(name=names_17)\nstate.unregister(name=names_4)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"len": 46, "failures": 4}, "timing": {"execute:test": 0.006200713338330388, "generate:data": 4.454096779227257e-05, "generate:rule:where_is": 0.04693728918209672, "generate:rule:register": 0.0726574556902051, "generate:rule:unregister": 0.019780833972617984, "execute:rule:where_is": 0.0001168323215097189, "execute:rule:register": 0.00014916644431650639, "execute:rule:unregister": 9.358278475701809e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='vyjylc')\nnames_0 = state.register(name='', pid=-14686)\nnames_1 = state.register(name=names_0, pid=12361)\nstate.where_is(name=None)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='yyoyfgdqwuogfal', pid=1484)\nnames_3 = state.register(name='cse', pid=-20438)\nstate.where_is(name='wipi')\nstate.where_is(name=None)\nnames_4 = state.register(name='zhzkxdihlaadzeouqwutfqkl', pid=-30812)\nstate.where_is(name='eo')\nnames_5 = state.register(name='wocmpqnmpx', pid=104)\nnames_6 = state.register(name=names_0, pid=62)\nstate.where_is(name=names_3)\nstate.unregister(name=names_0)\nnames_7 = state.register(name='zojn', pid=83)\nstate.where_is(name=names_7)\nstate.where_is(name='fmnvcybrbbj')\nnames_8 = state.register(name='ypzh', pid=-112)\nstate.unregister(name=names_2)\nstate.where_is(name=names_3)\nstate.where_is(name='ps')\nstate.where_is(name='dtr')\nnames_9 = state.register(name='bs', pid=-6656)\nnames_10 = state.register(name='elijnpvyc', pid=26793)\nstate.unregister(name=names_9)\nstate.unregister(name=names_6)\nnames_11 = state.register(name='y', pid=122)\nstate.where_is(name=names_7)\nnames_12 = state.register(name='z', pid=17705)\nnames_13 = state.register(name=names_0, pid=-6842)\nstate.unregister(name=names_12)\nstate.unregister(name=names_13)\nstate.unregister(name=names_5)\nstate.unregister(name=names_3)\nnames_14 = state.register(name='wxyclv', pid=-66)\nnames_15 = state.register(name='eydsyakjpjv', pid=-122)\nstate.where_is(name=names_10)\nstate.where_is(name=names_7)\nstate.where_is(name='ow')\nnames_16 = state.register(name='ektblxdvvbh', pid=28539)\nstate.unregister(name=names_1)\nnames_17 = state.register(name='tt', pid=-95)\nnames_18 = state.register(name=names_0, pid=1444)\nstate.unregister(name=names_7)\nstate.unregister(name=names_14)\nstate.where_is(name=names_16)\nstate.unregister(name=names_17)\nstate.unregister(name=names_4)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"len": 46, "failures": 4}, "timing": {"execute:test": 0.006285253446549177, "generate:data": 4.387483932077885e-05, "generate:rule:where_is": 0.04834120720624924, "generate:rule:register": 0.07459812215529382, "generate:rule:unregister": 0.020763042150065303, "execute:rule:where_is": 0.00011766725219786167, "execute:rule:register": 0.0001502924133092165, "execute:rule:unregister": 9.47082880884409e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='vyjylc')\nnames_0 = state.register(name='', pid=-14686)\nnames_1 = state.register(name=names_0, pid=12361)\nstate.where_is(name=None)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='yyoyfgdqwuogfal', pid=1484)\nnames_3 = state.register(name='cse', pid=-20438)\nstate.where_is(name='wipi')\nstate.where_is(name=None)\nnames_4 = state.register(name='zhzkxdihlaadzeouqwutfqkl', pid=-30812)\nstate.unregister(name=names_4)\nstate.where_is(name='jawocmpqnmpx')\nnames_5 = state.register(name='ka', pid=62)\nstate.where_is(name=None)\nstate.unregister(name=names_0)\nstate.unregister(name=names_3)\nstate.unregister(name=names_1)\nstate.where_is(name='gfacnb')\nstate.where_is(name='fmnvcybrbbj')\nnames_6 = state.register(name='ypzh', pid=-112)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.where_is(name='ps')\nstate.where_is(name='dtr')\nnames_7 = state.register(name='bs', pid=-6656)\nnames_8 = state.register(name='elijnpvyc', pid=26793)\nstate.unregister(name=names_7)\nstate.unregister(name=names_5)\nnames_9 = state.register(name='y', pid=122)\nstate.where_is(name=names_6)\nnames_10 = state.register(name='z', pid=17705)\nnames_11 = state.register(name=names_0, pid=-6842)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nstate.unregister(name=names_11)\nstate.where_is(name='pc')\nnames_12 = state.register(name='xyclv', pid=-66)\nnames_13 = state.register(name='eydsyakjpjv', pid=-122)\nstate.where_is(name=names_6)\nstate.where_is(name=names_12)\nstate.where_is(name='ow')\nnames_14 = state.register(name='ektblxdvvbh', pid=28539)\nstate.unregister(name=names_14)\nnames_15 = state.register(name='tt', pid=-95)\nnames_16 = state.register(name=names_0, pid=1444)\nstate.unregister(name=names_16)\nstate.unregister(name=names_6)\nstate.where_is(name=names_12)\nstate.unregister(name=names_13)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"len": 48, "failures": 2}, "timing": {"execute:test": 0.006083374843001366, "generate:data": 4.3459003791213036e-05, "generate:rule:where_is": 0.055136291310191154, "generate:rule:register": 0.06506320741027594, "generate:rule:unregister": 0.022479876643046737, "execute:rule:where_is": 0.00012329034507274628, "execute:rule:register": 0.00013174698688089848, "execute:rule:unregister": 9.854370728135109e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='vyjylc')\nnames_0 = state.register(name='', pid=-14686)\nnames_1 = state.register(name=names_0, pid=73)\nstate.where_is(name=None)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='yyoyfgdqwuogfal', pid=1484)\nnames_3 = state.register(name='cse', pid=-20438)\nstate.where_is(name='wipi')\nstate.where_is(name=None)\nnames_4 = state.register(name='zhzkxdihlaadzeouqwutfqkl', pid=-30812)\nstate.unregister(name=names_4)\nstate.where_is(name='jawocmpqnmpx')\nnames_5 = state.register(name='ka', pid=62)\nstate.where_is(name=None)\nstate.unregister(name=names_0)\nstate.unregister(name=names_3)\nstate.unregister(name=names_1)\nstate.where_is(name='gfacnb')\nstate.where_is(name='fmnvcybrbbj')\nnames_6 = state.register(name='ypzh', pid=-112)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.where_is(name='ps')\nstate.where_is(name='dtr')\nnames_7 = state.register(name='bs', pid=-6656)\nnames_8 = state.register(name='elijnpvyc', pid=26793)\nstate.unregister(name=names_7)\nstate.unregister(name=names_5)\nnames_9 = state.register(name='y', pid=122)\nstate.where_is(name=names_6)\nnames_10 = state.register(name='z', pid=17705)\nnames_11 = state.register(name=names_0, pid=-6842)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nstate.unregister(name=names_11)\nstate.where_is(name='pc')\nnames_12 = state.register(name='xyclv', pid=-66)\nnames_13 = state.register(name='eydsyakjpjv', pid=-122)\nstate.where_is(name=names_6)\nstate.where_is(name=names_12)\nstate.where_is(name='ow')\nnames_14 = state.register(name='ektblxdvvbh', pid=28539)\nstate.unregister(name=names_14)\nnames_15 = state.register(name='tt', pid=-95)\nnames_16 = state.register(name=names_0, pid=1444)\nstate.unregister(name=names_16)\nstate.unregister(name=names_6)\nstate.where_is(name=names_12)\nstate.unregister(name=names_13)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"len": 48, "failures": 2}, "timing": {"execute:test": 0.006144623504951596, "generate:data": 4.375004209578037e-05, "generate:rule:where_is": 0.05640133284032345, "generate:rule:register": 0.0663256652187556, "generate:rule:unregister": 0.022589253494516015, "execute:rule:where_is": 0.00012516253627836704, "execute:rule:register": 0.00013224687427282333, "execute:rule:unregister": 9.970739483833313e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='vyjylc')\nnames_0 = state.register(name='', pid=-14686)\nnames_1 = state.register(name=names_0, pid=73)\nstate.where_is(name=None)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='yyoyfgdqwuogfal', pid=1484)\nnames_3 = state.register(name='cse', pid=-20438)\nstate.where_is(name='wipi')\nstate.where_is(name=None)\nnames_4 = state.register(name='zhzkxdihlaadzeouqwutfqkl', pid=-30812)\nstate.unregister(name=names_4)\nstate.where_is(name='jawocmpqnmpx')\nnames_5 = state.register(name='ka', pid=62)\nstate.where_is(name=None)\nstate.unregister(name=names_0)\nstate.unregister(name=names_3)\nstate.unregister(name=names_1)\nstate.where_is(name='gfacnb')\nstate.where_is(name='fmnvcybrbbj')\nnames_6 = state.register(name='ypzh', pid=-112)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.where_is(name='ps')\nstate.where_is(name='dtr')\nnames_7 = state.register(name='bs', pid=-6656)\nnames_8 = state.register(name='elijnpvyc', pid=26793)\nstate.unregister(name=names_7)\nstate.unregister(name=names_5)\nnames_9 = state.register(name='y', pid=122)\nstate.where_is(name=names_6)\nnames_10 = state.register(name='z', pid=17705)\nnames_11 = state.register(name=names_0, pid=-6842)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nstate.unregister(name=names_11)\nstate.where_is(name='pc')\nnames_12 = state.register(name='xyclv', pid=-66)\nnames_13 = state.register(name='eydsyakjpjv', pid=-122)\nstate.where_is(name=names_6)\nstate.where_is(name=names_12)\nnames_14 = state.register(name='ka', pid=62)\nnames_15 = state.register(name='ektblxdvvbh', pid=28539)\nstate.unregister(name=names_15)\nnames_16 = state.register(name='tt', pid=-95)\nnames_17 = state.register(name=names_0, pid=1444)\nstate.unregister(name=names_17)\nstate.unregister(name=names_8)\nstate.where_is(name=names_13)\nstate.unregister(name=names_14)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"len": 48, "failures": 2}, "timing": {"execute:test": 0.006103375693783164, "generate:data": 4.449998959898949e-05, "generate:rule:where_is": 0.05182825028896332, "generate:rule:register": 0.0674514970742166, "generate:rule:unregister": 0.02171312691643834, "execute:rule:where_is": 0.00011650123633444309, "execute:rule:register": 0.00013770908117294312, "execute:rule:unregister": 9.737350046634674e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='vyjylc')\nnames_0 = state.register(name='', pid=-14686)\nnames_1 = state.register(name=names_0, pid=73)\nstate.where_is(name=None)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='yyoyfgdqwuogfal', pid=1484)\nnames_3 = state.register(name='cse', pid=-20438)\nstate.where_is(name='wipi')\nstate.where_is(name=None)\nnames_4 = state.register(name='zhzkxdihlaadzeouqwutfqkl', pid=-30812)\nstate.unregister(name=names_4)\nstate.where_is(name='jawocmpqnmpx')\nnames_5 = state.register(name='ka', pid=62)\nstate.where_is(name=None)\nstate.unregister(name=names_0)\nstate.unregister(name=names_3)\nstate.unregister(name=names_1)\nstate.where_is(name='gfacnb')\nstate.where_is(name='fmnvcybrbbj')\nnames_6 = state.register(name='ypzh', pid=-112)\nstate.unregister(name=names_2)\nstate.where_is(name=names_5)\nstate.where_is(name='ps')\nstate.where_is(name='dtr')\nnames_7 = state.register(name='bs', pid=-6656)\nnames_8 = state.register(name='elijnpvyc', pid=26793)\nstate.unregister(name=names_7)\nstate.unregister(name=names_5)\nnames_9 = state.register(name='y', pid=122)\nstate.where_is(name=names_6)\nnames_10 = state.register(name='z', pid=17705)\nnames_11 = state.register(name=names_0, pid=-6842)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nstate.unregister(name=names_11)\nstate.where_is(name='pc')\nnames_12 = state.register(name='xyclv', pid=-66)\nnames_13 = state.register(name='eydsyakjpjv', pid=-122)\nstate.where_is(name=names_6)\nstate.where_is(name=names_12)\nnames_14 = state.register(name='ka', pid=62)\nnames_15 = state.register(name='ektblxdvvbh', pid=28539)\nstate.unregister(name=names_15)\nnames_16 = state.register(name='ttacc', pid=1)\nstate.unregister(name=names_12)\nstate.unregister(name=names_8)\nstate.unregister(name=names_16)\nstate.where_is(name=names_6)\nstate.unregister(name=names_13)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"len": 48, "failures": 2}, "timing": {"execute:test": 0.0059675839729607105, "generate:data": 4.3082982301712036e-05, "generate:rule:where_is": 0.05110641825012863, "generate:rule:register": 0.0651676224078983, "generate:rule:unregister": 0.022912375396117568, "execute:rule:where_is": 0.00011558085680007935, "execute:rule:register": 0.00013241847045719624, "execute:rule:unregister": 0.000104167265817523}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='uopeif', pid=27593)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='s', pid=96)\nstate.where_is(name='agvghfujmxoffy')\nnames_2 = state.register(name='', pid=12127)\nstate.unregister(name=names_1)\nstate.unregister(name=names_2)\nnames_3 = state.register(name='vpzpisminlz', pid=27414)\nnames_4 = state.register(name='xw', pid=-117)\nstate.where_is(name='ru')\nstate.where_is(name=names_3)\nstate.unregister(name=names_3)\nstate.unregister(name=names_4)\nstate.where_is(name='sqq')\nnames_5 = state.register(name='b', pid=-138529780)\nstate.unregister(name=names_5)\nnames_6 = state.register(name='lnpdicrdhwfjozncwpmgschcdhqnv', pid=31017)\nstate.where_is(name=names_6)\nstate.where_is(name=names_6)\nnames_7 = state.register(name='gskr', pid=-1317854053)\nstate.where_is(name='tssriwwlk')\nnames_8 = state.register(name='go', pid=-8967)\nstate.unregister(name=names_8)\nstate.where_is(name='etkirrhvax')\nstate.unregister(name=names_6)\nstate.unregister(name=names_7)\nstate.where_is(name='o')\nnames_9 = state.register(name=names_2, pid=-8076)\nstate.where_is(name=names_2)\nnames_10 = state.register(name='yohaazdzif', pid=32069)\nnames_11 = state.register(name='tgycwxhpmaopopftx', pid=11442)\nstate.unregister(name=names_11)\nstate.where_is(name=names_2)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nnames_12 = state.register(name='qytsz', pid=30733)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='dz', pid=32230)\nnames_14 = state.register(name='luoza', pid=112)\nstate.where_is(name=names_2)\nstate.where_is(name=names_13)\nnames_15 = state.register(name='th', pid=12050)\nstate.where_is(name=names_2)\nnames_16 = state.register(name=names_2, pid=-7004)\nstate.where_is(name=names_13)\nstate.unregister(name=names_14)\nnames_17 = state.register(name='eyputkt', pid=8898807408375282406)\nstate.where_is(name=names_2)\nstate.unregister(name=names_15)\nnames_18 = state.register(name='uf', pid=-644238050)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.006233624182641506, "generate:data": 4.295795224606991e-05, "generate:rule:register": 0.07710300129838288, "generate:rule:unregister": 0.02384170750156045, "generate:rule:where_is": 0.05042195902206004, "execute:rule:register": 0.0001427109818905592, "execute:rule:unregister": 0.00011629029177129269, "execute:rule:where_is": 0.00010575144551694393}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='uopeif', pid=27593)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='s', pid=96)\nstate.where_is(name='agvshfujmxoffy')\nnames_2 = state.register(name='', pid=12127)\nstate.unregister(name=names_1)\nstate.unregister(name=names_2)\nnames_3 = state.register(name='vpzpisminlz', pid=27414)\nnames_4 = state.register(name='xw', pid=-117)\nstate.where_is(name='ru')\nstate.where_is(name=names_3)\nstate.unregister(name=names_3)\nstate.unregister(name=names_4)\nstate.where_is(name='sqq')\nnames_5 = state.register(name='b', pid=-138529780)\nstate.unregister(name=names_5)\nnames_6 = state.register(name='lnpdicrdhwfjozncwpmgschcdhqnv', pid=31017)\nstate.where_is(name=names_6)\nstate.where_is(name=names_6)\nnames_7 = state.register(name='gskr', pid=-1317854053)\nstate.where_is(name='tssriwwlk')\nnames_8 = state.register(name='go', pid=-8967)\nstate.unregister(name=names_8)\nstate.where_is(name='etkirrhvax')\nstate.unregister(name=names_6)\nstate.unregister(name=names_7)\nstate.where_is(name='o')\nnames_9 = state.register(name=names_2, pid=-8076)\nstate.where_is(name=names_2)\nnames_10 = state.register(name='yohaazdzif', pid=32069)\nnames_11 = state.register(name='tgycwxhpmaopopftx', pid=11442)\nstate.unregister(name=names_11)\nstate.where_is(name=names_2)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nnames_12 = state.register(name='qytsz', pid=30733)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='dz', pid=32230)\nnames_14 = state.register(name='luoza', pid=112)\nstate.where_is(name=names_2)\nstate.where_is(name=names_13)\nnames_15 = state.register(name='th', pid=12050)\nstate.where_is(name=names_2)\nnames_16 = state.register(name=names_2, pid=-7004)\nstate.where_is(name=names_13)\nstate.unregister(name=names_14)\nnames_17 = state.register(name='eyputkt', pid=8898807408375282406)\nstate.where_is(name=names_2)\nstate.unregister(name=names_15)\nnames_18 = state.register(name='uf', pid=-644238050)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.006212084554135799, "generate:data": 4.52499371021986e-05, "generate:rule:register": 0.07660621032118797, "generate:rule:unregister": 0.023670498514547944, "generate:rule:where_is": 0.04998237360268831, "execute:rule:register": 0.00014195963740348816, "execute:rule:unregister": 0.00010554282926023006, "execute:rule:where_is": 0.00010429159738123417}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='uopeif', pid=27593)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='s', pid=96)\nstate.where_is(name='agvshfujmxoffy')\nnames_2 = state.register(name='', pid=12127)\nstate.unregister(name=names_1)\nstate.unregister(name=names_2)\nnames_3 = state.register(name='vpzpisminlz', pid=27414)\nnames_4 = state.register(name='xw', pid=-117)\nstate.where_is(name='ru')\nstate.where_is(name=names_3)\nstate.unregister(name=names_3)\nstate.unregister(name=names_4)\nstate.where_is(name='sqq')\nnames_5 = state.register(name='b', pid=-138529780)\nstate.unregister(name=names_5)\nnames_6 = state.register(name='lnpdicrdhwfjozncwpmgschcdhqnv', pid=31017)\nstate.where_is(name=names_6)\nstate.where_is(name=names_6)\nnames_7 = state.register(name='gskr', pid=-1317854053)\nstate.where_is(name='tssriwwlk')\nnames_8 = state.register(name='go', pid=-8967)\nstate.unregister(name=names_8)\nstate.where_is(name='etkirrhvax')\nstate.unregister(name=names_6)\nstate.unregister(name=names_7)\nstate.where_is(name='o')\nnames_9 = state.register(name=names_2, pid=-8076)\nstate.where_is(name=names_2)\nnames_10 = state.register(name='yohaazdzif', pid=32069)\nnames_11 = state.register(name='tgycwxhpmaopopftx', pid=11442)\nstate.unregister(name=names_11)\nstate.where_is(name=names_2)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nnames_12 = state.register(name='qytsz', pid=30733)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='dz', pid=32230)\nnames_14 = state.register(name='luoza', pid=112)\nstate.where_is(name=names_2)\nstate.where_is(name=names_13)\nnames_15 = state.register(name='th', pid=12050)\nstate.where_is(name=names_2)\nnames_16 = state.register(name=names_2, pid=-7004)\nstate.where_is(name=names_13)\nstate.unregister(name=names_14)\nnames_17 = state.register(name='eyputkt', pid=8898807408375282406)\nstate.where_is(name=names_2)\nstate.unregister(name=names_15)\nnames_18 = state.register(name='uf', pid=-644238050)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.006146047031506896, "generate:data": 4.354212433099747e-05, "generate:rule:register": 0.07429624674841762, "generate:rule:unregister": 0.022197915706783533, "generate:rule:where_is": 0.04773579048924148, "execute:rule:register": 0.00014154333621263504, "execute:rule:unregister": 0.00010149856097996235, "execute:rule:where_is": 0.00010462338104844093}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='uopeif', pid=27593)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='s', pid=96)\nstate.where_is(name='agvshfujmxoffy')\nnames_2 = state.register(name='', pid=12127)\nstate.unregister(name=names_1)\nstate.unregister(name=names_2)\nnames_3 = state.register(name='vpzpisminlz', pid=27414)\nnames_4 = state.register(name='xw', pid=-117)\nstate.where_is(name='ru')\nstate.where_is(name=names_3)\nstate.unregister(name=names_3)\nstate.unregister(name=names_4)\nstate.where_is(name='sqq')\nnames_5 = state.register(name='b', pid=-138529780)\nstate.unregister(name=names_5)\nnames_6 = state.register(name='lnpdicrdhwfjozncwpmgschcdhqnv', pid=31017)\nstate.where_is(name=names_6)\nstate.where_is(name=names_6)\nnames_7 = state.register(name='gskr', pid=-1317854053)\nstate.where_is(name='tssriwwlk')\nnames_8 = state.register(name='go', pid=-8967)\nstate.unregister(name=names_8)\nstate.where_is(name='etkirrhvax')\nstate.unregister(name=names_6)\nstate.unregister(name=names_7)\nstate.where_is(name='o')\nnames_9 = state.register(name=names_2, pid=-8076)\nstate.where_is(name=names_2)\nnames_10 = state.register(name='yohaazdzif', pid=32069)\nnames_11 = state.register(name='tgycwxhpmaopopftx', pid=11442)\nstate.unregister(name=names_11)\nstate.where_is(name=names_2)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nnames_12 = state.register(name='qytsz', pid=30733)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='dz', pid=32230)\nnames_14 = state.register(name='luoza', pid=112)\nstate.where_is(name=names_2)\nstate.where_is(name=names_13)\nnames_15 = state.register(name='th', pid=12050)\nstate.where_is(name=names_2)\nnames_16 = state.register(name=names_2, pid=-7004)\nstate.where_is(name=names_13)\nstate.unregister(name=names_14)\nnames_17 = state.register(name='eyputkt', pid=8898807408375282406)\nstate.where_is(name=names_2)\nstate.unregister(name=names_15)\nnames_18 = state.register(name=names_2, pid=-644238050)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 49, "failures": 1}, "timing": {"execute:test": 0.006078538717702031, "generate:data": 4.3665990233421326e-05, "generate:rule:register": 0.07353062415495515, "generate:rule:unregister": 0.02199250180274248, "generate:rule:where_is": 0.04729404323734343, "execute:rule:register": 0.00014183158054947853, "execute:rule:unregister": 0.00010096048936247826, "execute:rule:where_is": 0.00010237493552267551}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='uopeif', pid=27593)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='s', pid=96)\nstate.where_is(name='agvshfujmxoffy')\nnames_2 = state.register(name='', pid=12127)\nstate.unregister(name=names_1)\nstate.unregister(name=names_2)\nnames_3 = state.register(name='vpzpisminlz', pid=27414)\nnames_4 = state.register(name='xw', pid=-117)\nstate.where_is(name='ru')\nstate.where_is(name=names_3)\nstate.unregister(name=names_3)\nstate.unregister(name=names_4)\nstate.where_is(name='sqq')\nnames_5 = state.register(name='b', pid=-138529780)\nstate.unregister(name=names_5)\nnames_6 = state.register(name='lnpdicrdhwfjozncwpmgschcdhqnv', pid=31017)\nstate.where_is(name=names_6)\nstate.where_is(name=names_6)\nnames_7 = state.register(name='gskr', pid=-1317854053)\nstate.where_is(name='tssriwwlk')\nnames_8 = state.register(name='go', pid=-8967)\nstate.unregister(name=names_8)\nstate.where_is(name='etkirrhvax')\nstate.unregister(name=names_6)\nstate.unregister(name=names_7)\nstate.where_is(name='o')\nnames_9 = state.register(name=names_2, pid=-8076)\nstate.where_is(name=names_2)\nnames_10 = state.register(name='sqq', pid=32069)\nnames_11 = state.register(name='tgycwxhpmaopopftx', pid=11442)\nstate.unregister(name=names_11)\nstate.where_is(name=names_2)\nstate.unregister(name=names_10)\nstate.unregister(name=names_9)\nnames_12 = state.register(name='qytsz', pid=30733)\nstate.unregister(name=names_12)\nnames_13 = state.register(name='dz', pid=32230)\nnames_14 = state.register(name='luoza', pid=112)\nstate.where_is(name=names_2)\nstate.where_is(name=names_13)\nnames_15 = state.register(name='th', pid=12050)\nstate.where_is(name=names_2)\nnames_16 = state.register(name=names_2, pid=-7004)\nstate.where_is(name=names_13)\nstate.unregister(name=names_14)\nnames_17 = state.register(name='eyputkt', pid=8898807408375282406)\nstate.where_is(name=names_2)\nstate.unregister(name=names_15)\nnames_18 = state.register(name=names_2, pid=-644238050)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 49, "failures": 1}, "timing": {"execute:test": 0.006586626172065735, "generate:data": 5.024997517466545e-05, "generate:rule:register": 0.0760059580206871, "generate:rule:unregister": 0.02336929109878838, "generate:rule:where_is": 0.05028762458823621, "execute:rule:register": 0.0001601637341082096, "execute:rule:unregister": 0.00011208164505660534, "execute:rule:where_is": 0.00011091888882219791}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='uopeif', pid=27593)\nstate.unregister(name=names_0)\nnames_1 = state.register(name='s', pid=96)\nstate.where_is(name='agvshfujmxoffy')\nnames_2 = state.register(name='', pid=12127)\nstate.unregister(name=names_1)\nstate.unregister(name=names_2)\nnames_3 = state.register(name='vpzpisminlz', pid=27414)\nnames_4 = state.register(name='xw', pid=-117)\nstate.where_is(name='ru')\nstate.where_is(name=names_3)\nstate.unregister(name=names_3)\nstate.unregister(name=names_4)\nstate.where_is(name='sqq')\nnames_5 = state.register(name='b', pid=-138529780)\nstate.unregister(name=names_5)\nnames_6 = state.register(name='lnpdicrdhwfjozncwpmgschcdhqnv', pid=31017)\nstate.where_is(name=names_6)\nstate.where_is(name=names_6)\nnames_7 = state.register(name='gskr', pid=-1317854053)\nstate.where_is(name='tssriwwlhasago')\nnames_8 = state.register(name='e', pid=-65)\nstate.unregister(name=names_7)\nstate.where_is(name=names_8)\nstate.where_is(name=names_6)\nstate.unregister(name=names_8)\nnames_9 = state.register(name=names_2, pid=16544)\nstate.unregister(name=names_6)\nstate.unregister(name=names_9)\nnames_10 = state.register(name=names_2, pid=256)\nnames_11 = state.register(name='dzzaa', pid=137)\nnames_12 = state.register(name=names_2, pid=32069)\nnames_13 = state.register(name='tgycwxhpmaopopftx', pid=11442)\nstate.unregister(name=names_13)\nstate.where_is(name=names_11)\nstate.unregister(name=names_12)\nstate.unregister(name=names_11)\nnames_14 = state.register(name='qytsz', pid=30733)\nstate.unregister(name=names_14)\nnames_15 = state.register(name='dz', pid=32230)\nnames_16 = state.register(name='luoza', pid=112)\nstate.where_is(name=names_2)\nstate.where_is(name=names_15)\nnames_17 = state.register(name='th', pid=12050)\nstate.where_is(name=names_2)\nnames_18 = state.register(name=names_2, pid=-7004)\nstate.where_is(name=names_15)\nstate.unregister(name=names_16)\nnames_19 = state.register(name='eyputkt', pid=8898807408375282406)\nstate.where_is(name=None)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.006208831910043955, "generate:data": 4.720897413790226e-05, "generate:rule:register": 0.07478729356080294, "generate:rule:unregister": 0.02281533251516521, "generate:rule:where_is": 0.04353812616318464, "execute:rule:register": 0.00015266588889062405, "execute:rule:unregister": 0.00010558194480836391, "execute:rule:where_is": 9.74580179899931e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='uopeif', pid=27593)\nnames_1 = state.register(name='', pid=-7004)\nnames_2 = state.register(name='s', pid=96)\nstate.where_is(name='agvshfujmxoffy')\nnames_3 = state.register(name=names_1, pid=12127)\nstate.unregister(name=names_2)\nstate.unregister(name=names_3)\nstate.unregister(name=names_0)\nstate.unregister(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='aamvaxw')\nnames_4 = state.register(name='b', pid=-8)\nstate.unregister(name=names_4)\nstate.where_is(name='d')\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 12, "failures": 2}, "timing": {"execute:test": 0.0018917897250503302, "generate:data": 4.7541921958327293e-05, "generate:rule:register": 0.014208750100806355, "generate:rule:where_is": 0.019621708896011114, "generate:rule:unregister": 0.007774376310408115, "execute:rule:register": 3.891671076416969e-05, "execute:rule:where_is": 2.670893445611e-05, "execute:rule:unregister": 3.658304922282696e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 20, 21, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=31773)\nstate.where_is(name=names_0)\nstate.where_is(name=names_0)\nnames_1 = state.register(name='azgl', pid=25)\nnames_2 = state.register(name='xuittqa', pid=25476)\nstate.where_is(name=names_0)\nnames_3 = state.register(name='citfkkctkbm', pid=-12)\nstate.where_is(name=names_0)\nstate.where_is(name='opmujebypxapy')\nnames_4 = state.register(name='ouxh', pid=29)\nnames_5 = state.register(name='lv', pid=9478)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nstate.where_is(name='ocvwwtl')\nstate.where_is(name=names_0)\nnames_6 = state.register(name='akpmmdnrzf', pid=-19132)\nnames_7 = state.register(name='rpmujmshyqaphk', pid=23650)\nstate.where_is(name=names_5)\nstate.where_is(name=names_3)\nnames_8 = state.register(name='uzidtepg', pid=-23593)\nstate.where_is(name=names_3)\nstate.where_is(name=names_4)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nnames_9 = state.register(name='ofj', pid=66)\nstate.where_is(name=names_0)\nstate.where_is(name='kgujwqdriclxnlt')\nnames_10 = state.register(name='kouc', pid=88)\nnames_11 = state.register(name='oex', pid=-8928)\nnames_12 = state.register(name='i', pid=-19011)\nnames_13 = state.register(name='f', pid=-76)\nnames_14 = state.register(name='nhltkbvhns', pid=1268355660)\nstate.where_is(name='d')\nstate.where_is(name='g')\nnames_15 = state.register(name='v', pid=6868534238388277390)\nnames_16 = state.register(name='xucwylnan', pid=-7878180004107389995)\nstate.where_is(name=names_6)\nstate.where_is(name=names_1)\nstate.where_is(name='bqanl')\nstate.where_is(name='wsmkzmlw')\nstate.where_is(name=names_5)\nnames_17 = state.register(name='dz', pid=45)\nnames_18 = state.register(name=names_0, pid=-1771)\nnames_19 = state.register(name='x', pid=18247)\nstate.where_is(name=names_0)\nstate.where_is(name=names_14)\nnames_20 = state.register(name=names_0, pid=-21883)\nnames_21 = state.register(name='pkzbm', pid=5806)\nstate.where_is(name=names_11)\nnames_22 = state.register(name=names_0, pid=124)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.007093376712873578, "generate:data": 4.2958883568644524e-05, "generate:rule:register": 0.08809303911402822, "generate:rule:where_is": 0.0808253341820091, "execute:rule:register": 0.00017974968068301678, "execute:rule:where_is": 0.00017562252469360828}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=31773)\nstate.where_is(name=names_0)\nstate.where_is(name=names_0)\nnames_1 = state.register(name='azgl', pid=25)\nnames_2 = state.register(name='xuittqa', pid=25476)\nstate.where_is(name=names_0)\nnames_3 = state.register(name='citfkkctkbm', pid=-12)\nstate.where_is(name=names_0)\nstate.where_is(name='opmujebypxapy')\nnames_4 = state.register(name='ouxh', pid=29)\nnames_5 = state.register(name='lv', pid=9478)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nstate.where_is(name='bqanl')\nstate.where_is(name=names_0)\nnames_6 = state.register(name='akpmmdnrzf', pid=-19132)\nnames_7 = state.register(name='rpmujmshyqaphk', pid=23650)\nstate.where_is(name=names_5)\nstate.where_is(name=names_3)\nnames_8 = state.register(name='uzidtepg', pid=-23593)\nstate.where_is(name=names_3)\nstate.where_is(name=names_4)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nnames_9 = state.register(name='ofj', pid=66)\nstate.where_is(name=names_0)\nstate.where_is(name='kgujwqdriclxnlt')\nnames_10 = state.register(name='kouc', pid=88)\nnames_11 = state.register(name='oex', pid=-8928)\nnames_12 = state.register(name='i', pid=-19011)\nnames_13 = state.register(name='f', pid=-76)\nnames_14 = state.register(name='nhltkbvhns', pid=1268355660)\nstate.where_is(name='d')\nstate.where_is(name='g')\nnames_15 = state.register(name='v', pid=6868534238388277390)\nnames_16 = state.register(name='xucwylnan', pid=-7878180004107389995)\nstate.where_is(name=names_6)\nstate.where_is(name=names_1)\nstate.where_is(name='bqanl')\nstate.where_is(name='wsmkzmlw')\nstate.where_is(name=names_5)\nnames_17 = state.register(name='dz', pid=45)\nnames_18 = state.register(name=names_0, pid=-1771)\nnames_19 = state.register(name='x', pid=18247)\nstate.where_is(name=names_0)\nstate.where_is(name=names_14)\nnames_20 = state.register(name=names_0, pid=-21883)\nnames_21 = state.register(name='pkzbm', pid=5806)\nstate.where_is(name=names_11)\nnames_22 = state.register(name=names_0, pid=124)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.0069456254132092, "generate:data": 4.470790736377239e-05, "generate:rule:register": 0.08627779176458716, "generate:rule:where_is": 0.07763537485152483, "execute:rule:register": 0.0001756709534674883, "execute:rule:where_is": 0.00017149746417999268}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=31773)\nstate.where_is(name=names_0)\nstate.where_is(name=names_0)\nnames_1 = state.register(name='azgl', pid=25)\nnames_2 = state.register(name='xuittqa', pid=25476)\nstate.where_is(name=names_0)\nnames_3 = state.register(name='citfkkctkbm', pid=-12)\nstate.where_is(name=names_0)\nstate.where_is(name='opmujebypxapy')\nnames_4 = state.register(name='ouxh', pid=29)\nnames_5 = state.register(name='lv', pid=9478)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nstate.where_is(name='bqanl')\nstate.where_is(name=names_0)\nnames_6 = state.register(name='akpmmdnrzf', pid=-19132)\nnames_7 = state.register(name='rpmujmshyqaphk', pid=23650)\nstate.where_is(name=names_5)\nstate.where_is(name=names_3)\nnames_8 = state.register(name='uzidtepg', pid=-23593)\nstate.where_is(name=names_3)\nstate.where_is(name=names_4)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nnames_9 = state.register(name='ofj', pid=66)\nstate.where_is(name=names_0)\nstate.where_is(name='kgujwqdriclxnlt')\nnames_10 = state.register(name='kouc', pid=88)\nnames_11 = state.register(name='oex', pid=-8928)\nnames_12 = state.register(name='i', pid=-19011)\nnames_13 = state.register(name='f', pid=-76)\nnames_14 = state.register(name='nhltkbvhns', pid=1268355660)\nstate.where_is(name='d')\nstate.where_is(name='g')\nnames_15 = state.register(name='v', pid=6868534238388277390)\nnames_16 = state.register(name='xucwylnan', pid=-7878180004107389995)\nstate.where_is(name=names_6)\nstate.where_is(name=names_1)\nstate.where_is(name='bqanl')\nstate.where_is(name='wsmkzmlw')\nstate.where_is(name=names_5)\nnames_17 = state.register(name='dz', pid=45)\nnames_18 = state.register(name=names_0, pid=-1771)\nnames_19 = state.register(name='x', pid=18247)\nstate.where_is(name=names_0)\nstate.where_is(name=names_14)\nnames_20 = state.register(name=names_0, pid=-21883)\nnames_21 = state.register(name='pkzbm', pid=5806)\nstate.where_is(name=names_11)\nnames_22 = state.register(name=names_0, pid=124)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.00694924546405673, "generate:data": 4.324992187321186e-05, "generate:rule:register": 0.08462262828834355, "generate:rule:where_is": 0.07507375115528703, "execute:rule:register": 0.00017646001651883125, "execute:rule:where_is": 0.00017104600556194782}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=31773)\nstate.where_is(name=names_0)\nstate.where_is(name=names_0)\nnames_1 = state.register(name='azgl', pid=25)\nnames_2 = state.register(name='xuittqa', pid=88)\nstate.where_is(name=names_0)\nnames_3 = state.register(name='citfkkctkbm', pid=-12)\nstate.where_is(name=names_0)\nstate.where_is(name='opmujebypxapy')\nnames_4 = state.register(name='ouxh', pid=29)\nnames_5 = state.register(name='lv', pid=9478)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nstate.where_is(name='bqanl')\nstate.where_is(name=names_0)\nnames_6 = state.register(name='akpmmdnrzf', pid=-19132)\nnames_7 = state.register(name='rpmujmshyqaphk', pid=23650)\nstate.where_is(name=names_5)\nstate.where_is(name=names_3)\nnames_8 = state.register(name='uzidtepg', pid=-23593)\nstate.where_is(name=names_3)\nstate.where_is(name=names_4)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nnames_9 = state.register(name='ofj', pid=66)\nstate.where_is(name=names_0)\nstate.where_is(name='kgujwqdriclxnlt')\nnames_10 = state.register(name='kouc', pid=88)\nnames_11 = state.register(name='oex', pid=-8928)\nnames_12 = state.register(name='i', pid=-19011)\nnames_13 = state.register(name='f', pid=-76)\nnames_14 = state.register(name='nhltkbvhns', pid=1268355660)\nstate.where_is(name='d')\nstate.where_is(name='g')\nnames_15 = state.register(name='v', pid=6868534238388277390)\nnames_16 = state.register(name='xucwylnan', pid=-7878180004107389995)\nstate.where_is(name=names_6)\nstate.where_is(name=names_1)\nstate.where_is(name='bqanl')\nstate.where_is(name='wsmkzmlw')\nstate.where_is(name=names_5)\nnames_17 = state.register(name='dz', pid=45)\nnames_18 = state.register(name=names_0, pid=-1771)\nnames_19 = state.register(name='x', pid=18247)\nstate.where_is(name=names_0)\nstate.where_is(name=names_14)\nnames_20 = state.register(name=names_0, pid=-21883)\nnames_21 = state.register(name='pkzbm', pid=5806)\nstate.where_is(name=names_11)\nnames_22 = state.register(name=names_0, pid=124)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.0069940462708473206, "generate:data": 4.416704177856445e-05, "generate:rule:register": 0.0875589984934777, "generate:rule:where_is": 0.07808195520192385, "execute:rule:register": 0.0001772486139088869, "execute:rule:where_is": 0.00017087929882109165}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=31773)\nstate.where_is(name=names_0)\nstate.where_is(name=names_0)\nnames_1 = state.register(name='azgl', pid=25)\nnames_2 = state.register(name='xuittqa', pid=88)\nstate.where_is(name=names_0)\nnames_3 = state.register(name='citfkkctkbm', pid=-12)\nstate.where_is(name=names_0)\nstate.where_is(name='opmujebypxapy')\nnames_4 = state.register(name='ouxh', pid=29)\nnames_5 = state.register(name='lv', pid=9478)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nstate.where_is(name='bqanl')\nstate.where_is(name=names_0)\nnames_6 = state.register(name='akpmmdnrzf', pid=-19132)\nnames_7 = state.register(name='rpmujmshyqaphk', pid=23650)\nstate.where_is(name=names_5)\nstate.where_is(name=names_3)\nnames_8 = state.register(name='uzidtepg', pid=-23593)\nstate.where_is(name=names_3)\nstate.where_is(name=names_4)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nnames_9 = state.register(name='ofj', pid=66)\nstate.where_is(name=names_0)\nstate.where_is(name='kgujwqdriclxnlt')\nnames_10 = state.register(name='kouc', pid=88)\nnames_11 = state.register(name='oex', pid=-8928)\nnames_12 = state.register(name='i', pid=-19011)\nnames_13 = state.register(name='f', pid=-76)\nnames_14 = state.register(name='nhltkbvhns', pid=1268355660)\nstate.where_is(name='d')\nstate.where_is(name='g')\nnames_15 = state.register(name='v', pid=6868534238388277390)\nnames_16 = state.register(name='xucwylnan', pid=-7878180004107389995)\nstate.where_is(name=names_6)\nstate.where_is(name=names_1)\nstate.where_is(name='bqanl')\nstate.where_is(name='wsmkzmlw')\nstate.where_is(name=names_5)\nnames_17 = state.register(name='dz', pid=45)\nnames_18 = state.register(name=names_0, pid=-1771)\nnames_19 = state.register(name='x', pid=18247)\nstate.where_is(name=names_0)\nstate.where_is(name=names_14)\nnames_20 = state.register(name=names_0, pid=-21883)\nnames_21 = state.register(name='pkzbm', pid=5806)\nstate.where_is(name=names_11)\nnames_22 = state.register(name=names_0, pid=124)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.006962998770177364, "generate:data": 4.520779475569725e-05, "generate:rule:register": 0.0849399184808135, "generate:rule:where_is": 0.0753201236948371, "execute:rule:register": 0.00017550052143633366, "execute:rule:where_is": 0.00017266767099499702}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=31773)\nstate.where_is(name=names_0)\nstate.where_is(name=names_0)\nnames_1 = state.register(name='azgl', pid=25)\nnames_2 = state.register(name='xuittqa', pid=88)\nstate.where_is(name=names_0)\nnames_3 = state.register(name='citfkkctkbm', pid=-12)\nstate.where_is(name=names_0)\nstate.where_is(name='opmujebypxapy')\nnames_4 = state.register(name='ouxh', pid=29)\nnames_5 = state.register(name='lv', pid=9478)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nstate.where_is(name='bqanl')\nstate.where_is(name=names_0)\nnames_6 = state.register(name='akpmmdnrzf', pid=-19132)\nnames_7 = state.register(name='rpmujmshyqaphk', pid=23650)\nstate.where_is(name=names_5)\nstate.where_is(name=names_3)\nnames_8 = state.register(name='uzidtepg', pid=-23593)\nstate.where_is(name=names_3)\nstate.where_is(name=names_4)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nnames_9 = state.register(name='ofj', pid=66)\nstate.where_is(name=names_0)\nstate.where_is(name='kgujwqdriclxnlt')\nnames_10 = state.register(name='kouc', pid=88)\nnames_11 = state.register(name='oex', pid=-8928)\nnames_12 = state.register(name='i', pid=-19011)\nnames_13 = state.register(name='f', pid=-76)\nnames_14 = state.register(name='nhltkbvhns', pid=1268355660)\nstate.where_is(name='d')\nstate.where_is(name='opmujebypxapy')\nnames_15 = state.register(name='v', pid=6868534238388277390)\nnames_16 = state.register(name='xucwylnan', pid=-7878180004107389995)\nstate.where_is(name=names_6)\nstate.where_is(name=names_1)\nstate.where_is(name='bqanl')\nstate.where_is(name='wsmkzmlw')\nstate.where_is(name=names_5)\nnames_17 = state.register(name='dz', pid=45)\nnames_18 = state.register(name=names_0, pid=-1771)\nnames_19 = state.register(name='x', pid=18247)\nstate.where_is(name=names_0)\nstate.where_is(name=names_14)\nnames_20 = state.register(name=names_0, pid=-21883)\nnames_21 = state.register(name='pkzbm', pid=5806)\nstate.where_is(name=names_11)\nnames_22 = state.register(name=names_0, pid=124)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.00705116824246943, "generate:data": 4.295795224606991e-05, "generate:rule:register": 0.08642033487558365, "generate:rule:where_is": 0.08010783093050122, "execute:rule:register": 0.0001783333718776703, "execute:rule:where_is": 0.0001731684897094965}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='', pid=31773)\nstate.where_is(name=names_0)\nstate.where_is(name=names_0)\nnames_1 = state.register(name='azgl', pid=25)\nnames_2 = state.register(name='xuittqa', pid=88)\nstate.where_is(name=names_0)\nnames_3 = state.register(name='citfkkctkbm', pid=-12)\nstate.where_is(name=names_0)\nstate.where_is(name='opmujebypxapy')\nnames_4 = state.register(name='ouxh', pid=29)\nnames_5 = state.register(name='lv', pid=9478)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nstate.where_is(name='bqanl')\nstate.where_is(name=names_0)\nnames_6 = state.register(name='akpmmdnrzf', pid=-19132)\nnames_7 = state.register(name='rpmujmshyqaphk', pid=23650)\nstate.where_is(name=names_5)\nstate.where_is(name=names_3)\nnames_8 = state.register(name='uzidtepg', pid=-23593)\nstate.where_is(name=names_3)\nstate.where_is(name=names_4)\nstate.where_is(name=names_3)\nstate.where_is(name=names_2)\nnames_9 = state.register(name='ofj', pid=66)\nstate.where_is(name=names_0)\nstate.where_is(name='kgujwqdriclxnlt')\nnames_10 = state.register(name='kouc', pid=88)\nnames_11 = state.register(name='oex', pid=-8928)\nnames_12 = state.register(name='i', pid=-19011)\nnames_13 = state.register(name='ffatd', pid=0)\nnames_14 = state.register(name='ltkbvhns', pid=1268355660)\nstate.where_is(name='d')\nstate.where_is(name='opmujebypxapy')\nnames_15 = state.register(name='v', pid=6868534238388277390)\nnames_16 = state.register(name='xucwylnan', pid=-7878180004107389995)\nstate.where_is(name=names_6)\nstate.where_is(name=names_1)\nstate.where_is(name='bqanl')\nstate.where_is(name='wsmkzmlw')\nstate.where_is(name=names_5)\nnames_17 = state.register(name='dz', pid=45)\nnames_18 = state.register(name=names_0, pid=-1771)\nnames_19 = state.register(name='x', pid=18247)\nstate.where_is(name=names_0)\nstate.where_is(name=names_14)\nnames_20 = state.register(name=names_0, pid=-21883)\nnames_21 = state.register(name='pkzbm', pid=5806)\nstate.where_is(name=names_11)\nnames_22 = state.register(name=names_0, pid=124)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 47, "failures": 3}, "timing": {"execute:test": 0.007059787400066853, "generate:data": 4.474981687963009e-05, "generate:rule:register": 0.08697375212796032, "generate:rule:where_is": 0.08080733544193208, "execute:rule:register": 0.00017916876822710037, "execute:rule:where_is": 0.00017338269390165806}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='bexskrityu', pid=32201)\nnames_1 = state.register(name='ja', pid=-6709)\nnames_2 = state.register(name='', pid=-48)\nnames_3 = state.register(name=names_2, pid=78)\nnames_4 = state.register(name='lvtmaezfekgvmr', pid=-26327)\nnames_5 = state.register(name='eozr', pid=-9459)\nnames_6 = state.register(name=names_2, pid=-41)\nnames_7 = state.register(name='rdwa', pid=30338)\nnames_8 = state.register(name='a', pid=-57)\nnames_9 = state.register(name='ajwjydtpkt', pid=318851428)\nnames_10 = state.register(name='pgn', pid=17281)\nnames_11 = state.register(name=names_2, pid=-80)\nnames_12 = state.register(name=names_2, pid=13362)\nnames_13 = state.register(name='du', pid=30726)\nnames_14 = state.register(name='pnf', pid=94)\nnames_15 = state.register(name='ehlw', pid=39)\nnames_16 = state.register(name='kbi', pid=-23137)\nnames_17 = state.register(name='dmdtnbgl', pid=1345)\nnames_18 = state.register(name='i', pid=-61)\nnames_19 = state.register(name='kmkyosmdk', pid=-296149156290440731)\nnames_20 = state.register(name=names_2, pid=11470)\nnames_21 = state.register(name=names_2, pid=-10673)\nnames_22 = state.register(name='wla', pid=-4540213656431052165)\nnames_23 = state.register(name='vdmaubxecxj', pid=22)\nnames_24 = state.register(name='jlryrmavvy', pid=-27278)\nnames_25 = state.register(name='hklyg', pid=-64)\nnames_26 = state.register(name='zrzoptiqdnavpyi', pid=-32636)\nnames_27 = state.register(name='fwllg', pid=-5801)\nnames_28 = state.register(name='uuy', pid=99)\nnames_29 = state.register(name='e', pid=-83)\nnames_30 = state.register(name='u', pid=-4940437841434191557)\nnames_31 = state.register(name='wkak', pid=9090)\nnames_32 = state.register(name='rdmqmobpthveuqn', pid=-96)\nnames_33 = state.register(name='labaj', pid=-47)\nnames_34 = state.register(name='kbp', pid=2077876814)\nnames_35 = state.register(name='vzvkra', pid=12419)\nnames_36 = state.register(name='uooqgubhxhqyt', pid=31216)\nnames_37 = state.register(name=names_2, pid=24)\nnames_38 = state.register(name='nr', pid=-25283)\nnames_39 = state.register(name='zx', pid=29116)\nnames_40 = state.register(name='jpd', pid=31543)\nnames_41 = state.register(name='nkattfrow', pid=-30)\nnames_42 = state.register(name=names_2, pid=-30460)\nnames_43 = state.register(name='vllikiwr', pid=-79)\nnames_44 = state.register(name='utyqlunueqxn', pid=71)\nnames_45 = state.register(name='unwkspbinnilj', pid=125)\nnames_46 = state.register(name='pcvdhtqqjpfsbj', pid=4790)\nnames_47 = state.register(name='wtuxtewgc', pid=-44)\nnames_48 = state.register(name='lley', pid=-31201)\nnames_49 = state.register(name='sdrnzxfob', pid=-15963)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 42, "failures": 8}, "timing": {"execute:test": 0.008841121569275856, "generate:data": 4.4082989916205406e-05, "generate:rule:register": 0.2237217533402145, "execute:rule:register": 0.0003872488159686327}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='bexskrityu', pid=32201)\nnames_1 = state.register(name='ja', pid=-6709)\nnames_2 = state.register(name='', pid=-48)\nnames_3 = state.register(name=names_2, pid=78)\nnames_4 = state.register(name='lvtmaezfekgvmr', pid=-26327)\nnames_5 = state.register(name='eozr', pid=-9459)\nnames_6 = state.register(name=names_2, pid=-41)\nnames_7 = state.register(name='rdwa', pid=30338)\nnames_8 = state.register(name='a', pid=-57)\nnames_9 = state.register(name='ajwjydtpkt', pid=318851428)\nnames_10 = state.register(name='pgn', pid=17281)\nnames_11 = state.register(name=names_2, pid=-80)\nnames_12 = state.register(name=names_2, pid=13362)\nnames_13 = state.register(name='du', pid=30726)\nnames_14 = state.register(name='pnf', pid=94)\nnames_15 = state.register(name='ehlw', pid=39)\nnames_16 = state.register(name='kbi', pid=-23137)\nnames_17 = state.register(name='dmdtnbgl', pid=1345)\nnames_18 = state.register(name='i', pid=-61)\nnames_19 = state.register(name='kmkyosmdk', pid=-296149156290440731)\nnames_20 = state.register(name=names_2, pid=11470)\nnames_21 = state.register(name=names_2, pid=-10673)\nnames_22 = state.register(name='wla', pid=-4540213656431052165)\nnames_23 = state.register(name='vdmaubxecxj', pid=22)\nnames_24 = state.register(name='jlryrmavvy', pid=-27278)\nnames_25 = state.register(name='hklyg', pid=-64)\nnames_26 = state.register(name='zrzoptiqdnavpyi', pid=-32636)\nnames_27 = state.register(name='fwllg', pid=-5801)\nnames_28 = state.register(name='uuy', pid=99)\nnames_29 = state.register(name='e', pid=-83)\nnames_30 = state.register(name='u', pid=-4940437841434191557)\nnames_31 = state.register(name='wkak', pid=9090)\nnames_32 = state.register(name='rdmqmobpthveuqn', pid=-96)\nnames_33 = state.register(name='labaj', pid=-47)\nnames_34 = state.register(name='kbp', pid=2077876814)\nnames_35 = state.register(name='vzvkra', pid=12419)\nnames_36 = state.register(name='uooqgubhxhqyt', pid=31216)\nnames_37 = state.register(name=names_2, pid=24)\nnames_38 = state.register(name='nr', pid=-25283)\nnames_39 = state.register(name='zx', pid=29116)\nnames_40 = state.register(name='jpd', pid=31543)\nnames_41 = state.register(name='nkattfrow', pid=-30)\nnames_42 = state.register(name=names_2, pid=-30460)\nnames_43 = state.register(name='vllikiwr', pid=-79)\nnames_44 = state.register(name='utyqlunueqxn', pid=71)\nnames_45 = state.register(name='unwkspbinnilj', pid=125)\nnames_46 = state.register(name='b', pid=-1)\nnames_47 = state.register(name='gftqqjpfsbj', pid=4790)\nnames_48 = state.register(name='wtuxtewgc', pid=-44)\nnames_49 = state.register(name='lley', pid=-31201)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 42, "failures": 8}, "timing": {"execute:test": 0.008804582059383392, "generate:data": 4.574982449412346e-05, "generate:rule:register": 0.21021079295314848, "execute:rule:register": 0.0003860839642584324}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='bexskrityu', pid=32201)\nnames_1 = state.register(name='ja', pid=-6709)\nnames_2 = state.register(name='', pid=-48)\nnames_3 = state.register(name=names_2, pid=78)\nnames_4 = state.register(name='lvtmaezfekgvmr', pid=-26327)\nnames_5 = state.register(name='eozr', pid=-9459)\nnames_6 = state.register(name=names_2, pid=-41)\nnames_7 = state.register(name='rdwa', pid=30338)\nnames_8 = state.register(name='a', pid=-57)\nnames_9 = state.register(name='ajwjydtpkt', pid=318851428)\nnames_10 = state.register(name='pgn', pid=17281)\nnames_11 = state.register(name=names_2, pid=-80)\nnames_12 = state.register(name=names_2, pid=13362)\nnames_13 = state.register(name='du', pid=30726)\nnames_14 = state.register(name='pnf', pid=94)\nnames_15 = state.register(name='ehlw', pid=39)\nnames_16 = state.register(name='kbi', pid=-23137)\nnames_17 = state.register(name='dmdtnbgl', pid=1345)\nnames_18 = state.register(name='i', pid=-61)\nnames_19 = state.register(name='kmkyosmdk', pid=-296149156290440731)\nnames_20 = state.register(name=names_2, pid=11470)\nnames_21 = state.register(name=names_2, pid=-10673)\nnames_22 = state.register(name='wla', pid=-4540213656431052165)\nnames_23 = state.register(name='vdmaubxecxj', pid=22)\nnames_24 = state.register(name='jlryrmavvy', pid=-27278)\nnames_25 = state.register(name='hklyg', pid=-64)\nnames_26 = state.register(name='zrzoptiqdnavpyi', pid=-32636)\nnames_27 = state.register(name='fwllg', pid=-5801)\nnames_28 = state.register(name='uuy', pid=99)\nnames_29 = state.register(name='e', pid=-83)\nnames_30 = state.register(name='u', pid=-4940437841434191557)\nnames_31 = state.register(name='wkak', pid=9090)\nnames_32 = state.register(name='rdmqmobpthveuqn', pid=-96)\nnames_33 = state.register(name='labaj', pid=-47)\nnames_34 = state.register(name='kbp', pid=2077876814)\nnames_35 = state.register(name='vzvkra', pid=12419)\nnames_36 = state.register(name='uooqgubhxhqyt', pid=31216)\nnames_37 = state.register(name=names_2, pid=24)\nnames_38 = state.register(name='nr', pid=-25283)\nnames_39 = state.register(name='zx', pid=29116)\nnames_40 = state.register(name='jpd', pid=31543)\nnames_41 = state.register(name='nkattfrow', pid=-30)\nnames_42 = state.register(name=names_2, pid=-30460)\nnames_43 = state.register(name='vllikiwr', pid=-79)\nnames_44 = state.register(name='utyqlunueqxn', pid=71)\nnames_45 = state.register(name='unwkspbinnilj', pid=125)\nnames_46 = state.register(name='b', pid=-1)\nnames_47 = state.register(name='gftqqjpfsbj', pid=4790)\nnames_48 = state.register(name='wtuxtewgc', pid=-44)\nnames_49 = state.register(name='lley', pid=-31201)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 42, "failures": 8}, "timing": {"execute:test": 0.009011582005769014, "generate:data": 4.387483932077885e-05, "generate:rule:register": 0.21657133498229086, "execute:rule:register": 0.0004024158697575331}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='bexskrityu', pid=32201)\nnames_1 = state.register(name='ja', pid=-6709)\nnames_2 = state.register(name='', pid=-48)\nnames_3 = state.register(name=names_2, pid=78)\nnames_4 = state.register(name='lvtmaezfekgvmr', pid=-26327)\nnames_5 = state.register(name='eozr', pid=-9459)\nnames_6 = state.register(name=names_2, pid=-41)\nnames_7 = state.register(name='rdwa', pid=30338)\nnames_8 = state.register(name='a', pid=-57)\nnames_9 = state.register(name='ajwjydtpkt', pid=318851428)\nnames_10 = state.register(name='pgn', pid=17281)\nnames_11 = state.register(name=names_2, pid=-80)\nnames_12 = state.register(name=names_2, pid=13362)\nnames_13 = state.register(name='du', pid=30726)\nnames_14 = state.register(name='pnf', pid=94)\nnames_15 = state.register(name='ehlw', pid=39)\nnames_16 = state.register(name='kbi', pid=-23137)\nnames_17 = state.register(name='dmdtnbgl', pid=1345)\nnames_18 = state.register(name='i', pid=-61)\nnames_19 = state.register(name='kmkyosmdk', pid=-296149156290440731)\nnames_20 = state.register(name=names_2, pid=11470)\nnames_21 = state.register(name=names_2, pid=-10673)\nnames_22 = state.register(name='wla', pid=-4540213656431052165)\nnames_23 = state.register(name='vdmaubxecxj', pid=22)\nnames_24 = state.register(name='jlryrmavvy', pid=-27278)\nnames_25 = state.register(name=names_2, pid=-897)\nnames_26 = state.register(name='g', pid=-64)\nnames_27 = state.register(name='zrzoptiqdnavpyi', pid=-32636)\nnames_28 = state.register(name='fwllg', pid=-5801)\nnames_29 = state.register(name='uuy', pid=99)\nnames_30 = state.register(name='e', pid=-83)\nnames_31 = state.register(name='u', pid=-4940437841434191557)\nnames_32 = state.register(name='wkak', pid=9090)\nnames_33 = state.register(name='rdmqmobpthveuqn', pid=-96)\nnames_34 = state.register(name='labaj', pid=-47)\nnames_35 = state.register(name='kbp', pid=2077876814)\nnames_36 = state.register(name='vzvkra', pid=12419)\nnames_37 = state.register(name='uooqgubhxhqyt', pid=31216)\nnames_38 = state.register(name=names_2, pid=24)\nnames_39 = state.register(name='nr', pid=-25283)\nnames_40 = state.register(name='zx', pid=29116)\nnames_41 = state.register(name='jpd', pid=31543)\nnames_42 = state.register(name='nkattfrow', pid=-30)\nnames_43 = state.register(name=names_2, pid=-30460)\nnames_44 = state.register(name='vllikiwr', pid=-79)\nnames_45 = state.register(name='utyqlunueqxn', pid=71)\nnames_46 = state.register(name='unwkspbinnilj', pid=125)\nnames_47 = state.register(name='b', pid=-1)\nnames_48 = state.register(name='gftqqjpfsbj', pid=4790)\nnames_49 = state.register(name='wtuxtewgc', pid=-44)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 41, "failures": 9}, "timing": {"execute:test": 0.008788372157141566, "generate:data": 4.583410918712616e-05, "generate:rule:register": 0.21107887802645564, "execute:rule:register": 0.00038654194213449955}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='bexskrityu', pid=32201)\nnames_1 = state.register(name='ja', pid=-6709)\nnames_2 = state.register(name='', pid=-48)\nnames_3 = state.register(name=names_2, pid=78)\nnames_4 = state.register(name='lvtmaezfekgvmr', pid=-26327)\nnames_5 = state.register(name='eozr', pid=-9459)\nnames_6 = state.register(name=names_2, pid=-41)\nnames_7 = state.register(name='rdwa', pid=30338)\nnames_8 = state.register(name='a', pid=-57)\nnames_9 = state.register(name='ajwjydtpkt', pid=318851428)\nnames_10 = state.register(name='pgn', pid=17281)\nnames_11 = state.register(name=names_2, pid=-80)\nnames_12 = state.register(name=names_2, pid=13362)\nnames_13 = state.register(name='du', pid=30726)\nnames_14 = state.register(name='pnf', pid=94)\nnames_15 = state.register(name='ehlw', pid=39)\nnames_16 = state.register(name='kbi', pid=-23137)\nnames_17 = state.register(name='dmdtnbgl', pid=1345)\nnames_18 = state.register(name='i', pid=-61)\nnames_19 = state.register(name='kmkyosmdk', pid=-296149156290440731)\nnames_20 = state.register(name=names_2, pid=11470)\nnames_21 = state.register(name=names_2, pid=-10673)\nnames_22 = state.register(name='wla', pid=-4540213656431052165)\nnames_23 = state.register(name='vdmaubxecxj', pid=22)\nnames_24 = state.register(name='jlryrmavvy', pid=-27278)\nnames_25 = state.register(name=names_2, pid=-897)\nnames_26 = state.register(name='g', pid=-64)\nnames_27 = state.register(name='zrzoptiqdnavpyi', pid=-32636)\nnames_28 = state.register(name='fwllg', pid=-5801)\nnames_29 = state.register(name='uuy', pid=99)\nnames_30 = state.register(name='e', pid=-83)\nnames_31 = state.register(name='u', pid=-4940437841434191557)\nnames_32 = state.register(name='wkak', pid=9090)\nnames_33 = state.register(name='rdmqmobpthveuqn', pid=-96)\nnames_34 = state.register(name='labaj', pid=-47)\nnames_35 = state.register(name='wla', pid=-4540213656431052165)\nnames_36 = state.register(name='vzvkra', pid=12419)\nnames_37 = state.register(name='uooqgubhxhqyt', pid=31216)\nnames_38 = state.register(name=names_2, pid=24)\nnames_39 = state.register(name='nr', pid=-25283)\nnames_40 = state.register(name='zx', pid=29116)\nnames_41 = state.register(name='jpd', pid=31543)\nnames_42 = state.register(name='nkattfrow', pid=-30)\nnames_43 = state.register(name=names_2, pid=-30460)\nnames_44 = state.register(name='vllikiwr', pid=-79)\nnames_45 = state.register(name='utyqlunueqxn', pid=71)\nnames_46 = state.register(name='unwkspbinnilj', pid=125)\nnames_47 = state.register(name='b', pid=-1)\nnames_48 = state.register(name='gftqqjpfsbj', pid=4790)\nnames_49 = state.register(name='wtuxtewgc', pid=-44)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 40, "failures": 10}, "timing": {"execute:test": 0.008741081925109029, "generate:data": 4.449998959898949e-05, "generate:rule:register": 0.20801458414644003, "execute:rule:register": 0.00038654240779578686}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='bexskrityu', pid=32201)\nnames_1 = state.register(name='ja', pid=-6709)\nnames_2 = state.register(name='', pid=-48)\nnames_3 = state.register(name=names_2, pid=78)\nnames_4 = state.register(name='lvtmaezfekgvmr', pid=-26327)\nnames_5 = state.register(name='eozr', pid=-9459)\nnames_6 = state.register(name=names_2, pid=-41)\nnames_7 = state.register(name='rdwa', pid=30338)\nnames_8 = state.register(name='a', pid=-57)\nnames_9 = state.register(name='ajwjydtpkt', pid=318851428)\nnames_10 = state.register(name='pgn', pid=17281)\nnames_11 = state.register(name=names_2, pid=-80)\nnames_12 = state.register(name=names_2, pid=13362)\nnames_13 = state.register(name='du', pid=30726)\nnames_14 = state.register(name='pnf', pid=94)\nnames_15 = state.register(name='ehlw', pid=39)\nnames_16 = state.register(name='kbi', pid=-23137)\nnames_17 = state.register(name='dmdtnbgl', pid=1345)\nnames_18 = state.register(name='i', pid=-61)\nnames_19 = state.register(name='kmkyosmdk', pid=-296149156290440731)\nnames_20 = state.register(name=names_2, pid=11470)\nnames_21 = state.register(name=names_2, pid=-10673)\nnames_22 = state.register(name='wla', pid=-4540213656431052165)\nnames_23 = state.register(name='vdmaubxecxj', pid=22)\nnames_24 = state.register(name='jlryrmavvy', pid=-27278)\nnames_25 = state.register(name=names_2, pid=-897)\nnames_26 = state.register(name='g', pid=-64)\nnames_27 = state.register(name='zrzoptiqdnavpyi', pid=-32636)\nnames_28 = state.register(name='fwllg', pid=-5801)\nnames_29 = state.register(name='uuy', pid=99)\nnames_30 = state.register(name='e', pid=-83)\nnames_31 = state.register(name='u', pid=-4940437841434191557)\nnames_32 = state.register(name='wkak', pid=9090)\nnames_33 = state.register(name='rdmqmobpthveuqn', pid=-96)\nnames_34 = state.register(name='labaj', pid=-47)\nnames_35 = state.register(name='wla', pid=-4540213656431052165)\nnames_36 = state.register(name='vzvkra', pid=12419)\nnames_37 = state.register(name='uooqgubhxhqyt', pid=31216)\nnames_38 = state.register(name=names_2, pid=24)\nnames_39 = state.register(name='nr', pid=-25283)\nnames_40 = state.register(name='zx', pid=29116)\nnames_41 = state.register(name='jpd', pid=31543)\nnames_42 = state.register(name='nkattfrow', pid=-30)\nnames_43 = state.register(name=names_2, pid=-30460)\nnames_44 = state.register(name='vllikiwr', pid=-79)\nnames_45 = state.register(name='utyqlunueqxn', pid=71)\nnames_46 = state.register(name='unwkspbinnilj', pid=125)\nnames_47 = state.register(name='b', pid=-1)\nnames_48 = state.register(name='gftqqjpfsbj', pid=4790)\nnames_49 = state.register(name='wtuxtewgc', pid=-44)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 40, "failures": 10}, "timing": {"execute:test": 0.008906334405764937, "generate:data": 4.4582877308130264e-05, "generate:rule:register": 0.20858104061335325, "execute:rule:register": 0.00039707962423563004}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nnames_0 = state.register(name='bexskrityu', pid=32201)\nnames_1 = state.register(name='ja', pid=-6709)\nnames_2 = state.register(name='', pid=-48)\nnames_3 = state.register(name=names_2, pid=78)\nnames_4 = state.register(name='lvtmaezfekgvmr', pid=-26327)\nnames_5 = state.register(name='eozr', pid=-9459)\nnames_6 = state.register(name=names_2, pid=-41)\nnames_7 = state.register(name='rdwa', pid=30338)\nnames_8 = state.register(name='a', pid=-57)\nnames_9 = state.register(name='ajwjydtpkt', pid=318851428)\nnames_10 = state.register(name='pgn', pid=17281)\nnames_11 = state.register(name=names_2, pid=-80)\nnames_12 = state.register(name=names_2, pid=13362)\nnames_13 = state.register(name='du', pid=30726)\nnames_14 = state.register(name='pnf', pid=94)\nnames_15 = state.register(name='ehlw', pid=39)\nnames_16 = state.register(name='kbi', pid=-23137)\nnames_17 = state.register(name='dmdtnbgl', pid=1345)\nnames_18 = state.register(name='i', pid=-61)\nnames_19 = state.register(name='kmkyosmdk', pid=-296149156290440731)\nnames_20 = state.register(name=names_2, pid=11470)\nnames_21 = state.register(name=names_2, pid=-10673)\nnames_22 = state.register(name='wla', pid=-4540213656431052165)\nnames_23 = state.register(name='vdmaubxecxj', pid=22)\nnames_24 = state.register(name='jlryrmavvy', pid=-27278)\nnames_25 = state.register(name=names_2, pid=-897)\nnames_26 = state.register(name='g', pid=-64)\nnames_27 = state.register(name='zrzoptiqdnavpyi', pid=-32636)\nnames_28 = state.register(name='fwllg', pid=-5801)\nnames_29 = state.register(name='uuy', pid=99)\nnames_30 = state.register(name='e', pid=-83)\nnames_31 = state.register(name='u', pid=-4940437841434191557)\nnames_32 = state.register(name='wkak', pid=9090)\nnames_33 = state.register(name='rdmqmobpthveuqn', pid=-96)\nnames_34 = state.register(name='labaj', pid=-47)\nnames_35 = state.register(name='wla', pid=-4540213656431052165)\nnames_36 = state.register(name='vzvkra', pid=12419)\nnames_37 = state.register(name='uooqgubhxhqyt', pid=31216)\nnames_38 = state.register(name=names_2, pid=24)\nnames_39 = state.register(name='nr', pid=-25283)\nnames_40 = state.register(name='zx', pid=29116)\nnames_41 = state.register(name='jpd', pid=31543)\nnames_42 = state.register(name='nkattfrow', pid=-30)\nnames_43 = state.register(name=names_2, pid=-30460)\nnames_44 = state.register(name='vllikiwr', pid=-79)\nnames_45 = state.register(name='utyqlunueqxn', pid=71)\nnames_46 = state.register(name='unwkspbinnilj', pid=125)\nnames_47 = state.register(name='b', pid=-1)\nnames_48 = state.register(name='gftqqjpfsbj', pid=4790)\nnames_49 = state.register(name='wtuxtewgc', pid=-44)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 40, "failures": 10}, "timing": {"execute:test": 0.008839498274028301, "generate:data": 4.5082997530698776e-05, "generate:rule:register": 0.20785654289647937, "execute:rule:register": 0.0003925408236682415}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='kxbstqvdky')\nnames_0 = state.register(name='obrvycbzlpnwzgpuooch', pid=33)\nnames_1 = state.register(name='j', pid=-91)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='hmukvtoyad', pid=32)\nnames_3 = state.register(name='lo', pid=17128)\nstate.where_is(name=names_0)\nstate.where_is(name='hbfafyipqrpd')\nnames_4 = state.register(name='', pid=76)\nstate.where_is(name='tomupw')\nnames_5 = state.register(name='usjsghqv', pid=-44)\nnames_6 = state.register(name='mwg', pid=92)\nnames_7 = state.register(name='pa', pid=50)\nnames_8 = state.register(name=names_4, pid=-53)\nstate.where_is(name='davrtb')\nstate.where_is(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='xmnmhty')\nstate.where_is(name='caxwaoxsqqpw')\nnames_9 = state.register(name='soj', pid=17)\nstate.where_is(name='zhu')\nstate.where_is(name='wythv')\nnames_10 = state.register(name='lpcjydgor', pid=-16650)\nnames_11 = state.register(name='a', pid=108)\nstate.where_is(name=names_9)\nnames_12 = state.register(name=names_4, pid=-3722)\nnames_13 = state.register(name='cdhhwex', pid=-11810)\nnames_14 = state.register(name='byaydiv', pid=-84)\nnames_15 = state.register(name=names_4, pid=17220)\nnames_16 = state.register(name='qaw', pid=14275)\nnames_17 = state.register(name='tmqpcymq', pid=-2121485172)\nstate.where_is(name='o')\nnames_18 = state.register(name=names_4, pid=23402)\nnames_19 = state.register(name='btxxaawajxqsirhq', pid=-47)\nstate.where_is(name=names_6)\nstate.where_is(name='dfvxcru')\nstate.where_is(name='incoeqrgwklazcltghmwnunwhgqqu')\nnames_20 = state.register(name='ojw', pid=-23618)\nstate.where_is(name=names_14)\nstate.where_is(name=names_4)\nstate.where_is(name='xdyfl')\nstate.where_is(name='ohy')\nstate.where_is(name=names_3)\nstate.where_is(name=names_13)\nnames_21 = state.register(name='p', pid=4797)\nnames_22 = state.register(name='xh', pid=115475322270639328110729318534863939303)\nstate.where_is(name='n')\nstate.where_is(name=names_4)\nstate.where_is(name=names_4)\nnames_23 = state.register(name='d', pid=24724)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 46, "failures": 4}, "timing": {"execute:test": 0.007122291950508952, "generate:data": 4.287506453692913e-05, "generate:rule:where_is": 0.09449679241515696, "generate:rule:register": 0.09235058166086674, "execute:rule:where_is": 0.00016962573863565922, "execute:rule:register": 0.00018929503858089447}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='kxbstqvdky')\nnames_0 = state.register(name='obrvycbzlpnwzgpuooch', pid=33)\nnames_1 = state.register(name='j', pid=-91)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='hmukvtoyad', pid=32)\nnames_3 = state.register(name='lo', pid=17128)\nstate.where_is(name=names_0)\nstate.where_is(name='hbfafyipqrpd')\nnames_4 = state.register(name='', pid=76)\nstate.where_is(name='tomupw')\nnames_5 = state.register(name='usjsghqv', pid=-44)\nnames_6 = state.register(name='mwg', pid=92)\nnames_7 = state.register(name='pa', pid=50)\nnames_8 = state.register(name=names_4, pid=-53)\nstate.where_is(name='davrtb')\nstate.where_is(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='xmnmhty')\nstate.where_is(name='caxwaoxsqqpw')\nnames_9 = state.register(name='soj', pid=17)\nstate.where_is(name='zhu')\nstate.where_is(name='wythv')\nnames_10 = state.register(name='lpcjydgor', pid=-16650)\nnames_11 = state.register(name='a', pid=108)\nstate.where_is(name=names_9)\nnames_12 = state.register(name=names_4, pid=-3722)\nnames_13 = state.register(name='cdhhwex', pid=-11810)\nnames_14 = state.register(name='byaydiv', pid=-84)\nnames_15 = state.register(name=names_4, pid=17220)\nnames_16 = state.register(name='qaw', pid=14275)\nnames_17 = state.register(name='tmqpcymq', pid=-2121485172)\nstate.where_is(name='o')\nnames_18 = state.register(name=names_4, pid=23402)\nnames_19 = state.register(name='btxxaawajxqsirhq', pid=-47)\nstate.where_is(name=names_6)\nstate.where_is(name='dfvxcru')\nstate.where_is(name='incoeqrgwklazcltghmwnunwhgqqu')\nnames_20 = state.register(name='ojw', pid=-23618)\nstate.where_is(name=names_14)\nstate.where_is(name=names_4)\nstate.where_is(name='xdyfl')\nstate.where_is(name='caxwaoxsqqpw')\nstate.where_is(name=names_3)\nstate.where_is(name=names_13)\nnames_21 = state.register(name='p', pid=4797)\nnames_22 = state.register(name='xh', pid=115475322270639328110729318534863939303)\nstate.where_is(name='n')\nstate.where_is(name=names_4)\nstate.where_is(name=names_4)\nnames_23 = state.register(name='d', pid=24724)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 46, "failures": 4}, "timing": {"execute:test": 0.007145828567445278, "generate:data": 4.433305002748966e-05, "generate:rule:where_is": 0.11336729396134615, "generate:rule:register": 0.08938508643768728, "execute:rule:where_is": 0.00017045880667865276, "execute:rule:register": 0.00018953904509544373}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='kxbstqvdky')\nnames_0 = state.register(name='obrvycbzlpnwzgpuooch', pid=33)\nnames_1 = state.register(name='j', pid=-91)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='hmukvtoyad', pid=32)\nnames_3 = state.register(name='lo', pid=17128)\nstate.where_is(name=names_0)\nstate.where_is(name='hbfafyipqrpd')\nnames_4 = state.register(name='', pid=76)\nstate.where_is(name='tomupw')\nnames_5 = state.register(name='usjsghqv', pid=-44)\nnames_6 = state.register(name='mwg', pid=92)\nnames_7 = state.register(name='pa', pid=50)\nnames_8 = state.register(name=names_4, pid=-53)\nstate.where_is(name='davrtb')\nstate.where_is(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='xmnmhty')\nstate.where_is(name='caxwaoxsqqpw')\nnames_9 = state.register(name='soj', pid=17)\nstate.where_is(name='zhu')\nstate.where_is(name='wythv')\nnames_10 = state.register(name='lpcjydgor', pid=-16650)\nnames_11 = state.register(name='a', pid=108)\nstate.where_is(name=names_9)\nnames_12 = state.register(name=names_4, pid=-3722)\nnames_13 = state.register(name='cdhhwex', pid=-11810)\nnames_14 = state.register(name='byaydiv', pid=-84)\nnames_15 = state.register(name=names_4, pid=17220)\nnames_16 = state.register(name='qaw', pid=14275)\nnames_17 = state.register(name='tmqpcymq', pid=-2121485172)\nstate.where_is(name='o')\nnames_18 = state.register(name=names_4, pid=23402)\nnames_19 = state.register(name='btxxaawajxqsirhq', pid=-47)\nstate.where_is(name=names_6)\nstate.where_is(name='dfvxcru')\nstate.where_is(name='incoeqrgwklazcltghmwnunwhgqqu')\nnames_20 = state.register(name='ojw', pid=-23618)\nstate.where_is(name=names_14)\nstate.where_is(name=names_4)\nstate.where_is(name='xdyfl')\nstate.where_is(name='caxwaoxsqqpw')\nstate.where_is(name=names_3)\nstate.where_is(name=names_13)\nnames_21 = state.register(name='p', pid=4797)\nnames_22 = state.register(name='xh', pid=115475322270639328110729318534863939303)\nstate.where_is(name='n')\nstate.where_is(name=names_4)\nstate.where_is(name=names_4)\nnames_23 = state.register(name='d', pid=24724)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 46, "failures": 4}, "timing": {"execute:test": 0.007156664039939642, "generate:data": 4.5457854866981506e-05, "generate:rule:where_is": 0.09747150237672031, "generate:rule:register": 0.09205075073987246, "execute:rule:where_is": 0.00016866810619831085, "execute:rule:register": 0.00018920144066214561}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='kxbstqvdky')\nnames_0 = state.register(name='obrvycbzlpnwzgpuooch', pid=33)\nnames_1 = state.register(name='j', pid=-91)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='hmukvtoyad', pid=32)\nnames_3 = state.register(name='lo', pid=17128)\nstate.where_is(name=names_0)\nstate.where_is(name='hbfafyipqrpd')\nnames_4 = state.register(name='', pid=76)\nstate.where_is(name='tomupw')\nnames_5 = state.register(name='usjsghqv', pid=-44)\nnames_6 = state.register(name='mwg', pid=92)\nnames_7 = state.register(name='pa', pid=50)\nnames_8 = state.register(name=names_4, pid=-53)\nstate.where_is(name='davrtb')\nstate.where_is(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='xmnmhty')\nstate.where_is(name='caxwaoxsqqpw')\nnames_9 = state.register(name='soj', pid=17)\nstate.where_is(name='zhu')\nstate.where_is(name='wythv')\nnames_10 = state.register(name='lpcjydgor', pid=-16650)\nnames_11 = state.register(name='a', pid=108)\nstate.where_is(name=names_9)\nnames_12 = state.register(name=names_4, pid=-3722)\nnames_13 = state.register(name='cdhhwex', pid=-11810)\nnames_14 = state.register(name='byaydiv', pid=-84)\nnames_15 = state.register(name=names_4, pid=17220)\nnames_16 = state.register(name='qaw', pid=14275)\nnames_17 = state.register(name='tmqpcymq', pid=-2121485172)\nstate.where_is(name='o')\nnames_18 = state.register(name=names_4, pid=23402)\nnames_19 = state.register(name='btxxaawajxqsirhq', pid=-47)\nstate.where_is(name=names_6)\nstate.where_is(name='dfvxcru')\nstate.where_is(name='incoeqrgwklazcltghmwnunwhgqqu')\nnames_20 = state.register(name='ojw', pid=-23618)\nstate.where_is(name=names_14)\nstate.where_is(name=names_4)\nstate.where_is(name='xdyfl')\nstate.where_is(name='caxwaoxsqqpw')\nstate.where_is(name=names_3)\nstate.where_is(name=names_13)\nnames_21 = state.register(name='p', pid=4797)\nnames_22 = state.register(name='xh', pid=115475322270639328110729318534863939303)\nstate.where_is(name='n')\nstate.where_is(name=names_4)\nstate.where_is(name=names_4)\nnames_23 = state.register(name='d', pid=24724)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 46, "failures": 4}, "timing": {"execute:test": 0.007158997468650341, "generate:data": 4.554097540676594e-05, "generate:rule:where_is": 0.09475233568809927, "generate:rule:register": 0.09022183390334249, "execute:rule:where_is": 0.00016992050223052502, "execute:rule:register": 0.00018899817951023579}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='kxbstqvdky')\nnames_0 = state.register(name='obrvycbzlpnwzgpuooch', pid=33)\nnames_1 = state.register(name='j', pid=-91)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='hmukvtoyad', pid=32)\nnames_3 = state.register(name='lo', pid=17128)\nstate.where_is(name=names_0)\nstate.where_is(name='hbfafyipqrpd')\nnames_4 = state.register(name='', pid=76)\nstate.where_is(name='tomupw')\nnames_5 = state.register(name='usjsghqv', pid=-44)\nnames_6 = state.register(name='mwg', pid=92)\nnames_7 = state.register(name='pa', pid=50)\nnames_8 = state.register(name=names_4, pid=-53)\nstate.where_is(name='davrtb')\nstate.where_is(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='xmnmhty')\nstate.where_is(name='caxwaoxsqqpw')\nnames_9 = state.register(name='soj', pid=17)\nstate.where_is(name='zhu')\nstate.where_is(name='wythv')\nnames_10 = state.register(name='lpcjydgor', pid=-16650)\nnames_11 = state.register(name='a', pid=108)\nstate.where_is(name=names_9)\nnames_12 = state.register(name=names_4, pid=-3722)\nnames_13 = state.register(name=names_4, pid=-11810)\nnames_14 = state.register(name='byaydiv', pid=-84)\nnames_15 = state.register(name=names_4, pid=17220)\nnames_16 = state.register(name='qaw', pid=14275)\nnames_17 = state.register(name='tmqpcymq', pid=-2121485172)\nstate.where_is(name='o')\nnames_18 = state.register(name=names_4, pid=23402)\nnames_19 = state.register(name='btxxaawajxqsirhq', pid=-47)\nstate.where_is(name=names_6)\nstate.where_is(name='dfvxcru')\nstate.where_is(name='incoeqrgwklazcltghmwnunwhgqqu')\nnames_20 = state.register(name='ojw', pid=-23618)\nstate.where_is(name=names_14)\nstate.where_is(name=names_4)\nstate.where_is(name='xdyfl')\nstate.where_is(name='caxwaoxsqqpw')\nstate.where_is(name=names_3)\nstate.where_is(name=None)\nnames_21 = state.register(name='p', pid=4797)\nnames_22 = state.register(name='xh', pid=115475322270639328110729318534863939303)\nstate.where_is(name='n')\nstate.where_is(name=names_4)\nstate.where_is(name=names_4)\nnames_23 = state.register(name='d', pid=24724)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 45, "failures": 5}, "timing": {"execute:test": 0.007320960517972708, "generate:data": 4.449998959898949e-05, "generate:rule:where_is": 0.0966244179289788, "generate:rule:register": 0.09033924643881619, "execute:rule:where_is": 0.00017295987345278263, "execute:rule:register": 0.0002047908492386341}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='kxbstqvdky')\nnames_0 = state.register(name='obrvycbzlpnwzgpuooch', pid=33)\nnames_1 = state.register(name='j', pid=-91)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='hmukvtoyad', pid=32)\nnames_3 = state.register(name='lo', pid=17128)\nstate.where_is(name=names_0)\nstate.where_is(name='hbfafyipqrpd')\nnames_4 = state.register(name='', pid=76)\nstate.where_is(name='tomupw')\nnames_5 = state.register(name='usjsghqv', pid=-44)\nnames_6 = state.register(name='mwg', pid=92)\nnames_7 = state.register(name='pa', pid=50)\nnames_8 = state.register(name=names_4, pid=-53)\nstate.where_is(name='davrtb')\nstate.where_is(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='xmnmhty')\nstate.where_is(name='caxwaoxsqqpw')\nnames_9 = state.register(name='soj', pid=17)\nstate.where_is(name='zhu')\nstate.where_is(name='wythv')\nnames_10 = state.register(name='lpcjydgor', pid=-16650)\nnames_11 = state.register(name='a', pid=108)\nstate.where_is(name=names_9)\nnames_12 = state.register(name=names_4, pid=-3722)\nnames_13 = state.register(name=names_4, pid=-11810)\nnames_14 = state.register(name='byaydiv', pid=-84)\nnames_15 = state.register(name=names_4, pid=17220)\nnames_16 = state.register(name='qaw', pid=14275)\nnames_17 = state.register(name='tmqpcymq', pid=-2121485172)\nstate.where_is(name='o')\nnames_18 = state.register(name=names_4, pid=23402)\nnames_19 = state.register(name='btxxaawajxqsirhq', pid=-47)\nstate.where_is(name=names_6)\nstate.where_is(name='dfvxcru')\nstate.where_is(name='incoeqrgwklazcltghmwnunwhgqqu')\nnames_20 = state.register(name='ojw', pid=-23618)\nstate.where_is(name=names_14)\nstate.where_is(name=names_20)\nnames_21 = state.register(name=names_4, pid=2945)\nstate.where_is(name=None)\nstate.where_is(name='caxwaoxsqqpw')\nstate.where_is(name=names_4)\nstate.where_is(name=names_14)\nnames_22 = state.register(name='p', pid=4797)\nnames_23 = state.register(name='xh', pid=115475322270639328110729318534863939303)\nstate.where_is(name='n')\nstate.where_is(name=names_5)\nstate.where_is(name=names_4)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 44, "failures": 6}, "timing": {"execute:test": 0.007164790760725737, "generate:data": 4.579196684062481e-05, "generate:rule:where_is": 0.0944121666252613, "generate:rule:register": 0.08763562561944127, "execute:rule:where_is": 0.00017024623230099678, "execute:rule:register": 0.00019283359870314598}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='kxbstqvdky')\nnames_0 = state.register(name='obrvycbzlpnwzgpuooch', pid=33)\nnames_1 = state.register(name='j', pid=-91)\nstate.where_is(name=names_0)\nnames_2 = state.register(name='hmukvtoyad', pid=32)\nnames_3 = state.register(name='lo', pid=17128)\nstate.where_is(name=names_0)\nstate.where_is(name='hbfafyipqrpd')\nnames_4 = state.register(name='', pid=76)\nstate.where_is(name='tomupw')\nnames_5 = state.register(name='usjsghqv', pid=-44)\nnames_6 = state.register(name='mwg', pid=92)\nnames_7 = state.register(name='pa', pid=50)\nnames_8 = state.register(name=names_4, pid=-53)\nstate.where_is(name='damrtb')\nstate.where_is(name=names_1)\nstate.where_is(name=names_1)\nstate.where_is(name='xmnmhty')\nstate.where_is(name='caxwaoxsqqpw')\nnames_9 = state.register(name='soj', pid=17)\nstate.where_is(name='zhu')\nstate.where_is(name='wythv')\nnames_10 = state.register(name='lpcjydgor', pid=-16650)\nnames_11 = state.register(name='a', pid=108)\nstate.where_is(name=names_9)\nnames_12 = state.register(name=names_4, pid=-3722)\nnames_13 = state.register(name=names_4, pid=-11810)\nnames_14 = state.register(name='byaydiv', pid=-84)\nnames_15 = state.register(name=names_4, pid=17220)\nnames_16 = state.register(name='qaw', pid=14275)\nnames_17 = state.register(name='tmqpcymq', pid=-2121485172)\nstate.where_is(name='o')\nnames_18 = state.register(name=names_4, pid=23402)\nnames_19 = state.register(name='btxxaawajxqsirhq', pid=-47)\nstate.where_is(name=names_6)\nstate.where_is(name='dfvxcru')\nstate.where_is(name='incoeqrgwklazcltghmwnunwhgqqu')\nnames_20 = state.register(name='ojw', pid=-23618)\nstate.where_is(name=names_14)\nstate.where_is(name=names_20)\nnames_21 = state.register(name=names_4, pid=2945)\nstate.where_is(name=None)\nstate.where_is(name='caxwaoxsqqpw')\nstate.where_is(name=names_4)\nstate.where_is(name=names_14)\nnames_22 = state.register(name='p', pid=4797)\nnames_23 = state.register(name='xh', pid=115475322270639328110729318534863939303)\nstate.where_is(name='n')\nstate.where_is(name=names_5)\nstate.where_is(name=names_4)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 44, "failures": 6}, "timing": {"execute:test": 0.0070475023239851, "generate:data": 4.333397373557091e-05, "generate:rule:where_is": 0.09513141517527401, "generate:rule:register": 0.08839641534723341, "execute:rule:where_is": 0.00016754399985074997, "execute:rule:register": 0.00019095628522336483}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 12, 14, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='xsprc')\nstate.where_is(name='hmhk')\nnames_0 = state.register(name='rgobus', pid=-5873)\nstate.unregister(name=names_0)\nstate.where_is(name='yelmkunpbb')\nnames_1 = state.register(name='', pid=-23918)\nstate.unregister(name=names_1)\nstate.where_is(name='woafnxsxxmoz')\nnames_2 = state.register(name='ca', pid=-12710)\nnames_3 = state.register(name=names_1, pid=-11439)\nstate.where_is(name=names_1)\nstate.unregister(name=names_3)\nnames_4 = state.register(name='t', pid=-19408)\nstate.where_is(name=names_1)\nnames_5 = state.register(name='spedar', pid=-48)\nstate.where_is(name='lugrdhltsjtaltrooltdrbwc')\nstate.unregister(name=names_5)\nstate.unregister(name=names_4)\nnames_6 = state.register(name='s', pid=5385)\nstate.where_is(name=names_2)\nnames_7 = state.register(name='rbgxpat', pid=-121)\nnames_8 = state.register(name='mofvcuf', pid=-1158128058)\nnames_9 = state.register(name='hcekswklfuiu', pid=-1177130590)\nstate.where_is(name=names_1)\nnames_10 = state.register(name='ypcyzgpa', pid=-32346)\nstate.where_is(name=names_10)\nstate.unregister(name=names_2)\nstate.unregister(name=names_7)\nstate.where_is(name=names_8)\nnames_11 = state.register(name='q', pid=-6855)\nstate.where_is(name='srhddng')\nstate.where_is(name=names_10)\nnames_12 = state.register(name='a', pid=-9337)\nstate.where_is(name=names_1)\nstate.unregister(name=names_12)\nstate.unregister(name=names_6)\nnames_13 = state.register(name='dvvrx', pid=1574)\nstate.where_is(name=names_9)\nstate.where_is(name=names_1)\nstate.where_is(name=names_8)\nnames_14 = state.register(name='mbl', pid=87)\nnames_15 = state.register(name='r', pid=15)\nstate.where_is(name='bpbuuedchnta')\nstate.unregister(name=names_10)\nnames_16 = state.register(name='jawurmvqwrhygiin', pid=-1613)\nnames_17 = state.register(name='yq', pid=6548)\nnames_18 = state.register(name='ohko', pid=13450688181645917044235688748744790907)\nstate.where_is(name=names_14)\nnames_19 = state.register(name=names_1, pid=118)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.006407623179256916, "generate:data": 4.3250154703855515e-05, "generate:rule:where_is": 0.06649879203177989, "generate:rule:register": 0.07086712750606239, "generate:rule:unregister": 0.015928665408864617, "execute:rule:where_is": 0.0001291616354137659, "execute:rule:register": 0.00014941580593585968, "execute:rule:unregister": 6.908318027853966e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='xsprc')\nstate.where_is(name='hmhk')\nnames_0 = state.register(name='rgobus', pid=-5873)\nstate.unregister(name=names_0)\nstate.where_is(name='yelmkunpbb')\nnames_1 = state.register(name='', pid=-23918)\nstate.unregister(name=names_1)\nstate.where_is(name='woafnxsxxmoz')\nnames_2 = state.register(name='ca', pid=-12710)\nnames_3 = state.register(name=names_1, pid=-11439)\nstate.where_is(name=names_1)\nstate.unregister(name=names_3)\nnames_4 = state.register(name='t', pid=-19408)\nstate.where_is(name=names_1)\nnames_5 = state.register(name='spedar', pid=-48)\nstate.where_is(name='lugrdhltsjtaltrooltdrbwc')\nstate.unregister(name=names_5)\nstate.unregister(name=names_4)\nnames_6 = state.register(name='s', pid=5385)\nstate.where_is(name=names_2)\nnames_7 = state.register(name='rbgxpat', pid=-121)\nnames_8 = state.register(name='mofvcuf', pid=-1158128058)\nnames_9 = state.register(name='hcekswklfuiu', pid=-1177130590)\nstate.where_is(name=names_1)\nnames_10 = state.register(name='ypcyzgpa', pid=-32346)\nstate.where_is(name=names_10)\nstate.unregister(name=names_2)\nstate.unregister(name=names_7)\nstate.where_is(name=names_8)\nnames_11 = state.register(name='q', pid=-6855)\nstate.where_is(name='srhddng')\nstate.where_is(name=names_10)\nnames_12 = state.register(name='spedar', pid=-9337)\nstate.where_is(name=names_1)\nstate.unregister(name=names_12)\nstate.unregister(name=names_6)\nnames_13 = state.register(name='dvvrx', pid=1574)\nstate.where_is(name=names_9)\nstate.where_is(name=names_1)\nstate.where_is(name=names_8)\nnames_14 = state.register(name='mbl', pid=87)\nnames_15 = state.register(name='r', pid=15)\nstate.where_is(name='bpbuuedchnta')\nstate.unregister(name=names_10)\nnames_16 = state.register(name='jawurmvqwrhygiin', pid=-1613)\nnames_17 = state.register(name='yq', pid=6548)\nnames_18 = state.register(name='ohko', pid=13450688181645917044235688748744790907)\nstate.where_is(name=names_14)\nnames_19 = state.register(name=names_1, pid=118)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.006415206007659435, "generate:data": 4.570791497826576e-05, "generate:rule:where_is": 0.06577012594789267, "generate:rule:register": 0.07122116861864924, "generate:rule:unregister": 0.015385958598926663, "execute:rule:where_is": 0.00013107946142554283, "execute:rule:register": 0.00014858017675578594, "execute:rule:unregister": 6.86256680637598e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 14, 20, 23, 29]}}
{"type": "test_case", "run_start": 1709743647.061399, "property": "run_state_machine", "status": "passed", "status_reason": "", "representation": "state = NameServerComparison()\nstate.where_is(name='')\nstate.where_is(name='xsprc')\nstate.where_is(name='hmhk')\nnames_0 = state.register(name='rgobus', pid=-5873)\nstate.unregister(name=names_0)\nstate.where_is(name='yelmkunpbb')\nnames_1 = state.register(name='', pid=-23918)\nstate.unregister(name=names_1)\nstate.where_is(name='woafnxsxxmoz')\nnames_2 = state.register(name='ca', pid=-12710)\nnames_3 = state.register(name='yq', pid=-11439)\nstate.where_is(name=names_3)\nstate.unregister(name=names_3)\nnames_4 = state.register(name='t', pid=-19408)\nstate.where_is(name=names_1)\nnames_5 = state.register(name='spedar', pid=-48)\nstate.where_is(name='lugrdhltsjtaltrooltdrbwc')\nstate.unregister(name=names_5)\nstate.unregister(name=names_4)\nnames_6 = state.register(name='s', pid=5385)\nstate.where_is(name=names_2)\nnames_7 = state.register(name='rbgxpat', pid=-121)\nnames_8 = state.register(name='mofvcuf', pid=-1158128058)\nnames_9 = state.register(name='hcekswklfuiu', pid=-1177130590)\nstate.where_is(name=names_1)\nnames_10 = state.register(name='ypcyzgpa', pid=-32346)\nstate.where_is(name=names_10)\nstate.unregister(name=names_2)\nstate.unregister(name=names_7)\nstate.where_is(name=names_8)\nnames_11 = state.register(name='q', pid=-6855)\nstate.where_is(name='srhddng')\nstate.where_is(name=names_10)\nnames_12 = state.register(name='spedar', pid=-9337)\nstate.where_is(name=names_1)\nstate.unregister(name=names_12)\nstate.unregister(name=names_6)\nnames_13 = state.register(name='dvvrx', pid=1574)\nstate.where_is(name=names_9)\nstate.where_is(name=names_1)\nstate.where_is(name=names_8)\nnames_14 = state.register(name='mbl', pid=87)\nnames_15 = state.register(name='r', pid=15)\nstate.where_is(name='bpbuuedchnta')\nstate.unregister(name=names_10)\nnames_16 = state.register(name='jawurmvqwrhygiin', pid=-1613)\nnames_17 = state.register(name='yq', pid=6548)\nnames_18 = state.register(name='ohko', pid=13450688181645917044235688748744790907)\nstate.where_is(name=names_14)\nnames_19 = state.register(name=names_1, pid=118)\nstate.teardown()", "arguments": {"factory": "good.NameServerComparison", "data": "data(...)"}, "how_generated": "generated during generate phase", "features": {"Retried draw from sampled_from([text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names')]).filter(lambda s: s.available(data)) to satisfy filter": "", "Retried draw from sampled_from([Rule(function=unregister, arguments={'name': Bundle(name='names', consume=True)}, bundles=[Bundle(name='names', consume=True)]), Rule(function=where_is, arguments={'name': one_of(text(alphabet='abcdefghijklmnopqrstuvwxyz'), Bundle(name='names'))}), Rule(targets=['names'], function=register, arguments={'name': text(alphabet='abcdefghijklmnopqrstuvwxyz'), 'pid': integers()})]).filter(rule_is_enabled) to satisfy filter": "", "len": 50, "failures": 0}, "timing": {"execute:test": 0.0064980031456798315, "generate:data": 4.358310252428055e-05, "generate:rule:where_is": 0.0661214163992554, "generate:rule:register": 0.07361037167720497, "generate:rule:unregister": 0.015948125859722495, "execute:rule:where_is": 0.00013241427950561047, "execute:rule:register": 0.00015004328452050686, "execute:rule:unregister": 6.883428432047367e-05}, "metadata": {"traceback": null, "predicates": {}, "sys.argv": ["/Users/harrison/.pyenv/versions/3.10.5/bin/pytest", "good.py", "-s"], "os.getpid()": 32091, "imported_at": 1709743647.0178308}, "coverage": {"/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/good.py": [17, 18, 19, 20, 21, 25, 26, 31, 32, 33, 37, 38, 43, 44, 48, 49, 52, 53], "/Users/harrison/Work/etna/workloads/Python/Nameserver/strategies/../impl.py": [8, 11, 14, 20, 23, 29]}}
